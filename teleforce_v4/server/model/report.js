var db = require('../database/db');
var async = require("async");
var moment = require('moment')
var helper = require('../helper/common')
var Promise = require('bluebird');
var dateFormat = require('dateformat');
// const { date } = require('faker/lib/locales/az');

var Report = {
    searchcallsummary: function (data, callback) {
        //console.log(data.status);
        //console.log('select (SELECT count(id)  from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and agentstatus="CANCEL" ) as CANCEL, (SELECT count(id)  from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and agentstatus="NOANSWER" ) as NOANSWER, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and agentstatus="ANSWER" ) as ANSWER, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and CallTypeID=0 ) as OUTGOING, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and CallTypeID=1 ) as DIALER,(SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and CallTypeID=2 ) as INCOMMING, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and feedback="interested" ) as interested, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and feedback="not_interested" ) as not_interested, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and feedback="schedule" ) as schedule');
        return db.query('select (SELECT count(id)  from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and agentstatus="CANCEL" ) as CANCEL, (SELECT count(id)  from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and (agentstatus="NOANSWER" or agentstatus = "BUSY" or agentstatus is NULL or agentstatus = "CALLING") ) as NOANSWER, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and agentstatus="ANSWER" ) as ANSWER, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and CallTypeID=0 ) as OUTGOING, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and CallTypeID=1 ) as DIALER,(SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and CallTypeID=2 ) as INCOMMING, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and feedback="interested" ) as interested, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and feedback="not_interested" ) as not_interested, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and feedback="schedule" ) as schedule', [], callback);
    },
    searchcallsummarytype: function (data, callback) {
        //console.log(data.status);
        return db.query('SELECT count(id) as cnt from tf_cdr where accountid=? and  DATE(CallStartTime)>=? and DATE(CallStartTime)<=? and CallTypeID=? ', [data.userid, data.startdate, data.enddate, data.type], callback);
    },
    searchcallsummarylead: function (data, callback) {
        //console.log(data.status);
        return db.query('SELECT count(id) as cnt from tf_cdr where accountid=? and  DATE(CallStartTime)>=? and DATE(CallStartTime)<=? and feedback=? ', [data.userid, data.startdate, data.enddate, data.lead], callback);
    },
    getagentloginlogoutdata: function (data, callback) {
        //'SELECT t.uid,a.account_name,t.date as logintime,(SELECT logout_time FROM `tf_loginactivity` WHERE uid=t.uid and DATE(date)=DATE(t.date) order by id desc limit 1) AS logout_time,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(logout_time, date)))) as timediff FROM `tf_loginactivity` WHERE uid=t.uid and DATE(date)=DATE(t.date)) AS totaltime,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM `tf_breaktime` b WHERE account_id=t.uid AND DATE(start_time)=DATE(t.date)) as breaktime,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(stop_time, start_time)))) as totalholdcalltime FROM `tf_callingpausetime` WHERE account_id=t.uid and DATE(date)=DATE(t.date) and status=1 AND reason_id IN (SELECT reason_id FROM  tf_hold_calling_reason where ACW=1)) AS totalholdcalltime,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = t.uid ) limit 0,1) AS closetime FROM tf_loginactivity t INNER JOIN tf_account_table a ON a.account_id=t.uid WHERE (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND t.uid IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ') GROUP BY t.uid,DATE(t.date)'
        //console.log(('SELECT t.uid,a.account_name,t.date as logintime,(SELECT logout_time FROM `tf_loginactivity` WHERE uid=t.uid and DATE(date)=DATE(t.date) order by id desc limit 1) AS logout_time,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(logout_time, date)))) as timediff FROM `tf_loginactivity` WHERE uid=t.uid and DATE(date)=DATE(t.date)) AS totaltime,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM `tf_breaktime` b WHERE account_id=t.uid AND DATE(start_time)=DATE(t.date)) as breaktime,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(stop_time, start_time)))) as totalholdcalltime FROM `tf_callingpausetime` WHERE account_id=t.uid and DATE(date)=DATE(t.date) and status=1 AND reason_id IN (SELECT reason_id FROM  tf_hold_calling_reason where ACW=1)) AS totalholdcalltime,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = t.uid ) limit 0,1) AS closetime FROM tf_loginactivity t INNER JOIN tf_account_table a ON a.account_id=t.uid WHERE (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND t.uid IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ') GROUP BY t.uid,DATE(t.date)'));
        // console.log('SELECT t.uid,a.account_name,t.date AS logintime,(SELECT logout_time FROM tf_loginactivity WHERE uid=t.uid AND DATE(DATE)=DATE(t.date) ORDER BY id DESC LIMIT 1) AS logout_time,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(logout_time, DATE)))) AS TIMEDIFF FROM tf_loginactivity WHERE uid=t.uid AND DATE(DATE)=DATE(t.date)) AS totaltime,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM tf_breaktime b WHERE account_id=t.uid AND DATE(start_time)=DATE(t.date)) AS breaktime,(SELECT CloseTime FROM HuntGroup WHERE GroupID IN (SELECT HuntGroupID FROM HuntGroupDetail WHERE AgentID = t.uid ) LIMIT 0,1) AS closetime FROM tf_loginactivity t INNER JOIN tf_account_table a ON a.account_id=t.uid WHERE t.date BETWEEN "'+data.startdate+' 00:00:00" AND "'+data.enddate+ ' 23:59:59" AND t.uid IN (SELECT account_id FROM tf_account_table WHERE created_by = '+data.userid+') GROUP BY t.uid,DATE(t.date)');
        return db.query('SELECT t.uid,a.account_name,t.date AS logintime,(SELECT logout_time FROM tf_loginactivity WHERE uid=t.uid AND DATE(DATE)=DATE(t.date) ORDER BY id DESC LIMIT 1) AS logout_time,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(logout_time, DATE)))) AS TIMEDIFF FROM tf_loginactivity WHERE uid=t.uid AND DATE(DATE)=DATE(t.date)) AS totaltime,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM tf_breaktime b WHERE account_id=t.uid AND DATE(start_time)=DATE(t.date)) AS breaktime,(SELECT CloseTime FROM HuntGroup WHERE GroupID IN (SELECT HuntGroupID FROM HuntGroupDetail WHERE AgentID = t.uid ) LIMIT 0,1) AS closetime FROM tf_loginactivity t INNER JOIN tf_account_table a ON a.account_id=t.uid WHERE t.date BETWEEN "' + data.startdate + ' 00:00:00" AND "' + data.enddate + ' 23:59:59" AND t.uid IN (SELECT account_id FROM tf_account_table WHERE created_by = ' + data.userid + ') GROUP BY t.uid,DATE(t.date)', [], callback);
    },
    getagentloginactivitydata: function (data, callback) {
        where = 'DATE(date)>="' + data.startdate + '" AND DATE(date)<= "' + data.enddate + '" AND a.created_by=' + data.userid;
        if (data.agentid > 0) {
            where += ' AND la.uid=' + data.agentid;
        }
        console.log('SELECT la.id,la.uid,la.date,la.date as login,la.logout_time as logout,la.ip,a.account_name as agent FROM `tf_loginactivity` la LEFT JOIN `tf_account_table` a ON la.uid=a.account_id WHERE ' + where + ' ORDER BY date desc');
        return db.query('SELECT la.id,la.uid,la.date,la.date as login,la.logout_time as logout,la.ip,a.account_name as agent FROM `tf_loginactivity` la LEFT JOIN `tf_account_table` a ON la.uid=a.account_id WHERE ' + where + ' ORDER BY date desc', [], callback);
    },
    getagentperformancedata: function (data, callback) {
        // return db.query('SELECT a.account_id,a.account_name,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM `tf_breaktime` b WHERE account_id=a.account_id AND start_time >= "'+data.startdate+' 00:00:00" AND start_time <= "'+data.enddate+' 23:59:59" ) AS breaktime,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS holdcalltime FROM `tf_callingpausetime` b WHERE account_id=a.account_id AND b.date >= "'+data.startdate+'" AND b.date <= "'+data.enddate+'" AND b.status=1 AND b.reason_id IN (SELECT reason_id FROM tf_hold_calling_reason WHERE ACW=1) ) AS totalholdcalltime ,  (SELECT (SUM(AgentTalkTime)) FROM `tf_cdr` WHERE AgentID=a.account_id AND (CallStartTime) >= "'+data.startdate+' 00:00:00" AND (CallStartTime) <= "'+data.enddate+' 23:59:59") AS talktime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND (CallStartTime) >= "'+data.startdate+' 00:00:00" AND (CallStartTime) <= "'+data.enddate+' 23:59:59" AND CallTypeID IN (0,1,2)) AS totalcalls,(SELECT WrapUpTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) LIMIT 0,1) AS wrapuptime,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) LIMIT 0,1) AS closetime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND (CallStartTime)>= "'+data.startdate+' 00:00:00" AND DATE(CallStartTime) <= "'+data.enddate+' 23:59:59" AND CallTalkTime>0) AS answercalls,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND (CallStartTime)>= "'+data.startdate+' 00:00:00" AND (CallStartTime) <= "'+data.enddate+' 23:59:59" AND CallTypeID IN(0,1)) AS outboundcalls,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND (CallStartTime)>= "'+data.startdate+' 00:00:00" AND (CallStartTime) <="'+data.enddate+' 23:59:59" AND CallTalkTime>0 AND CallTypeID IN(0,1)) AS outboundconnectcalls,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND (CallStartTime)>= "'+data.startdate+' 00:00:00" AND (CallStartTime) <= "'+data.enddate+' 23:59:59" AND  CallTypeID=2) AS inboundcalls,(SELECT COUNT(c.id) FROM `tf_cdr` c LEFT JOIN `tf_agent_missedcall` m ON c.id=m.cdrid WHERE m.calldate >="'+data.startdate+' 00:00:00" AND m.calldate <="'+data.enddate+' 23:59:59" AND c.AgentID=a.account_id ORDER BY m.calldate DESC) AS missedcalls  FROM tf_account_table a WHERE  created_by ='+data.userid,callback)
        return db.query('SELECT t.uid,a.account_id,a.account_name,t.date,(SELECT logout_time FROM `tf_loginactivity` WHERE uid=t.uid and DATE(date)=DATE(t.date) order by id desc limit 1) AS logout_time, (SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM `tf_breaktime` b WHERE account_id=t.uid AND DATE(start_time) >= "' + data.startdate + '" AND DATE(start_time) <= "' + data.enddate + '" ) as breaktime,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS holdcalltime FROM `tf_callingpausetime` b WHERE account_id=a.account_id AND b.date >= "' + data.startdate + '" AND b.date <= "' + data.enddate + '" and b.status=1 AND b.reason_id IN (SELECT reason_id FROM tf_hold_calling_reason where ACW=1) ) as totalholdcalltime ,  (SELECT (SUM(AgentTalkTime)) FROM `tf_cdr` WHERE AgentID=a.account_id AND DATE(CallStartTime) >= "' + data.startdate + '" AND DATE(CallStartTime) <= "' + data.enddate + '") AS talktime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND DATE(CallStartTime) >= "' + data.startdate + '" AND DATE(CallStartTime) <= "' + data.enddate + '" AND CallTypeID IN (0,1)) AS totalcalls,(SELECT WrapUpTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) limit 0,1) AS wrapuptime,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) limit 0,1) AS closetime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND DATE(CallStartTime)>= "' + data.startdate + '" AND DATE(CallStartTime) <= "' + data.enddate + '" AND CallTalkTime>0) AS answercalls  FROM tf_loginactivity t INNER JOIN tf_account_table a ON a.account_id=t.uid WHERE DATE(date)>= "' + data.startdate + '" AND DATE(date)<="' + data.enddate + '" AND t.uid IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ') GROUP BY t.uid', [], callback);
    },
    getresourceavailability: function (date, callback) {
        //console.log(data.status);
        return db.query('SELECT A.account_name,A.account_id,count(DN.did) as allocateddid,(select count(did) from tf_did_numbers) as totalallotdid,(SELECT count(did) FROM `tf_did`) as totaldid, (SELECT COUNT(DISTINCT DID) FROM `tf_cdr` WHERE accountid=DN.account_id and CallStartTime>="' + date + '") as usedid,(SELECT COUNT(DISTINCT DID) FROM `tf_cdr` WHERE CallStartTime>="' + date + '") AS totalusedid FROM tf_did_numbers DN LEFT JOIN tf_account_table A ON A.account_id=DN.account_id GROUP BY DN.account_id order by A.account_name asc', [date], callback);
    },
    getagenthourlycalldata: function (data, callback) {
        //console.log(data.status);
        // console.log('SELECT AgentName,AgentID,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "'+data.startdate+' 10:00:00" AND "'+data.startdate+' 11:00:00") AS count1,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "'+data.startdate+' 11:00:00" AND "'+data.startdate+' 12:00:00") AS count2,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "'+data.startdate+' 12:00:00" AND "'+data.startdate+' 13:00:00") AS count3,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "'+data.startdate+' 14:00:00" AND "'+data.startdate+' 15:00:00") AS count4,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "'+data.startdate+' 15:00:00" AND "'+data.startdate+' 16:00:00") AS count5,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "'+data.startdate+' 16:00:00" AND "'+data.startdate+' 17:00:00") AS count6,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "'+data.startdate+' 17:00:00" AND "'+data.startdate+' 18:00:00") AS count7 FROM `tf_cdr` C INNER JOIN tf_account_table A on A.account_id=C.AgentID WHERE A.created_by='+data.userid+' and DATE(C.CallStartTime)= "'+data.startdate+'"  GROUP BY C.AgentID');
        return db.query('SELECT AgentName,AgentID,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 09:00:00" AND "' + data.startdate + ' 10:00:00") AS count1,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 10:00:00" AND "' + data.startdate + ' 11:00:00") AS count2,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 11:00:00" AND "' + data.startdate + ' 12:00:00") AS count3,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 12:00:00" AND "' + data.startdate + ' 13:00:00") AS count4,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 13:00:00" AND "' + data.startdate + ' 14:00:00") AS count5,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 14:00:00" AND "' + data.startdate + ' 15:00:00") AS count6,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 15:00:00" AND "' + data.startdate + ' 16:00:00") AS count7,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 16:00:00" AND "' + data.startdate + ' 17:00:00") AS count8,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 17:00:00" AND "' + data.startdate + ' 18:00:00") AS count9,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 18:00:00" AND "' + data.startdate + ' 19:00:00") AS count10,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 00:00:00" AND "' + data.startdate + ' 01:00:00") AS count11,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 01:00:00" AND "' + data.startdate + ' 02:00:00") AS count12,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 02:00:00" AND "' + data.startdate + ' 03:00:00") AS count13,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 03:00:00" AND "' + data.startdate + ' 04:00:00") AS count14,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 04:00:00" AND "' + data.startdate + ' 05:00:00") AS count15,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 05:00:00" AND "' + data.startdate + ' 06:00:00") AS count16,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 08:00:00" AND "' + data.startdate + ' 07:00:00") AS count17,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 07:00:00" AND "' + data.startdate + ' 08:00:00") AS count18,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 08:00:00" AND "' + data.startdate + ' 09:00:00") AS count19,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 19:00:00" AND "' + data.startdate + ' 20:00:00") AS count20,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 20:00:00" AND "' + data.startdate + ' 21:00:00") AS count21,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 21:00:00" AND "' + data.startdate + ' 22:00:00") AS count22,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 22:00:00" AND "' + data.startdate + ' 23:00:00") AS count23,(SELECT COUNT(id) FROM `tf_cdr` WHERE AgentID=C.AgentID AND CallStartTime between "' + data.startdate + ' 23:00:00" AND "' + data.startdate + ' 23:59:59") AS count24 FROM `tf_cdr` C INNER JOIN tf_account_table A on A.account_id=C.AgentID WHERE A.created_by=' + data.userid + ' and DATE(C.CallStartTime)= "' + data.startdate + '"  GROUP BY C.AgentID', [], callback);
    },
    gethourlycalldata: function (data, callback) {
        //console.log(data.status);
        //console.log('SELECT (SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 10:00:00" AND "' + data.startdate + ' 11:00:00") AS count1,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 11:00:00" AND "' + data.startdate + ' 12:00:00") AS count2,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 12:00:00" AND "' + data.startdate + ' 13:00:00") AS count3,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 14:00:00" AND "' + data.startdate + ' 15:00:00") AS count4,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 15:00:00" AND "' + data.startdate + ' 16:00:00") AS count5,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 16:00:00" AND "' + data.startdate + ' 17:00:00") AS count6,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 17:00:00" AND "' + data.startdate + ' 18:00:00") AS count7 FROM `tf_cdr` C WHERE C.accountid=' + data.userid + ' and DATE(C.CallStartTime)="'+data.startdate+'" GROUP BY C.accountid');
        var timezone = '"+5:30"'
        if (data.userid == 1556) {
            timezone = '"-4:0"'
        }
        //console.log('SELECT (SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 9:00:00" AND "' + data.startdate + ' 10:00:00") AS count1,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 10:00:00" AND "' + data.startdate + ' 11:00:00") AS count2,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 11:00:00" AND "' + data.startdate + ' 12:00:00") AS count3,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 12:00:00" AND "' + data.startdate + ' 13:00:00") AS count4,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 13:00:00" AND "' + data.startdate + ' 14:00:00") AS count5,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 14:00:00" AND "' + data.startdate + ' 15:00:00") AS count6,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 15:00:00" AND "' + data.startdate + ' 16:00:00") AS count7,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 16:00:00" AND "' + data.startdate + ' 17:00:00") AS count8,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 17:00:00" AND "' + data.startdate + ' 18:00:00") AS count9,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 18:00:00" AND "' + data.startdate + ' 19:00:00") AS count10,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 00:00:00" AND "' + data.startdate + ' 01:00:00") AS count11,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 01:00:00" AND "' + data.startdate + ' 02:00:00") AS count12,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 02:00:00" AND "' + data.startdate + ' 03:00:00") AS count13,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 03:00:00" AND "' + data.startdate + ' 04:00:00") AS count14,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 04:00:00" AND "' + data.startdate + ' 05:00:00") AS count15,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 05:00:00" AND "' + data.startdate + ' 06:00:00") AS count16,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 06:00:00" AND "' + data.startdate + ' 07:00:00") AS count17,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 07:00:00" AND "' + data.startdate + ' 08:00:00") AS count18,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 08:00:00" AND "' + data.startdate + ' 09:00:00") AS count19,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 19:00:00" AND "' + data.startdate + ' 20:00:00") AS count20,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 20:00:00" AND "' + data.startdate + ' 21:00:00") AS count21,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 21:00:00" AND "' + data.startdate + ' 22:00:00") AS count22,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 22:00:00" AND "' + data.startdate + ' 23:00:00") AS count23,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",'+timezone+') between "' + data.startdate + ' 23:00:00" AND "' + data.startdate + ' 23:59:59") AS count24 FROM `tf_cdr` C WHERE C.accountid=' + data.userid + ' and DATE(C.CallStartTime)="' + data.startdate + '" GROUP BY C.accountid');
        return db.query('SELECT (SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 9:00:00" AND "' + data.startdate + ' 10:00:00") AS count1,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 10:00:00" AND "' + data.startdate + ' 11:00:00") AS count2,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 11:00:00" AND "' + data.startdate + ' 12:00:00") AS count3,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 12:00:00" AND "' + data.startdate + ' 13:00:00") AS count4,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 13:00:00" AND "' + data.startdate + ' 14:00:00") AS count5,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 14:00:00" AND "' + data.startdate + ' 15:00:00") AS count6,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 15:00:00" AND "' + data.startdate + ' 16:00:00") AS count7,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 16:00:00" AND "' + data.startdate + ' 17:00:00") AS count8,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 17:00:00" AND "' + data.startdate + ' 18:00:00") AS count9,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 18:00:00" AND "' + data.startdate + ' 19:00:00") AS count10,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 00:00:00" AND "' + data.startdate + ' 01:00:00") AS count11,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 01:00:00" AND "' + data.startdate + ' 02:00:00") AS count12,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 02:00:00" AND "' + data.startdate + ' 03:00:00") AS count13,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 03:00:00" AND "' + data.startdate + ' 04:00:00") AS count14,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 04:00:00" AND "' + data.startdate + ' 05:00:00") AS count15,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 05:00:00" AND "' + data.startdate + ' 06:00:00") AS count16,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 06:00:00" AND "' + data.startdate + ' 07:00:00") AS count17,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 07:00:00" AND "' + data.startdate + ' 08:00:00") AS count18,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 08:00:00" AND "' + data.startdate + ' 09:00:00") AS count19,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 19:00:00" AND "' + data.startdate + ' 20:00:00") AS count20,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 20:00:00" AND "' + data.startdate + ' 21:00:00") AS count21,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 21:00:00" AND "' + data.startdate + ' 22:00:00") AS count22,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 22:00:00" AND "' + data.startdate + ' 23:00:00") AS count23,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CONVERT_TZ (CallStartTime, "+5:30",' + timezone + ') between "' + data.startdate + ' 23:00:00" AND "' + data.startdate + ' 23:59:59") AS count24 FROM `tf_cdr` C WHERE C.accountid=' + data.userid + ' and DATE(C.CallStartTime)="' + data.startdate + '" GROUP BY C.accountid', [], callback);
    },
    getbillingdata: function (date, callback) {
        //console.log(data.status);
        return db.query('SELECT A.company_name,A.account_name,A.email,A.mobile,A.expiry_date,A.create_date,A.last_modify_date,A.total_renew,A.package_id,P.package_validity, P.package_name,DATEDIFF(A.expiry_date,"' + date + '") AS days,(SELECT Bill_ID FROM `Billing_data` WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS billid,(SELECT Plan_user FROM `Billing_data` WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS usercount,(SELECT Plan_channel FROM `Billing_data` WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) as planchannel,(SELECT Final_amount FROM `Billing_data` WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS totalamount,(SELECT Plan_discount FROM `Billing_data` WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS bill_discount from tf_account_table A LEFT JOIN tf_packages P ON P.package_id=A.package_id WHERE A.account_type=2', [date], callback);
    },
    getmanagerdialresultdata: function (data, callback) {
        //console.log(data.status);
        return db.query('SELECT C.accountid,C.callType,(SELECT COUNT(DISTINCT CallStartTime) FROM tf_cdr where CallTypeID=C.CallTypeID AND accountid=C.accountid AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") AS totalcalls,(SELECT COUNT(DISTINCT CallStartTime) FROM tf_cdr where CallTypeID=C.CallTypeID AND accountid=C.accountid AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '" AND feedback="interested") AS interested,(SELECT COUNT(DISTINCT CallStartTime) FROM tf_cdr where CallTypeID=C.CallTypeID AND accountid=C.accountid AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '" AND feedback="not interested") AS not_interested,(SELECT COUNT(DISTINCT CallStartTime) FROM tf_cdr where CallTypeID=C.CallTypeID AND accountid=C.accountid AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '" AND feedback="schedule") AS schedule,(SELECT COUNT(DISTINCT CallStartTime) FROM tf_cdr where CallTypeID=C.CallTypeID AND accountid=C.accountid AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '" AND CallStatus="ANSWER") AS ANSWER,(SELECT COUNT(DISTINCT CallStartTime) FROM tf_cdr where CallTypeID=C.CallTypeID AND accountid=C.accountid AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '" AND (CallStatus="NOANSWER" OR CallStatus="CANCEL")) AS NOANSWER FROM `tf_cdr` C WHERE C.accountid=' + data.userid + ' and DATE(C.CallStartTime)>="' + data.startdate + '" AND DATE(C.CallStartTime)<="' + data.enddate + '" GROUP BY C.CallTypeID', [], callback);
    },
    getmanagercampaigndata: function (data, callback) {
        // last update 21 oct 2022 return db.query('SELECT campaign_name,created_date,campaign_id,total_contacts,total_calls,answered,not_answered,scheduled,not_interested,IFNULL(ROUND(answered/total_calls*100),0)AS connected_ratio FROM (SELECT c.cam_name AS campaign_name,DATE(c.create_date) AS created_date,c.camid AS campaign_id,COUNT(cont_id) AS total_contacts,(SELECT COUNT(*) FROM `tf_campaigns_numbers` AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") AS total_calls,(SELECT COUNT(*)  FROM `tf_campaigns_numbers` AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  AND cdr.CallStatus="ANSWER" AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") AS answered,(SELECT COUNT(*) FROM `tf_campaigns_numbers` AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid =c1.numid WHERE c1.cam_id = c.camid AND (cdr.CallStatus!="ANSWER") AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") AS not_answered,(SELECT COUNT(*)  FROM `tf_campaigns_numbers`AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  AND cdr.feedback="schedule" AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") AS scheduled,(SELECT COUNT(*)  FROM `tf_campaigns_numbers` AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  AND cdr.feedback="not interested" AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") AS not_interested FROM tf_campaigns_numbers AS cn LEFT JOIN tf_campaigns AS c ON c.camid=cn.cam_id WHERE cn.account_id=' + data.userid + ' AND  DATE(cn.date) BETWEEN "' + data.startdate + '" AND "' + data.enddate + '"  GROUP BY cam_id)AS g', callback)
        console.log('SELECT campaign_name,created_date,campaign_id,total_contacts,total_calls,answered,not_answered,scheduled,not_interested,IFNULL(ROUND(answered/total_calls*100),0)AS connected_ratio FROM (SELECT c.cam_name AS campaign_name,DATE(c.create_date) AS created_date,c.camid AS campaign_id,COUNT(cn.cont_id) AS total_contacts,(SELECT COUNT(cdr.id) FROM tf_campaigns_numbers AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid AND callstarttime BETWEEN "' + data.startdate + '" AND "' + data.enddate + '") AS total_calls,(SELECT COUNT(cdr.id)  FROM tf_campaigns_numbers AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  AND cdr.callduration>0 AND callstarttime BETWEEN "' + data.startdate + '" AND "' + data.enddate + '") AS answered,(SELECT COUNT(cdr.id) FROM tf_campaigns_numbers AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid =c1.numid WHERE c1.cam_id = c.camid AND cdr.Callduration=0 AND callstarttime BETWEEN "' + data.startdate + '" AND "' + data.enddate + '") AS not_answered,(SELECT COUNT(cdr.id)  FROM tf_campaigns_numbers AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  AND cdr.feedback="schedule" AND callstarttime BETWEEN "' + data.startdate + '" AND "' + data.enddate + '") AS scheduled,(SELECT COUNT(cdr.id)  FROM tf_campaigns_numbers AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  AND cdr.feedback="not interested" AND callstarttime BETWEEN "' + data.startdate + '" AND "' + data.enddate + '") AS not_interested FROM tf_campaigns_numbers AS cn LEFT JOIN tf_campaigns AS c ON c.camid=cn.cam_id LEFT JOIN tf_cdr cdr1 ON cn.numid=cdr1.auto_numid WHERE cn.account_id=' + data.userid + ' AND cdr1.callstarttime BETWEEN "' + data.startdate + '" AND "' + data.enddate + '" GROUP BY cam_id)AS g');
        return db.query('SELECT campaign_name,created_date,campaign_id,total_contacts,total_calls,answered,not_answered,scheduled,not_interested,IFNULL(ROUND(answered/total_calls*100),0)AS connected_ratio FROM (SELECT c.cam_name AS campaign_name,DATE(c.create_date) AS created_date,c.camid AS campaign_id,COUNT(cn.cont_id) AS total_contacts,(SELECT COUNT(cdr.id) FROM tf_campaigns_numbers AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid AND callstarttime BETWEEN "' + data.startdate + '" AND "' + data.enddate + '") AS total_calls,(SELECT COUNT(cdr.id)  FROM tf_campaigns_numbers AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  AND cdr.callduration>0 AND callstarttime BETWEEN "' + data.startdate + '" AND "' + data.enddate + '") AS answered,(SELECT COUNT(cdr.id) FROM tf_campaigns_numbers AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid =c1.numid WHERE c1.cam_id = c.camid AND cdr.Callduration=0 AND callstarttime BETWEEN "' + data.startdate + '" AND "' + data.enddate + '") AS not_answered,(SELECT COUNT(cdr.id)  FROM tf_campaigns_numbers AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  AND cdr.feedback="schedule" AND callstarttime BETWEEN "' + data.startdate + '" AND "' + data.enddate + '") AS scheduled,(SELECT COUNT(cdr.id)  FROM tf_campaigns_numbers AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  AND cdr.feedback="not interested" AND callstarttime BETWEEN "' + data.startdate + '" AND "' + data.enddate + '") AS not_interested FROM tf_campaigns_numbers AS cn LEFT JOIN tf_campaigns AS c ON c.camid=cn.cam_id LEFT JOIN tf_cdr cdr1 ON cn.numid=cdr1.auto_numid WHERE cn.account_id=' + data.userid + ' AND cdr1.callstarttime BETWEEN "' + data.startdate + '" AND "' + data.enddate + '" GROUP BY cam_id)AS g',callback)
    },
    getmanagerminuteassigndata: function (data, callback) {
        //console.log('SELECT c.cam_name,c.create_date,c.camid,cn.numid,(select CallStartTime FROM tf_cdr where auto_numid=cn.numid) as starttime,(select CallerName FROM tf_cdr where auto_numid=cn.numid) as CallerName,(select CallerNumber FROM tf_cdr where auto_numid=cn.numid) as CallerNumber,(select AgentName FROM tf_cdr where auto_numid=cn.numid) as AgentName FROM tf_campaigns_numbers as cn inner join tf_campaigns as c on c.camid=cn.cam_id where cn.account_id='+data.userid+' and cn.cam_id='+data.campid+' and DATE(c.create_date) between "'+data.startdate+'" and "'+data.enddate+'"');
        return db.query('SELECT c.cam_name,c.create_date,c.camid,cn.numid,(select CallStartTime FROM tf_cdr where auto_numid=cn.numid and CallStartTime>="' + data.startdate + '" and CallStartTime<="' + data.enddate + '") as starttime,TIMEDIFF((select CallStartTime FROM tf_cdr where auto_numid=cn.numid and CallStartTime>="' + data.startdate + '" and CallStartTime<="' + data.enddate + '"), c.create_date) AS timediff,(select CallerName FROM tf_cdr where auto_numid=cn.numid and CallStartTime>="' + data.startdate + '" and CallStartTime<="' + data.enddate + '") as CallerName,(select CallerNumber FROM tf_cdr where auto_numid=cn.numid and CallStartTime>="' + data.startdate + '" and and CallStartTime<="' + data.enddate + '") as CallerNumber,(select AgentName FROM tf_cdr where auto_numid=cn.numid and CallStartTime>="' + data.startdate + '" and CallStartTime<="' + data.enddate + '") as AgentName FROM tf_campaigns_numbers as cn inner join tf_campaigns as c on c.camid=cn.cam_id where cn.account_id=' + data.userid + ' and cn.cam_id=' + data.campid, [], callback);
    },
    getagentcalldurationdata: function (data, callback) {
        //return db.query('SELECT A.account_name,A.account_id,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=1 AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '")) AS totaldialer,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=1 AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '") AND CallStatus="TALKTOAGENT") AS dialerduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=1 AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <= "' + data.enddate + '") AND CallStatus="TALKTOAGENT") AS dialerconnectcalls,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=2 AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '")) AS totalincoming,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=2 and (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '") AND CallTalkTime>0) AS incomingduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=2 and (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '") AND CallTalkTime>0) AS incomingconnectcalls, (SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=0 AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '")) AS totaloutgoing,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=0 AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '") AND CallStatus="ANSWER" ) AS outgoingduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=0 AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '") AND CallStatus="ANSWER") AS outgoingconnectcalls,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '") AND (CallStatus="ANSWER" OR CallStatus="TALKTOAGENT")) AS totalduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '") AND (CallStatus="ANSWER" OR CallStatus="TALKTOAGENT" ) AND CallTalkTime>0) AS totalconnectcalls,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '")) AS totalcalls FROM `tf_account_table` A LEFT JOIN tf_cdr C ON C.AgentID=A.account_id WHERE A.created_by=' + data.userid + ' AND DATE(C.CallStartTime) >= "' + data.startdate + '" AND  DATE(C.CallStartTime) <="' + data.enddate + '" GROUP BY A.account_id', [], callback);
        return db.query('SELECT A.account_name,A.account_id, COUNT(IF(AgentID=A.account_id AND CallTypeID=1,1,NULL)) AS totaldialer, SUM(IF( AgentID=A.account_id AND CallTypeID=1,calltalktime,0)) AS dialerduration, COUNT(IF(AgentID=A.account_id AND CallTypeID=1 AND calltalktime>0,1,NULL)) AS dialerconnectcalls, COUNT(IF(AgentID=A.account_id AND CallTypeID=2,1,NULL)) AS totalincoming, SUM(IF( AgentID=A.account_id AND CallTypeID=2,calltalktime,0)) AS incomingduration, COUNT(IF(AgentID=A.account_id AND CallTypeID=2 AND calltalktime>0,1,NULL)) AS incomingconnectcalls,COUNT(IF(AgentID=A.account_id AND CallTypeID=0,1,NULL)) AS totaloutgoing, SUM(IF( AgentID=A.account_id AND CallTypeID=0,calltalktime,0)) AS outgoingduration, COUNT(IF(AgentID=A.account_id AND CallTypeID=0 AND calltalktime>0,1,NULL)) AS outgoingconnectcalls,COUNT(IF(AgentID=A.account_id,1,NULL)) AS totalcalls, SUM(IF( AgentID=A.account_id,calltalktime,0)) AS totalduration, COUNT(IF(AgentID=A.account_id AND calltalktime>0,1,NULL)) AS totalconnectcalls FROM tf_account_table A LEFT JOIN tf_cdr C ON C.AgentID=A.account_id WHERE A.created_by=' + data.userid + ' AND C.cdrstatus=0 AND C.CallStartTime BETWEEN "' + data.startdate + ' 00:00:00" AND "' + data.enddate + ' 23:59:59" GROUP BY A.account_id;', [], callback);
   // return db.query('SELECT A.account_name,A.account_id,(SELECT IFNULL(COUNT(id),0) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=1 AND ((CallStartTime) >= "' + data.startdate + ' 00:00:00" AND (CallStartTime) <="' + data.enddate + ' 23:59:59") AND cdrstatus=0) AS totaldialer,(SELECT IFNULL(SUM(calltalktime),0) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=1 AND ((CallStartTime) >= "' + data.startdate + ' 00:00:00" AND (CallStartTime) <="' + data.enddate + ' 23:59:59") AND CallTalkTime>0) AS dialerduration,(SELECT IFNULL(COUNT(id),0) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=1 AND ((CallStartTime) >= "' + data.startdate + ' 00:00:00" AND (CallStartTime) <= "' + data.enddate + ' 23:59:59") AND calltalktime>0 AND cdrstatus=0 ) AS dialerconnectcalls,(SELECT IFNULL(COUNT(id),0) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=2 AND ((CallStartTime) >= "' + data.startdate + ' 00:00:00" AND (CallStartTime) <="' + data.enddate + ' 23:59:59")AND cdrstatus=0) AS totalincoming,(SELECT IFNULL(SUM(calltalktime),0) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=2 AND ((CallStartTime) >= "' + data.startdate + ' 00:00:00" AND (CallStartTime) <="' + data.enddate + ' 23:59:59") AND CallTalkTime>0) AS incomingduration,(SELECT IFNULL(COUNT(id),0) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=2 AND ((CallStartTime) >= "' + data.startdate + ' 00:00:00" AND (CallStartTime) <="' + data.enddate + ' 23:59:59") AND CallTalkTime>0 AND cdrstatus=0) AS incomingconnectcalls, (SELECT IFNULL(COUNT(id),0) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=0 AND ((CallStartTime) >= "' + data.startdate + ' 00:00:00" AND (CallStartTime) <="' + data.enddate + ' 23:59:59")AND cdrstatus=0) AS totaloutgoing,(SELECT IFNULL(SUM(calltalktime),0) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=0 AND ((CallStartTime) >= "' + data.startdate + ' 00:00:00" AND (CallStartTime) <="' + data.enddate + ' 23:59:59") AND CallTalkTime>0 ) AS outgoingduration,(SELECT IFNULL(COUNT(id),0) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=0 AND ((CallStartTime) >= "' + data.startdate + ' 00:00:00" AND (CallStartTime) <="' + data.enddate + ' 23:59:59") AND calltalktime>0 AND cdrstatus=0 ) AS outgoingconnectcalls,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id AND ((CallStartTime) >= "' + data.startdate + ' 00:00:00" AND (CallStartTime) <="' + data.enddate + ' 23:59:59") AND CallTalkTime>0) AS totalduration,(SELECT IFNULL(COUNT(id),0) FROM tf_cdr WHERE AgentID=A.account_id AND ((CallStartTime) >= "' + data.startdate + ' 00:00:00" AND (CallStartTime) <="' + data.enddate + ' 23:59:59") AND calltalktime>0 AND cdrstatus=0 AND CallTalkTime>0) AS totalconnectcalls,(SELECT IFNULL(COUNT(id),0) FROM tf_cdr WHERE AgentID=A.account_id AND ((CallStartTime) >= "' + data.startdate + ' 00:00:00" AND (CallStartTime) <="' + data.enddate + ' 23:59:59") AND cdrstatus=0) AS totalcalls FROM `tf_account_table` A LEFT JOIN tf_cdr C ON C.AgentID=A.account_id WHERE A.created_by=' + data.userid + ' AND DATE(C.CallStartTime) >= "' + data.startdate + ' 00:00:00" AND  DATE(C.CallStartTime) <="' + data.enddate + ' 23:59:59" GROUP BY A.account_id', [], callback);
    },
    managercallbacksummary: function (data, callback) {
        //console.log(data.status);
        return db.query('SELECT scheduledate,COUNT(*) AS totalcalls,CallStartTime FROM tf_cdr where accountid=' + data.userid + ' and DATE(scheduledate) between "' + data.startdate + '" and "' + data.enddate + '"', [], callback);
        //return db.query('SELECT scheduledate,COUNT(*) AS totalcalls,CallStartTime FROM tf_cdr where accountid='+data.userid+' and DATE(scheduledate) between "'+data.startdate+'" and "'+data.enddate+'" GROUP BY DATE(CallStartTime) ORDER BY DATE(scheduledate) DESC', [], callback);
    },
    managercallbackdetail: function (data, callback) {
        //console.log(data.status);
        return db.query('SELECT C.scheduledate,C.CallStartTime,A.account_name,C.CallerName,C.CallerNumber FROM tf_cdr C INNER JOIN tf_account_table A on A.account_id=C.AgentID where A.created_by=' + data.userid + ' AND DATE(C.scheduledate)!="" AND DATE(scheduledate) between "' + data.startdate + '" and "' + data.enddate + '" ORDER BY DATE(C.scheduledate) DESC', [], callback);
    },
    getchannelutilizationdata: function (id, callback) {
        //console.log(data.status);
        return db.query('SELECT account_name,channels,(SELECT SUM(channels) FROM tf_account_table WHERE account_type = 2 ) AS totalallotchannels,(SELECT COUNT(*) FROM tf_channel) AS totalchannels FROM tf_account_table WHERE account_type = 2', [], callback);
    },
    getrenewalbillingdata: function (data, callback) {
        //console.log(data.status);
        if (data.type == 30) {
            return db.query('SELECT U.renew_account_manager,T.account_name AS SalesManager,U.account_id,U.company_name,U.account_name,U.email,U.mobile,U.expiry_date,U.create_date,U.last_modify_date,U.total_renew,U.package_id,U.validity,U.package_validity,U.package_name,U.days,U.usercount,U.planchannel,U.totalamount,U.bill_discount FROM(SELECT A.renew_account_manager AS renew_account_manager,A.account_id AS account_id,A.company_name AS company_name,A.account_name AS account_name,A.email AS email,A.mobile AS mobile,A.expiry_date AS expiry_date,A.create_date AS create_date,A.last_modify_date AS last_modify_date,A.total_renew AS total_renew,A.package_id AS package_id,P.package_validity AS validity,IF(P.package_validity=0,"Monthly",IF(P.package_validity=1,"Yearly",IF(P.package_validity=2,"Quarterly",IF(P.package_validity=3,"Half Yearly",NULL)))) AS package_validity,P.package_name AS package_name,DATEDIFF(A.expiry_date,"'+data.date+'") AS days,A.user_limit AS usercount,A.channels AS planchannel,(SELECT Final_amount FROM Billing_data WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS totalamount,(SELECT Plan_discount FROM Billing_data WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS bill_discount FROM tf_account_table A LEFT JOIN tf_packages P ON P.package_id=A.package_id WHERE A.account_type=2 HAVING (DATEDIFF(A.expiry_date,"'+data.date+'") >= 0 AND DATEDIFF(A.expiry_date,"'+data.date+'") <=30))U LEFT JOIN tf_account_table T ON U.renew_account_manager=T.account_id',[],callback)

           // return db.query('SELECT A.renew_account_manager,A.account_id,A.company_name,A.account_name,A.email,A.mobile,A.expiry_date,A.create_date,A.last_modify_date,A.total_renew,A.package_id,P.package_validity AS validity,IF(P.package_validity=0,"Monthly",IF(P.package_validity=1,"Yearly",IF(P.package_validity=2,"Quarterly",IF(P.package_validity=3,"Half Yearly",NULL)))) AS package_validity,P.package_name,DATEDIFF(A.expiry_date,"' + data.date + '") AS days,A.user_limit AS usercount,A.channels AS planchannel,(SELECT Final_amount FROM Billing_data WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS totalamount,(SELECT Plan_discount FROM Billing_data WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS bill_discount FROM tf_account_table A LEFT JOIN tf_packages P ON P.package_id=A.package_id WHERE A.account_type=2 HAVING (DATEDIFF(A.expiry_date,"' + data.date + '") <= 30 and DATEDIFF(A.expiry_date,"' + data.date + '") >= 0)', [], callback);
        }
        if (data.type == 7) {
            return db.query('SELECT U.renew_account_manager,T.account_name AS SalesManager,U.account_id,U.company_name,U.account_name,U.email,U.mobile,U.expiry_date,U.create_date,U.last_modify_date,U.total_renew,U.package_id,U.validity,U.package_validity,U.package_name,U.days,U.usercount,U.planchannel,U.totalamount,U.bill_discount FROM(SELECT A.renew_account_manager AS renew_account_manager,A.account_id AS account_id,A.company_name AS company_name,A.account_name AS account_name,A.email AS email,A.mobile AS mobile,A.expiry_date AS expiry_date,A.create_date AS create_date,A.last_modify_date AS last_modify_date,A.total_renew AS total_renew,A.package_id AS package_id,P.package_validity AS validity,IF(P.package_validity=0,"Monthly",IF(P.package_validity=1,"Yearly",IF(P.package_validity=2,"Quarterly",IF(P.package_validity=3,"Half Yearly",NULL)))) AS package_validity,P.package_name AS package_name,DATEDIFF(A.expiry_date,"'+data.date+'") AS days,A.user_limit AS usercount,A.channels AS planchannel,(SELECT Final_amount FROM Billing_data WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS totalamount,(SELECT Plan_discount FROM Billing_data WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS bill_discount FROM tf_account_table A LEFT JOIN tf_packages P ON P.package_id=A.package_id WHERE A.account_type=2 HAVING (DATEDIFF(A.expiry_date,"'+data.date+'") >= 0 AND DATEDIFF(A.expiry_date,"'+data.date+'") <=7))U LEFT JOIN tf_account_table T ON U.renew_account_manager=T.account_id',[],callback)

            //return db.query('SELECT A.renew_account_manager,A.account_id,A.company_name,A.account_name,A.email,A.mobile,A.expiry_date,A.create_date,A.last_modify_date,A.total_renew,A.package_id,P.package_validity AS validity,IF(P.package_validity=0,"Monthly",IF(P.package_validity=1,"Yearly",IF(P.package_validity=2,"Quarterly",IF(P.package_validity=3,"Half Yearly",NULL)))) AS package_validity,P.package_name,DATEDIFF(A.expiry_date,"' + data.date + '") AS days,A.user_limit AS usercount,A.channels AS planchannel,(SELECT Final_amount FROM Billing_data WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS totalamount,(SELECT Plan_discount FROM Billing_data WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS bill_discount FROM tf_account_table A LEFT JOIN tf_packages P ON P.package_id=A.package_id WHERE A.account_type=2 HAVING (DATEDIFF(A.expiry_date,"' + data.date + '") <= 7 and DATEDIFF(A.expiry_date,"' + data.date + '") >= 0)', [], callback);
        }
        if (data.type == 3) {
            return db.query('SELECT U.renew_account_manager,T.account_name AS SalesManager,U.account_id,U.company_name,U.account_name,U.email,U.mobile,U.expiry_date,U.create_date,U.last_modify_date,U.total_renew,U.package_id,U.validity,U.package_validity,U.package_name,U.days,U.usercount,U.planchannel,U.totalamount,U.bill_discount FROM(SELECT A.renew_account_manager AS renew_account_manager,A.account_id AS account_id,A.company_name AS company_name,A.account_name AS account_name,A.email AS email,A.mobile AS mobile,A.expiry_date AS expiry_date,A.create_date AS create_date,A.last_modify_date AS last_modify_date,A.total_renew AS total_renew,A.package_id AS package_id,P.package_validity AS validity,IF(P.package_validity=0,"Monthly",IF(P.package_validity=1,"Yearly",IF(P.package_validity=2,"Quarterly",IF(P.package_validity=3,"Half Yearly",NULL)))) AS package_validity,P.package_name AS package_name,DATEDIFF(A.expiry_date,"'+data.date+'") AS days,A.user_limit AS usercount,A.channels AS planchannel,(SELECT Final_amount FROM Billing_data WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS totalamount,(SELECT Plan_discount FROM Billing_data WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS bill_discount FROM tf_account_table A LEFT JOIN tf_packages P ON P.package_id=A.package_id WHERE A.account_type=2 HAVING (DATEDIFF(A.expiry_date,"'+data.date+'") >= 0 AND DATEDIFF(A.expiry_date,"'+data.date+'") <=3))U LEFT JOIN tf_account_table T ON U.renew_account_manager=T.account_id',[],callback)

            // return db.query('SELECT A.renew_account_manager,A.account_id,A.company_name,A.account_name,A.email,A.mobile,A.expiry_date,A.create_date,A.last_modify_date,A.total_renew,A.package_id,P.package_validity AS validity,IF(P.package_validity=0,"Monthly",IF(P.package_validity=1,"Yearly",IF(P.package_validity=2,"Quarterly",IF(P.package_validity=3,"Half Yearly",NULL)))) AS package_validity,P.package_name,DATEDIFF(A.expiry_date,"' + data.date + '") AS days,A.user_limit AS usercount,A.channels AS planchannel,(SELECT Final_amount FROM Billing_data WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS totalamount,(SELECT Plan_discount FROM Billing_data WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS bill_discount FROM tf_account_table A LEFT JOIN tf_packages P ON P.package_id=A.package_id WHERE A.account_type=2 HAVING (DATEDIFF(A.expiry_date,"' + data.date + '") <= 3 and DATEDIFF(A.expiry_date,"' + data.date + '") >= 0)', [], callback);
        }
        if (data.type == 1) {
            return db.query('SELECT U.renew_account_manager,T.account_name AS SalesManager,U.account_id,U.company_name,U.account_name,U.email,U.mobile,U.expiry_date,U.create_date,U.last_modify_date,U.total_renew,U.package_id,U.validity,U.package_validity,U.package_name,U.days,U.usercount,U.planchannel,U.totalamount,U.bill_discount FROM(SELECT A.renew_account_manager AS renew_account_manager,A.account_id AS account_id,A.company_name AS company_name,A.account_name AS account_name,A.email AS email,A.mobile AS mobile,A.expiry_date AS expiry_date,A.create_date AS create_date,A.last_modify_date AS last_modify_date,A.total_renew AS total_renew,A.package_id AS package_id,P.package_validity AS validity,IF(P.package_validity=0,"Monthly",IF(P.package_validity=1,"Yearly",IF(P.package_validity=2,"Quarterly",IF(P.package_validity=3,"Half Yearly",NULL)))) AS package_validity,P.package_name AS package_name,DATEDIFF(A.expiry_date,"'+data.date+'") AS days,A.user_limit AS usercount,A.channels AS planchannel,(SELECT Final_amount FROM Billing_data WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS totalamount,(SELECT Plan_discount FROM Billing_data WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS bill_discount FROM tf_account_table A LEFT JOIN tf_packages P ON P.package_id=A.package_id WHERE A.account_type=2 HAVING (DATEDIFF(A.expiry_date,"'+data.date+'") >= 0 AND DATEDIFF(A.expiry_date,"'+data.date+'") <=1))U LEFT JOIN tf_account_table T ON U.renew_account_manager=T.account_id',[],callback)
           // return db.query('SELECT  A.renew_account_manager,A.account_id,A.company_name,A.account_name,A.email,A.mobile,A.expiry_date,A.create_date,A.last_modify_date,A.total_renew,A.package_id,P.package_validity AS validity,IF(P.package_validity=0,"Monthly",IF(P.package_validity=1,"Yearly",IF(P.package_validity=2,"Quarterly",IF(P.package_validity=3,"Half Yearly",NULL)))) AS package_validity,P.package_name,DATEDIFF(A.expiry_date,"' + data.date + '") AS days,A.user_limit AS usercount,A.channels AS planchannel,(SELECT Final_amount FROM Billing_data WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS totalamount,(SELECT Plan_discount FROM Billing_data WHERE Account_ID=A.account_id ORDER BY Bill_Date DESC LIMIT 1) AS bill_discount FROM tf_account_table A LEFT JOIN tf_packages P ON P.package_id=A.package_id WHERE A.account_type=2 HAVING (DATEDIFF(A.expiry_date,"' + data.date + '") >= 0 and DATEDIFF(A.expiry_date,"' + data.date + '") <=1)', [], callback);
        }
    },
    getspamdiddata: function (id, callback) {
        //console.log(data.status);
        return db.query('SELECT D.did,A.account_name,DN.assginDate,D.spam_date,D.is_spam FROM `tf_did`  D LEFT JOIN tf_did_numbers DN on DN.did=D.did LEFT JOIN tf_account_table A ON A.account_id=DN.account_id where is_spam="yes"', [], callback);
    },
    getpackagecalldurationdata: function (id, callback) {
        return db.query('SELECT A.account_name, B.Bill_Date,B.Plan_expire_Date,B.Plan_minuits,B.free_minuites, (SELECT sum(CallPluse) FROM tf_cdr WHERE accountid=B.Account_ID AND (DATE(CallStartTime)>=B.Bill_Date AND DATE(CallStartTime)<=B.Plan_expire_Date) AND CallTypeID=0) as outgoing,(SELECT sum(CallPluse) FROM tf_cdr WHERE accountid=B.Account_ID AND (DATE(CallStartTime)>=B.Bill_Date AND DATE(CallStartTime)<=B.Plan_expire_Date) AND CallTypeID=2) as incoming,(SELECT sum(CallPluse) FROM tf_cdr WHERE accountid=B.Account_ID AND (DATE(CallStartTime)>=B.Bill_Date AND DATE(CallStartTime)<=B.Plan_expire_Date) AND CallTypeID=1) as dialer FROM Billing_data B LEFT JOIN tf_account_table A ON A.account_id=B.Account_ID WHERE B.Account_ID=' + id + ' ORDER BY Bill_Date DESC LIMIT 1', [], callback);
    },
    getpackagemanagercalldurationdata: function (id, callback) {
        return db.query('SELECT A.account_id,A.account_name, B.Tele_Plan_Minuites,B.Tele_Plan_Used,B.Tele_Expire,B.Tele_Startdate, (SELECT sum(CallPluse) FROM tf_cdr WHERE accountid=B.Account_ID AND (DATE(CallStartTime)>=B.Tele_Startdate AND DATE(CallStartTime)<=B.Tele_Expire)) as totalpulse FROM tf_account_balance B LEFT JOIN tf_account_table A ON A.account_id=B.Account_ID where A.package_id > 0 AND B.Tele_Plan_Minuites > 0 and B.Tele_Expire>CURDATE()', [], callback);
    },
    createInvoice: function (data, callback) {
        //console.log(data.status);
        return db.query('SELECT A.account_name,B.Account_Address,B.Bill_ID,DATE_FORMAT(B.Bill_Date, "%d/%m/%Y") as Bill_Date,B.Account_GST_NO,P.package_name,B.Plan_Value,B.Plan_TotalValue,B.Plan_user,B.Plan_CGST,B.Plan_SGST,B.Plan_IGST,B.Total_GST,B.Final_amount,B.Company_GST_ID, B.Company_GST_ID as panno,(SELECT Address FROM Company_GST_Master WHERE GST_Number=B.Company_GST_ID) as cmpaddress FROM Billing_data B LEFT JOIN tf_account_table A ON A.account_id=B.Account_ID LEFT JOIN tf_packages P ON P.package_id=B.Plan_Type WHERE B.Account_ID =230 order by B.Bill_Date desc limit 1', [], callback);
    },
    getivrextension: function (id, callback) {
        //console.log(data.status);
        return db.query('SELECT * FROM tf_IvrBuilderExtension WHERE IvrBuilderID=' + id, [], callback);
    },
    getmanagerivrinputs: function (data, callback) {
        console.log(data);
        var where = 'I.account_id=' + data.userid;
        if (data.ivrid) {
            where += ' and I.ivrid=' + data.ivrid;
        }
        if (data.extensionid) {
            where += ' and C.LastExtension=' + data.extensionid;
        }

        if (data.startdate != '1970-01-01' && data.enddate != '1970-01-01') {
            where += ' and C.CallStartTime BETWEEN "' + data.startdate + ' 00:00:00" AND "' + data.enddate + ' 23:59:59" ';
        }
        if (data.campaignid != '') {
            where += ' and N.cam_id = ' + data.campaignid;
        }

        // if((data.startdate!=null || data.startdate!= '1970-01-01') && (data.enddate!=null || data.enddate!= '1970-01-01')){
        //     where +=' and DATE(C.CallStartTime) between "'+data.startdate+'" and "'+data.enddate+'"';
        // }
        //console.log('SELECT C.*,I.extension,IB.IvrName,CAM.cam_name FROM tf_getivrinput I left join IvrBuilder IB on I.ivrid = IB.BuilderID right join tf_cdr C ON C.id=I.cdrid inner join tf_campaigns_numbers AS N on C.auto_numid=N.numid  LEFT JOIN tf_campaigns CAM ON CAM.cam_ivrid=IB.BuilderID WHERE  ' + where);
        return db.query('SELECT C.*,I.extension,IB.IvrName,CAM.cam_name FROM tf_getivrinput I left join IvrBuilder IB on I.ivrid = IB.BuilderID right join tf_cdr C ON C.id=I.cdrid inner join tf_campaigns_numbers AS N on C.auto_numid=N.numid LEFT JOIN tf_campaigns CAM ON CAM.camid=N.cam_id WHERE  ' + where, [], callback);
    },
    getusercount: function (id, callback) {
        //console.log(data.status);
        return db.query('SELECT count(*) as active from tf_account_table where date(expiry_date)> date(now())', [], callback);
    },
    getExpriedusercount: function (id, callback) {
        //console.log(data.status);
        return db.query('SELECT CONCAT(month(expiry_date),"-",year(expiry_date)) as "month-year", count(*) as expired from tf_account_table where year(expiry_date) between 2020 and 2020 and month(expiry_date)BETWEEN 10 and 10 GROUP BY month(expiry_date), year(expiry_date)', [], callback);
    },
    getNewusercount: function (id, callback) {
        //console.log(data.status);
        return db.query('SELECT count(*) as active , (SELECT count(*) from tf_account_table where `account_type`=2 and year(create_date) = 2020 and month(create_date)=10 and date( expiry_date)>= date(now()) ) as newadd, ( SELECT count(*) from tf_account_table where `account_type`=2 and year(expiry_date) = 2020 and month(expiry_date)=10 ) as expired from tf_account_table where date( expiry_date)>= date(now()) and account_type=2', [], callback);
        // return db.query('SELECT CONCAT(month(create_date),"-",year(create_date)) as "month-year", count(*) as newadd from tf_account_table where year(create_date) between 2020 and 2020 and month(create_date)BETWEEN 10 and 10 GROUP BY month(create_date), year(create_date)', [], callback);
    },
    searchusereportdata: function (data, callback) {
        //console.log(data.status);
        return db.query('SELECT (select count(*) from tf_account_table where current_status=0 and account_type=2) as active,(select count(*) from tf_account_table where year(create_date)>=year("' + data.startdate + '") and year(create_date)<=year("' + data.enddate + '") and month(create_date)>=month("' + data.startdate + '") and month(create_date)<=month("' + data.enddate + '") and account_type=2) as adduser,(select count(*) from tf_account_table where year(expiry_date)>=year("' + data.startdate + '") and year(expiry_date)<=year("' + data.enddate + '") and month(expiry_date)>=month("' + data.startdate + '") and month(expiry_date)<=month("' + data.enddate + '") and account_type=2) as expireuser from tf_account_table where account_type=2 group by account_type', [], callback);
        // return db.query('SELECT CONCAT(month(create_date),"-",year(create_date)) as "month-year", count(*) as newadd from tf_account_table where year(create_date) between 2020 and 2020 and month(create_date)BETWEEN 10 and 10 GROUP BY month(create_date), year(create_date)', [], callback);
    },
    getagentloggedtime: function (data, callback) {

        // return db.query('SELECT * FROM `tf_loginactivity` where DATE(date) = "DATE('+data.start+')" and uid = '+data.agentid+' and action = "Login" order by id asc limit 0,1',  function (err, results) {
        //     if (err) {
        //         console.log("[mysql error]", err);
        //     } else {
        //         console.log("result step 1");
        //         console.log(JSON.stringify(results));
        //     }
        // })
        //db.query("truncate table tf_temp_login_logout",callback);
        if (data['curr_date']) {
            db.query('Insert INTO tf_temp_login_logout (agent_id,login,logout,shiftin,shiftout,curr_time) (SELECT ' + data.agentid + ' as agentid,date as login_time,(select logout_time as logout_time from tf_loginactivity  where uid = ' + data.agentid + ' and action="Logout" and DATE(date)=DATE("' + data.start + '") and logout_time > date order by logout_time desc LIMIT 0,1) as logout_time,(SELECT start_time FROM tf_shifttime WHERE account_id = ' + data.agentid + ' and date=DATE("' + data.start + '") ) AS shift_in,(SELECT stop_time FROM tf_shifttime WHERE account_id = ' + data.agentid + ' and date=DATE("' + data.start + '") ) AS shift_out,NOW() AS curr_time FROM `tf_loginactivity` where uid = ' + data.agentid + ' and DATE(date)=DATE("' + data.start + '")   order by id asc LIMIT 0,1)', callback);
        } else {
            db.query('Insert INTO tf_temp_login_logout (agent_id,login,logout,shiftin,shiftout) (SELECT ' + data.agentid + ' as agentid,date as login_time,(select logout_time as logout_time from tf_loginactivity  where uid = ' + data.agentid + ' and action="Logout" and DATE(date)=DATE("' + data.start + '") and logout_time > date order by logout_time desc LIMIT 0,1) as logout_time,(SELECT start_time FROM tf_shifttime WHERE account_id = ' + data.agentid + ' and date=DATE("' + data.start + '") ) AS shift_in,(SELECT stop_time FROM tf_shifttime WHERE account_id = ' + data.agentid + ' and date=DATE("' + data.start + '") ) AS shift_out FROM `tf_loginactivity` where uid = ' + data.agentid + ' and DATE(date)=DATE("' + data.start + '")   order by id asc LIMIT 0,1)', callback);
        }


        //return db.query('SLEECT CASE WHEN login != "" THEN login WHEN shiftin != "" ELSE curr_time as logintime, CASE WHEN logout != "" THEN logout WHEN shiftout != "" ELSE curr_time as logouttime FROM `tf_temp_login_logout` WHERE agent_id = '+ data.agentid, [], callback);
    },
    getagentloggedtimenew: function (data, callback) {
        return db.query('SELECT * FROM  tf_temp_login_logout where agent_id =' + data, [], callback);
        //return db.query('SLEECT CASE WHEN login != "" THEN login WHEN shiftin != "" ELSE curr_time as logintime, CASE WHEN logout != "" THEN logout WHEN shiftout != "" ELSE curr_time as logouttime FROM `tf_temp_login_logout` WHERE agent_id = '+ data.agentid, [], callback);
    },
    getmanageruserdata: function (date, callback) {
        //console.log(data.status);
        return db.query('SELECT A.account_name,A.account_id,A.user_limit,A.expiry_date,(SELECT count(account_id) FROM `tf_account_table` where created_by=A.account_id) as currentuser From tf_account_table A where A.account_type=2 order by A.account_name asc', [], callback);
    },
    todayanswercallead: function (data, callback) {
        //where =' C.accountid='+userid+' and DATE(C.CallStartTime)="'+todaydate+'" AND CallTalkTime>0 and  C.feedback IS NOT NULL';
        where = ' C.accountid=' + data.userid + ' and DATE(CallStartTime)>="' + data.startdate + '" and DATE(CallStartTime)<="' + data.enddate + '"';
        //console.log('SELECT C.accountid,(SELECT count(id) FROM tf_cdr WHERE accountid=C.accountid and feedback="interested" AND CallTalkTime>0  AND DATE(CallStartTime)>="' + data.startdate + '" and DATE(CallStartTime)<="' + data.enddate + '" ) as interestedcnt,(SELECT count(id) FROM tf_cdr WHERE accountid=C.accountid and feedback="not interested" AND CallTalkTime>0 AND DATE(CallStartTime)>="' + data.startdate + '" and DATE(CallStartTime)<="' + data.enddate + '") as notinterestedcnt,(SELECT count(id) FROM tf_cdr WHERE accountid=C.accountid and feedback="schedule" AND CallTalkTime>0 AND DATE(CallStartTime)>="' + data.startdate + '" and DATE(CallStartTime)<="' + data.enddate + '" ) as schedulecnt  FROM `tf_cdr` C where '+where+' GROUP BY C.accountid');
        return db.query('SELECT C.accountid,(SELECT count(id) FROM tf_cdr WHERE accountid=C.accountid and feedback="interested" AND CallTalkTime>0  AND DATE(CallStartTime)>="' + data.startdate + '" and DATE(CallStartTime)<="' + data.enddate + '" ) as interestedcnt,(SELECT count(id) FROM tf_cdr WHERE accountid=C.accountid and feedback="not interested" AND CallTalkTime>0 AND DATE(CallStartTime)>="' + data.startdate + '" and DATE(CallStartTime)<="' + data.enddate + '") as notinterestedcnt,(SELECT count(id) FROM tf_cdr WHERE accountid=C.accountid and feedback="schedule" AND CallTalkTime>0 AND DATE(CallStartTime)>="' + data.startdate + '" and DATE(CallStartTime)<="' + data.enddate + '" ) as schedulecnt  FROM `tf_cdr` C where ' + where + ' GROUP BY C.accountid', [], callback);
    },
    todaycalleadagent: function (data, callback) {
        //where =' C.accountid='+userid+' and DATE(C.CallStartTime)="'+todaydate+'" AND CallTalkTime>0 and  C.feedback IS NOT NULL';
        where = ' A.created_by=' + data.userid + ' and DATE(C.CallStartTime)>="' + data.startdate + '" and DATE(C.CallStartTime)<="' + data.enddate + '" and C.feedback like "%' + data.lead + '%" AND CallTalkTime>0';
        //console.log('SELECT C.accountid,C.AgentID,C.AgentName,(SELECT count(id) FROM tf_cdr WHERE AgentID=C.AgentID AND accountid=C.accountid AND CallTalkTime>0 AND feedback like "%'+data.lead+'%" and  DATE(C.CallStartTime)>="'+data.startdate+'" and DATE(CallStartTime)<="'+data.enddate+'" ) AS cnt  FROM `tf_cdr` C LEFT JOIN tf_account_table A ON A.account_id=C.AgentID where '+where+' GROUP BY C.AgentID');
        return db.query('SELECT C.accountid,C.AgentID,C.AgentName,(SELECT count(id) FROM tf_cdr WHERE AgentID=C.AgentID AND accountid=C.accountid AND CallTalkTime>0 AND feedback like "%' + data.lead + '%" and  DATE(CallStartTime)>="' + data.startdate + '" and DATE(CallStartTime)<="' + data.enddate + '" ) AS cnt  FROM `tf_cdr` C LEFT JOIN tf_account_table A ON A.account_id=C.AgentID where ' + where + ' GROUP BY C.AgentID', [], callback);
    },
    hourlyanswercalleadata: function (data, callback) {
        //console.log(data.status);
        where = 'accountid=' + data.userid + ' AND CallTalkTime>0 ';
        if (data.index == 0) {
            where += ' and CallStartTime>="' + data.startdate + ' 10:00:00" AND CallStartTime<="' + data.startdate + ' 11:00:00"';
        }
        if (data.index == 1) {
            where += ' and CallStartTime>="' + data.startdate + ' 11:00:00" AND CallStartTime<="' + data.startdate + ' 12:00:00"';
        }
        if (data.index == 2) {
            where += ' and CallStartTime>="' + data.startdate + ' 12:00:00" AND CallStartTime<="' + data.startdate + ' 13:00:00"';
        }
        if (data.index == 3) {
            where += ' and CallStartTime>="' + data.startdate + ' 14:00:00" AND CallStartTime<="' + data.startdate + ' 15:00:00"';
        }
        if (data.index == 4) {
            where += ' and CallStartTime>="' + data.startdate + ' 15:00:00" AND CallStartTime<="' + data.startdate + ' 16:00:00"';
        }
        if (data.index == 5) {
            where += ' and CallStartTime>="' + data.startdate + ' 16:00:00" AND CallStartTime<="' + data.startdate + ' 17:00:00"';
        }
        if (data.index == 6) {
            where += ' and CallStartTime>="' + data.startdate + ' 17:00:00" AND CallStartTime<="' + data.startdate + ' 18:00:00"';
        }
        //console.log('SELECT (SELECT COUNT(*) FROM `tf_cdr` C WHERE '+where +' and feedback="interested") AS interestedcnt,(SELECT COUNT(*) FROM `tf_cdr` C WHERE '+where +' and feedback="not interested") AS notinterestedcnt,(SELECT COUNT(*) FROM `tf_cdr` C WHERE '+where +' and feedback="schedule") AS schedulecnt FROM `tf_cdr` C WHERE C.accountid=' + data.userid + ' GROUP BY C.accountid');
        return db.query('SELECT (SELECT COUNT(*) FROM `tf_cdr` C WHERE ' + where + ' and feedback="interested") AS interestedcnt,(SELECT COUNT(*) FROM `tf_cdr` C WHERE ' + where + ' and feedback="not interested") AS notinterestedcnt,(SELECT COUNT(*) FROM `tf_cdr` C WHERE ' + where + ' and feedback="schedule") AS schedulecnt FROM `tf_cdr` C WHERE C.accountid=' + data.userid + ' GROUP BY C.accountid', [], callback);
    },
    hourlycalleadagents: function (userid, todaydate, lead, time, callback) {
        //where =' C.accountid='+userid+' and DATE(C.CallStartTime)="'+todaydate+'" AND CallTalkTime>0 and  C.feedback IS NOT NULL';
        where = ' A.created_by=' + userid + ' and C.feedback like "%' + lead + '%" AND CallTalkTime>0';
        wheretime = ' and 1=1 ';
        if (time == 0) {
            where += ' and CallStartTime>="' + todaydate + ' 10:00:00" AND CallStartTime<="' + todaydate + ' 11:00:00"';
            wheretime = ' and CallStartTime>="' + todaydate + ' 10:00:00" AND CallStartTime<="' + todaydate + ' 11:00:00"';
        }
        if (time == 1) {
            where += ' and CallStartTime>="' + todaydate + ' 11:00:00" AND CallStartTime<="' + todaydate + ' 12:00:00"';
            wheretime = ' and CallStartTime>="' + todaydate + ' 11:00:00" AND CallStartTime<="' + todaydate + ' 12:00:00"';

        }
        if (time == 2) {
            where += ' and CallStartTime>="' + todaydate + ' 12:00:00" AND CallStartTime<="' + todaydate + ' 13:00:00"';
            wheretime = ' and CallStartTime>="' + todaydate + ' 12:00:00" AND CallStartTime<="' + todaydate + ' 13:00:00"';
        }
        if (time == 3) {
            where += ' and CallStartTime>="' + todaydate + ' 14:00:00" AND CallStartTime<="' + todaydate + ' 15:00:00"';
            wheretime = ' and CallStartTime>="' + todaydate + ' 14:00:00" AND CallStartTime<="' + todaydate + ' 15:00:00"';
        }
        if (time == 4) {
            where += ' and CallStartTime>="' + todaydate + ' 15:00:00" AND CallStartTime<="' + todaydate + ' 16:00:00"';
            wheretime = ' and CallStartTime>="' + todaydate + ' 15:00:00" AND CallStartTime<="' + todaydate + ' 16:00:00"';
        }
        if (time == 5) {
            where += ' and CallStartTime>="' + todaydate + ' 16:00:00" AND CallStartTime<="' + todaydate + ' 17:00:00"';
            wheretime = ' and CallStartTime>="' + todaydate + ' 16:00:00" AND CallStartTime<="' + todaydate + ' 17:00:00"';
        }
        if (time == 6) {
            where += ' and CallStartTime>="' + todaydate + ' 17:00:00" AND CallStartTime<="' + todaydate + ' 18:00:00"';
            wheretime = ' and CallStartTime>="' + todaydate + ' 17:00:00" AND CallStartTime<="' + todaydate + ' 18:00:00"';
        }
        // console.log('SELECT C.accountid,C.AgentID,C.AgentName,(SELECT count(id) FROM tf_cdr WHERE AgentID=C.AgentID AND accountid=C.accountid AND CallTalkTime>0 AND feedback like "%'+lead+'%"  '+wheretime+' ) AS cnt  FROM `tf_cdr` C LEFT JOIN tf_account_table A ON A.account_id=C.AgentID where '+where+' GROUP BY C.AgentID');
        return db.query('SELECT C.accountid,C.AgentID,C.AgentName,(SELECT count(id) FROM tf_cdr WHERE AgentID=C.AgentID AND accountid=C.accountid AND CallTalkTime>0 AND feedback like "%' + lead + '%"  ' + wheretime + ' ) AS cnt  FROM `tf_cdr` C LEFT JOIN tf_account_table A ON A.account_id=C.AgentID where ' + where + ' GROUP BY C.AgentID', [], callback);
    },
    getplanminutesdata: function (userid, callback) {
        //console.log(data.status);
        var enddateObj = new Date();
        var currentmonth = ('0' + (enddateObj.getMonth() + 1)).slice(-2);
        return db.query('SELECT A.Tele_Plan_Minuites,P.package_name,P.package_validity,A.Tele_Expire,(select sum(CallPluse) FROM tf_cdr where accountid=A.Account_ID and DATE(CallStartTime)<= A.Tele_Expire and MONTH(CallStartTime)="' + currentmonth + '"  GROUP BY accountid) as used ,(SELECT free_minuites FROM Billing_data where Account_ID=A.Account_ID and Plan_Type=A.Tele_packageid ORDER BY Bill_Date Desc limit 1) as freemin,(SELECT plan_minuits FROM Billing_data where Account_ID=A.Account_ID and Plan_Type=A.Tele_packageid ORDER BY Bill_Date Desc limit 1) as planmin FROM `tf_account_balance` A LEFT JOIN tf_packages P ON P.package_id=A.Tele_packageid where A.`Account_ID`=' + userid, [], callback);
        //return db.query('SELECT `Tele_Plan_Minuites`,sum(CallTalkTime) as used,(SELECT free_minuites FROM Billing_data where Account_ID=A.Account_ID and Plan_Type=A.Tele_packageid ORDER BY Bill_Date Desc limit 1) as freemin,(SELECT plan_minuits FROM Billing_data where Account_ID=A.Account_ID and Plan_Type=A.Tele_packageid ORDER BY Bill_Date Desc limit 1) as planmin FROM `tf_account_balance` A left join tf_cdr C ON C.accountid=A.Account_ID where A.`Account_ID`='+userid+' GROUP BY C.accountid', [], callback);
    },
    getmanagercampaigns: function (cid, callback) {
        return db.query('Select * from tf_campaigns where account_id=? order by camid desc', cid, callback);
    },
    getcampaigncallcount: function (data, callback) {
        //console.log('SELECT SUM((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime>0)) as answercnt,SUM((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime=0)) as noanswercnt FROM `tf_campaigns_numbers` C WHERE C.cam_id='+data.camid);
        return db.query('SELECT SUM((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime>0 and DATE(CallStartTime)>="' + data.startdate + '" and DATE(CallStartTime)<="' + data.enddate + '")) as answercnt,SUM((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime=0 and DATE(CallStartTime)>="' + data.startdate + '" and DATE(CallStartTime)<="' + data.enddate + '")) as noanswercnt FROM `tf_campaigns_numbers` C WHERE C.cam_id=' + data.camid + ' and C.account_id=' + data.userid, [], callback);
    },
    campaignanswercallead: function (data, callback) {
        //console.log('SELECT sum((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime>0 and feedback="interested" and DATE(CallStartTime)>="'+data.startdate+'" and DATE(CallStartTime)<="'+data.enddate+'")) as interestedcnt,sum((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime>0 and feedback="not interested" and DATE(CallStartTime)>="'+data.startdate+'" and DATE(CallStartTime)<="'+data.enddate+'")) as notinterestedcnt,sum((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime>0 and feedback="schedule" and DATE(CallStartTime)>="'+data.startdate+'" and DATE(CallStartTime)<="'+data.enddate+'")) as schedulecnt FROM `tf_campaigns_numbers` C WHERE C.cam_id='+data.camid+' and C.account_id='+data.userid);
        return db.query('SELECT sum((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime>0 and feedback="interested" and DATE(CallStartTime)>="' + data.startdate + '" and DATE(CallStartTime)<="' + data.enddate + '")) as interestedcnt,sum((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime>0 and feedback="not interested" and DATE(CallStartTime)>="' + data.startdate + '" and DATE(CallStartTime)<="' + data.enddate + '")) as notinterestedcnt,sum((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime>0 and feedback="schedule" and DATE(CallStartTime)>="' + data.startdate + '" and DATE(CallStartTime)<="' + data.enddate + '")) as schedulecnt FROM `tf_campaigns_numbers` C WHERE C.cam_id=' + data.camid + ' and C.account_id=' + data.userid, [], callback);
    },
    campaigncalleadagent: function (data, callback) {
        //console.log('SELECT SUM((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime>0)) as answercnt,SUM((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime=0)) as noanswercnt FROM `tf_campaigns_numbers` C WHERE C.cam_id='+cid);
        return db.query('SELECT COUNT(C.id) as cnt,C.AgentName FROM tf_cdr C LEFT JOIN `tf_campaigns_numbers` CN ON C.auto_numid=CN.numid LEFT JOIN tf_account_table A ON A.account_id=C.AgentID WHERE A.created_by=' + data.userid + ' and CN.cam_id=' + data.camid + ' and C.CallTalkTime>0 and C.feedback="' + data.lead + '" and DATE(C.CallStartTime)>="' + data.startdate + '" and DATE(C.CallStartTime)>="' + data.enddate + '" GROUP BY C.AgentID', [], callback);
    },
    getplanexpirydata: function (id, callback) {
        //console.log('SELECT SUM((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime>0)) as answercnt,SUM((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime=0)) as noanswercnt FROM `tf_campaigns_numbers` C WHERE C.cam_id='+cid);
        return db.query('SELECT A.expiry_date,P.package_validity,A.create_date FROM `tf_account_table` A LEFT JOIN tf_packages P ON P.package_id=A.package_id where A.account_id=' + id, [], callback);
    },
    campaignCallexceldata: function (data, callback) {
        //console.log('SELECT SUM((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime>0)) as answercnt,SUM((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime=0)) as noanswercnt FROM `tf_campaigns_numbers` C WHERE C.cam_id='+cid);
        return db.query('SELECT C.*,(SELECT cam_name FROM tf_campaigns where camid=CN.cam_id) as cam_name FROM `tf_campaigns_numbers` CN INNER JOIN tf_cdr C ON C.auto_numid=CN.numid WHERE CN.cam_id=' + data.camid + ' AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '"', [], callback);
    },
    getusersmsbalance: function (id, callback) {
        //console.log('SELECT SUM((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime>0)) as answercnt,SUM((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime=0)) as noanswercnt FROM `tf_campaigns_numbers` C WHERE C.cam_id='+cid);
        return db.query('SELECT A.`SMS_Tr_No`,A.`SMS_Tr_Balance`,A.`SMS_Pr_No`,A.`SMS_Pr_Balance`,A.`SMS_Otp_No`,A.`SMS_Otp_Balance`,SUM(SR.sms_credit) AS tr_used FROM `tf_account_balance` A LEFT JOIN tf_Tele_SMS_Package S ON S.SMS_ID=A.SMS_ID LEFT JOIN tf_sms_report SR ON SR.account_id=A.Account_ID WHERE A.Account_ID=' + id + ' and SR.sms_status="OK" GROUP BY SR.account_id', [], callback);
    },
    getmanagertotalcalls: function (data, callback) {
        // console.log('SELECT COUNT(id) AS totalcalls,(SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + ' 00:00:00" and CallStartTime<="' + data.date + ' 23:59:59" and (CallStatus="ANSWER" OR CallStatus="TALKTOAGENT") ) AS totalanswercalls, (SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + ' 00:00:00" and CallStartTime<="' + data.date + ' 23:59:59" and AgentTalkTime=0 ) AS totalunreachablecalls, (SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + ' 00:00:00" and CallStartTime<="' + data.date + ' 23:59:59" and AgentTalkTime>0 ) AS totalagentcalls,(SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + ' 00:00:00" and CallStartTime<="' + data.date + ' 23:59:59" and CallTypeID=2 ) AS totalincomingcall,(SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + ' 00:00:00" and CallStartTime<="' + data.date + ' 23:59:59" and CallTypeID=0) AS totaloutgoingcall,(SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + ' 00:00:00" and CallStartTime<="' + data.date + ' 23:59:59" and CallTypeID=1 ) AS totaldialercall FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + ' 00:00:00" and CallStartTime<="' + data.date + ' 23:59:59"');
        //return db.query('SELECT COUNT(id) AS totalcalls,(SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + '" and (CallStatus="ANSWER" OR CallStatus="CUSTOMERHANGPUP") GROUP BY accountid) AS totalanswercalls, (SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + '" and CallStatus!="ANSWER" and CallStatus!="NOANSWER" and CallStatus!="CUSTOMERHANGPUP" GROUP BY accountid) AS totalunreachablecalls, (SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + '" and CallStatus="ANSWER" GROUP BY accountid) AS totalagentcalls FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + '" GROUP BY accountid', [], callback);
        //console.log('SELECT COUNT(id) AS totalcalls,(SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid='+data.userid+' and CallStartTime>="'+data.date+' 00:00:00" and CallStartTime<="'+data.date+' 23:59:59" and (CallStatus="ANSWER" OR CallStatus="TALKTOAGENT") ) AS totalanswercalls, (SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid='+data.userid+' and CallStartTime>="'+data.date+' 00:00:00" and CallStartTime<="'+data.date+' 23:59:59" and AgentTalkTime=0 ) AS totalunreachablecalls, (SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid='+data.userid+' and CallStartTime>="'+data.date+' 00:00:00" and CallStartTime<="'+data.date+' 23:59:59" and AgentTalkTime>0 ) AS totalagentcalls,(SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid='+data.userid+' and CallStartTime>="'+data.date+' 00:00:00" and CallStartTime<="'+data.date+' 23:59:59" and CallTypeID=2 ) AS totalincomingcall,(SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid='+data.userid+' and CallStartTime>="'+data.date+' 00:00:00" and CallStartTime<="'+data.date+' 23:59:59" and CallTypeID=0) AS totaloutgoingcall,(SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid='+data.userid+' and CallStartTime>="'+data.date+' 00:00:00" and CallStartTime<="'+data.date+' 23:59:59" and CallTypeID=1 ) AS totaldialercall FROM `tf_cdr` WHERE accountid='+data.userid+' and CallStartTime>="'+data.date+' 00:00:00" and CallStartTime<="'+data.date+' 23:59:59"');
        return db.query('SELECT COUNT(id) AS totalcalls,(SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + ' 00:00:00" and CallStartTime<="' + data.date + ' 23:59:59" and (CallStatus="ANSWER" OR CallStatus="TALKTOAGENT") ) AS totalanswercalls, (SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + ' 00:00:00" and CallStartTime<="' + data.date + ' 23:59:59" and AgentTalkTime=0 ) AS totalunreachablecalls, (SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + ' 00:00:00" and CallStartTime<="' + data.date + ' 23:59:59" and AgentTalkTime>0 ) AS totalagentcalls,(SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + ' 00:00:00" and CallStartTime<="' + data.date + ' 23:59:59" and CallTypeID=2 ) AS totalincomingcall,(SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + ' 00:00:00" and CallStartTime<="' + data.date + ' 23:59:59" and CallTypeID=0) AS totaloutgoingcall,(SELECT COUNT(id)  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + ' 00:00:00" and CallStartTime<="' + data.date + ' 23:59:59" and CallTypeID=1 ) AS totaldialercall FROM `tf_cdr` WHERE accountid=' + data.userid + ' and CallStartTime>="' + data.date + ' 00:00:00" and CallStartTime<="' + data.date + ' 23:59:59"', [], callback);
    },
    getmanagerwithplan: function (id, callback) {
        //console.log('SELECT SUM((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime>0)) as answercnt,SUM((SELECT COUNT(id) FROM tf_cdr where auto_numid=C.numid and CallTalkTime=0)) as noanswercnt FROM `tf_campaigns_numbers` C WHERE C.cam_id='+cid);
        return db.query('SELECT A.`SMS_Tr_No`,A.`SMS_Tr_Balance`,A.`SMS_Pr_No`,A.`SMS_Pr_Balance`,A.`SMS_Otp_No`,A.`SMS_Otp_Balance`,SUM(SR.sms_credit) AS tr_used FROM `tf_account_balance` A LEFT JOIN tf_Tele_SMS_Package S ON S.SMS_ID=A.SMS_ID LEFT JOIN tf_sms_report SR ON SR.account_id=A.Account_ID WHERE A.Account_ID=' + id + ' and SR.sms_status="OK" GROUP BY SR.account_id', [], callback);
    },
    filterlogouttime: async function (data) {
        var calldata = []
        var i = 1
        return new Promise(async function (resolve, reject) {
            var i = 1
            async.forEachOf(data, async (element, key, callback) => {
                if (element.logout_time == null) {
                    console.log(element.date)
                    var date = new Date();
                    if (element.date.getDate() + element.date.getMonth() + element.date.getFullYear() == date.getDate() + date.getMonth() + date.getFullYear()) {
                        element.logout_time = new Date()
                    } else {
                        var closetime = element.closetime
                        var month = element.date.getMonth() + 1
                        var closedate = element.date.getFullYear() + '/' + month + '/' + element.date.getDate()
                        var timestamp = Date.parse(closedate + " " + closetime);
                        var momentDate = new Date(timestamp)
                        element.logout_time = momentDate
                        console.log(element.logout_time)
                    }
                }
                calldata.push(element)
                if (i == data.length) {
                    resolve(calldata);
                } else {
                    i++
                }

            });
        })
    },
    filterloginlogouttime: async function (data) {
        var calldata = []
        var i = 1
        return new Promise(async function (resolve, reject) {
            var i = 1
            async.forEachOf(data, async (element, key, callback) => {
                if (element.logout_time == null) {
                    //console.log(element.closetime)
                    var date = new Date();
                    if (element.logintime.getDate() + element.logintime.getMonth() + element.logintime.getFullYear() == date.getDate() + date.getMonth() + date.getFullYear()) {
                        element.logout_time = new Date()
                    } else {
                        var closetime = element.closetime
                        if (closetime == null) {
                            closetime = '23:59:00';
                        }
                        var month = element.logintime.getMonth() + 1
                        var closedate = element.logintime.getFullYear() + '/' + month + '/' + element.logintime.getDate()
                        var timestamp = Date.parse(closedate + " " + closetime);
                        var momentDate = new Date(timestamp)
                        element.logout_time = momentDate
                        //console.log(element.logout_time)
                    }
                }
                calldata.push(element)
                if (i == data.length) {
                    resolve(calldata);
                } else {
                    i++
                }

            });
        })
    },
    getmostconvertedcalldata: function (data, callback) {
        //console.log('SELECT (SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 00:00:00" AND "'+data.startdate+' 01:00:00" AND CallTalkTime>120 ) as count1, (SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 01:00:00" AND "'+data.startdate+' 02:00:00" AND CallTalkTime>120 ) as count2,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 02:00:00" AND "'+data.startdate+' 03:00:00" AND CallTalkTime>120 ) as count3,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 03:00:00" AND "'+data.startdate+' 04:00:00" AND CallTalkTime>120 ) as count4, (SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 04:00:00" AND "'+data.startdate+' 05:00:00" AND CallTalkTime>120 ) as count5, (SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 05:00:00" AND "'+data.startdate+' 06:00:00" AND CallTalkTime>120 ) as count6,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 06:00:00" AND "'+data.startdate+' 07:00:00" AND CallTalkTime>120 ) as count7,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 07:00:00" AND "'+data.startdate+' 08:00:00" AND CallTalkTime>120 ) as count8,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 08:00:00" AND "'+data.startdate+' 09:00:00" AND CallTalkTime>120 ) as count9,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 09:00:00" AND "'+data.startdate+' 10:00:00" AND CallTalkTime>120 ) as count10,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 10:00:00" AND "'+data.startdate+' 11:00:00" AND CallTalkTime>120 ) as count11,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 11:00:00" AND "'+data.startdate+' 12:00:00" AND CallTalkTime>120 ) as count12,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 12:00:00" AND "'+data.startdate+' 13:00:00" AND CallTalkTime>120 ) as count13,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 13:00:00" AND "'+data.startdate+' 14:00:00" AND CallTalkTime>120 ) as count14,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 14:00:00" AND "'+data.startdate+' 15:00:00" AND CallTalkTime>120 ) as count15,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 15:00:00" AND "'+data.startdate+' 16:00:00" AND CallTalkTime>120 ) as count16,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 16:00:00" AND "'+data.startdate+' 17:00:00" AND CallTalkTime>120 ) as count17,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 17:00:00" AND "'+data.startdate+' 18:00:00" AND CallTalkTime>120 ) as count18,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 18:00:00" AND "'+data.startdate+' 19:00:00" AND CallTalkTime>120 ) as count19,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 19:00:00" AND "'+data.startdate+' 20:00:00" AND CallTalkTime>120 ) as count20,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 20:00:00" AND "'+data.startdate+' 21:00:00" AND CallTalkTime>120 ) as count21,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 21:00:00" AND "'+data.startdate+' 22:00:00" AND CallTalkTime>120 ) as count22,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 22:00:00" AND "'+data.startdate+' 23:00:00" AND CallTalkTime>120 ) as count23,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 23:00:00" AND "'+data.startdate+' 23:59:59" AND CallTalkTime>120 ) as count24 FROM `tf_cdr` C WHERE C.accountid=' + data.userid + ' and DATE(C.CallStartTime)="'+data.startdate+'" AND CallTalkTime>120 GROUP BY C.accountid');
        return db.query('SELECT (SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 00:00:00" AND "' + data.startdate + ' 01:00:00" AND CallTalkTime>120 ) as count1, (SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 01:00:00" AND "' + data.startdate + ' 02:00:00" AND CallTalkTime>120 ) as count2,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 02:00:00" AND "' + data.startdate + ' 03:00:00" AND CallTalkTime>120 ) as count3,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 03:00:00" AND "' + data.startdate + ' 04:00:00" AND CallTalkTime>120 ) as count4, (SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 04:00:00" AND "' + data.startdate + ' 05:00:00" AND CallTalkTime>120 ) as count5, (SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 05:00:00" AND "' + data.startdate + ' 06:00:00" AND CallTalkTime>120 ) as count6,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 06:00:00" AND "' + data.startdate + ' 07:00:00" AND CallTalkTime>120 ) as count7,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 07:00:00" AND "' + data.startdate + ' 08:00:00" AND CallTalkTime>120 ) as count8,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 08:00:00" AND "' + data.startdate + ' 09:00:00" AND CallTalkTime>120 ) as count9,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 09:00:00" AND "' + data.startdate + ' 10:00:00" AND CallTalkTime>120 ) as count10,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 10:00:00" AND "' + data.startdate + ' 11:00:00" AND CallTalkTime>120 ) as count11,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 11:00:00" AND "' + data.startdate + ' 12:00:00" AND CallTalkTime>120 ) as count12,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 12:00:00" AND "' + data.startdate + ' 13:00:00" AND CallTalkTime>120 ) as count13,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 13:00:00" AND "' + data.startdate + ' 14:00:00" AND CallTalkTime>120 ) as count14,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 14:00:00" AND "' + data.startdate + ' 15:00:00" AND CallTalkTime>120 ) as count15,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 15:00:00" AND "' + data.startdate + ' 16:00:00" AND CallTalkTime>120 ) as count16,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 16:00:00" AND "' + data.startdate + ' 17:00:00" AND CallTalkTime>120 ) as count17,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 17:00:00" AND "' + data.startdate + ' 18:00:00" AND CallTalkTime>120 ) as count18,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 18:00:00" AND "' + data.startdate + ' 19:00:00" AND CallTalkTime>120 ) as count19,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 19:00:00" AND "' + data.startdate + ' 20:00:00" AND CallTalkTime>120 ) as count20,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 20:00:00" AND "' + data.startdate + ' 21:00:00" AND CallTalkTime>120 ) as count21,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 21:00:00" AND "' + data.startdate + ' 22:00:00" AND CallTalkTime>120 ) as count22,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 22:00:00" AND "' + data.startdate + ' 23:00:00" AND CallTalkTime>120 ) as count23,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid=' + data.userid + ' and CallStartTime between "' + data.startdate + ' 23:00:00" AND "' + data.startdate + ' 23:59:59" AND CallTalkTime>120 ) as count24 FROM `tf_cdr` C WHERE C.accountid=' + data.userid + ' and DATE(C.CallStartTime)="' + data.startdate + '" AND CallTalkTime>120 GROUP BY C.accountid', [], callback);
    },
    getcampaignperformancedata: function (data, callback) {
        //console.log('SELECT (SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 00:00:00" AND "'+data.startdate+' 01:00:00" AND CallTalkTime>120 ) as count1, (SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 01:00:00" AND "'+data.startdate+' 02:00:00" AND CallTalkTime>120 ) as count2,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 02:00:00" AND "'+data.startdate+' 03:00:00" AND CallTalkTime>120 ) as count3,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 03:00:00" AND "'+data.startdate+' 04:00:00" AND CallTalkTime>120 ) as count4, (SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 04:00:00" AND "'+data.startdate+' 05:00:00" AND CallTalkTime>120 ) as count5, (SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 05:00:00" AND "'+data.startdate+' 06:00:00" AND CallTalkTime>120 ) as count6,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 06:00:00" AND "'+data.startdate+' 07:00:00" AND CallTalkTime>120 ) as count7,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 07:00:00" AND "'+data.startdate+' 08:00:00" AND CallTalkTime>120 ) as count8,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 08:00:00" AND "'+data.startdate+' 09:00:00" AND CallTalkTime>120 ) as count9,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 09:00:00" AND "'+data.startdate+' 10:00:00" AND CallTalkTime>120 ) as count10,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 10:00:00" AND "'+data.startdate+' 11:00:00" AND CallTalkTime>120 ) as count11,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 11:00:00" AND "'+data.startdate+' 12:00:00" AND CallTalkTime>120 ) as count12,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 12:00:00" AND "'+data.startdate+' 13:00:00" AND CallTalkTime>120 ) as count13,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 13:00:00" AND "'+data.startdate+' 14:00:00" AND CallTalkTime>120 ) as count14,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 14:00:00" AND "'+data.startdate+' 15:00:00" AND CallTalkTime>120 ) as count15,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 15:00:00" AND "'+data.startdate+' 16:00:00" AND CallTalkTime>120 ) as count16,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 16:00:00" AND "'+data.startdate+' 17:00:00" AND CallTalkTime>120 ) as count17,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 17:00:00" AND "'+data.startdate+' 18:00:00" AND CallTalkTime>120 ) as count18,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 18:00:00" AND "'+data.startdate+' 19:00:00" AND CallTalkTime>120 ) as count19,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 19:00:00" AND "'+data.startdate+' 20:00:00" AND CallTalkTime>120 ) as count20,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 20:00:00" AND "'+data.startdate+' 21:00:00" AND CallTalkTime>120 ) as count21,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 21:00:00" AND "'+data.startdate+' 22:00:00" AND CallTalkTime>120 ) as count22,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 22:00:00" AND "'+data.startdate+' 23:00:00" AND CallTalkTime>120 ) as count23,(SELECT COUNT(id) FROM `tf_cdr` C WHERE accountid='+data.userid+' and CallStartTime between "'+data.startdate+' 23:00:00" AND "'+data.startdate+' 23:59:59" AND CallTalkTime>120 ) as count24 FROM `tf_cdr` C WHERE C.accountid=' + data.userid + ' and DATE(C.CallStartTime)="'+data.startdate+'" AND CallTalkTime>120 GROUP BY C.accountid');
        return db.query('SELECT COUNT(C.id) as cnt, CAM.cam_name,CAM.cam_ivrid,I.IvrName FROM `tf_cdr` C LEFT JOIN tf_campaigns_numbers CN ON CN.numid=C.auto_numid RIGHT JOIN tf_campaigns CAM ON CAM.camid=CN.cam_id LEFT JOIN IvrBuilder AS I ON I.BuilderID=CAM.cam_ivrid WHERE CN.account_id=' + data.userid + ' AND C.CallDuration>120 AND DATE(C.CallStartTime)="' + data.startdate + '" GROUP BY CN.cam_id ORDER BY cnt DESC LIMIT 1', [], callback);

    },
    savereportdata: function (data, callback) {
        return db.query('Insert INTO tf_report_req SET ?', data, callback);
    },
    getrequestedreport: function (id, callback) {
        return db.query('SELECT * FROM `tf_report_req` WHERE `managerid`=' + id, callback);
    },
    croncallsummaryreport: function (data, callback) {
        return db.query('select (SELECT count(id)  from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and agentstatus="CANCEL" ) as CANCEL, (SELECT count(id)  from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and (agentstatus="NOANSWER" or agentstatus = "BUSY" or agentstatus is NULL or agentstatus = "CALLING") ) as NOANSWER, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and agentstatus="ANSWER" ) as ANSWER, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and CallTypeID=0 ) as OUTGOING, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and CallTypeID=1 ) as DIALER,(SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and CallTypeID=2 ) as INCOMMING, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and feedback="interested" ) as interested, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and feedback="not_interested" ) as not_interested, (SELECT count(id) from tf_cdr where accountid=' + data.userid + ' and  DATE(CallStartTime) between "' + data.startdate + '" and "' + data.enddate + '" and feedback="schedule" ) as schedule', [], callback);
    },
    cronagentloginlogoutdata: function (data, callback) {
        return db.query('SELECT t.uid,a.account_name,t.date as date,t.date as logintime,(SELECT logout_time FROM `tf_loginactivity` WHERE uid=t.uid and DATE(date)=DATE(t.date) order by id desc limit 1) AS logout_time,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(logout_time, date)))) as timediff FROM `tf_loginactivity` WHERE uid=t.uid and DATE(date)=DATE(t.date)) AS totaltime,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM `tf_breaktime` b WHERE account_id=t.uid AND DATE(start_time)=DATE(t.date)) as breaktime,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = t.uid ) limit 0,1) AS closetime FROM tf_loginactivity t INNER JOIN tf_account_table a ON a.account_id=t.uid WHERE (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND t.uid IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ') GROUP BY t.uid,DATE(t.date)', [], callback);
    },
    cronagentcalldurationdata: function (data, callback) {
        //console.log('SELECT A.account_name,A.account_id,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=1 AND (DATE(CallStartTime) >= "'+data.startdate+'" and DATE(CallStartTime) <="'+data.enddate+'")) AS totaldialer,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=1 AND (DATE(CallStartTime) >= "'+data.startdate+'" and DATE(CallStartTime) <="'+data.enddate+'")) AS dialerduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=1 AND (DATE(CallStartTime) >= "'+data.startdate+'" and DATE(CallStartTime) <= "'+data.enddate+'") AND CallStatus="ANSWER") AS dialerconnectcalls,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=2 AND (DATE(CallStartTime) >= "'+data.startdate+'" and DATE(CallStartTime) <="'+data.enddate+'")) AS totalincoming,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=2 and (DATE(CallStartTime) >= "'+data.startdate+'" and DATE(CallStartTime) <="'+data.enddate+'")) AS incomingduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=2 and (DATE(CallStartTime) >= "'+data.startdate+'" and DATE(CallStartTime) <="'+data.enddate+'") AND CallStatus="ANSWER") AS incomingconnectcalls,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=0 AND (DATE(CallStartTime) >= "'+data.startdate+'" and DATE(CallStartTime) <="'+data.enddate+'")) AS totaloutgoing,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=0 AND (DATE(CallStartTime) >= "'+data.startdate+'" and DATE(CallStartTime) <="'+data.enddate+'")) AS outgoingduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=0 AND (DATE(CallStartTime) >= "'+data.startdate+'" and DATE(CallStartTime) <="'+data.enddate+'") AND CallStatus="ANSWER") AS outgoingconnectcalls, (SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) >= "'+data.startdate+'" and DATE(CallStartTime) <="'+data.enddate+'")) AS totalduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) >= "'+data.startdate+'" and DATE(CallStartTime) <="'+data.enddate+'") AND CallStatus="ANSWER") AS totalconnectcalls,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) >= "'+data.startdate+'" and DATE(CallStartTime) <="'+data.enddate+'")) AS totalcalls FROM `tf_account_table` A LEFT JOIN tf_cdr C ON C.AgentID=A.account_id WHERE A.created_by='+ data.userid +' AND DATE(C.CallStartTime) >= "'+data.startdate+'" AND  DATE(C.CallStartTime) <="'+data.enddate+'" GROUP BY A.account_id');
        return db.query('SELECT A.account_name,A.account_id,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=1 AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '")) AS totaldialer,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=1 AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '")) AS dialerduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=1 AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <= "' + data.enddate + '") AND CallStatus="ANSWER") AS dialerconnectcalls,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=2 AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '")) AS totalincoming,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=2 and (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '")) AS incomingduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=2 and (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '") AND CallStatus="ANSWER") AS incomingconnectcalls,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=0 AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '")) AS totaloutgoing,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=0 AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '")) AS outgoingduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=0 AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '") AND CallStatus="ANSWER") AS outgoingconnectcalls, (SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '")) AS totalduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '") AND CallStatus="ANSWER") AS totalconnectcalls,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) >= "' + data.startdate + '" and DATE(CallStartTime) <="' + data.enddate + '")) AS totalcalls FROM `tf_account_table` A LEFT JOIN tf_cdr C ON C.AgentID=A.account_id WHERE A.created_by=' + data.userid + ' AND DATE(C.CallStartTime) >= "' + data.startdate + '" AND  DATE(C.CallStartTime) <="' + data.enddate + '" GROUP BY A.account_id', [], callback);
    },
    cronmanagercampaigndata: function (data, callback) {
        //console.log('SELECT c.cam_name,c.create_date,c.camid,count(cont_id) as total_contact,(SELECT count(*)  FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.CallStatus="ANSWER" AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") as ANSWER ,(SELECT count(*) FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid =c1.numid WHERE c1.cam_id = c.camid and (cdr.CallStatus!="ANSWER") AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") as NOANSWER,(SELECT count(*) FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") as totalcalls,(SELECT count(*)  FROM `tf_campaigns_numbers`as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.feedback="schedule" AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") as schedule,(SELECT count(*)  FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.feedback="not interested" AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") as not_interested FROM tf_campaigns_numbers as cn inner join tf_campaigns as c on c.camid=cn.cam_id where cn.account_id=' + data.userid + '  AND  DATE(cn.date) between "' + data.startdate + '" and "' + data.enddate + '"  group by cam_id');
        return db.query('SELECT c.cam_name,c.create_date,c.camid,count(cont_id) as total_contact,(SELECT count(*)  FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.CallStatus="ANSWER" AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") as ANSWER ,(SELECT count(*) FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid =c1.numid WHERE c1.cam_id = c.camid and (cdr.CallStatus!="ANSWER") AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") as NOANSWER,(SELECT count(*) FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") as totalcalls,(SELECT count(*)  FROM `tf_campaigns_numbers`as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.feedback="schedule" AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") as schedule,(SELECT count(*)  FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.feedback="not interested" AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") as not_interested FROM tf_campaigns_numbers as cn inner join tf_campaigns as c on c.camid=cn.cam_id where cn.account_id=' + data.userid + '  AND  DATE(cn.date) between "' + data.startdate + '" and "' + data.enddate + '"  group by cam_id', [], callback);
    },
    cronagentloginlogoutdata: function (data, callback) {
        where = 'DATE(date)>="' + data.startdate + '" AND DATE(date)<= "' + data.enddate + '" AND a.created_by=' + data.userid;
        //console.log('SELECT la.id,la.uid,la.date,la.date as logintime,la.logout_time as logout_time,la.ip,a.account_name as agent,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) limit 0,1) AS closetime FROM `tf_loginactivity` la LEFT JOIN `tf_account_table` a ON la.uid=a.account_id WHERE '+where +' ORDER BY uid,date asc');
        //console.log('SELECT la.id,la.uid,la.date,la.date as logintime,la.logout_time as logout_time,la.ip,a.account_name as agent,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) limit 0,1) AS closetime FROM `tf_loginactivity` la LEFT JOIN `tf_account_table` a ON la.uid=a.account_id WHERE '+where +' ORDER BY uid,date asc');
        return db.query('SELECT la.id,la.uid,la.date,la.date as logintime,la.logout_time as logout_time,la.ip,a.account_name as agent,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) limit 0,1) AS closetime FROM `tf_loginactivity` la LEFT JOIN `tf_account_table` a ON la.uid=a.account_id WHERE ' + where + ' ORDER BY uid,date asc', [], callback);
    },
    insertrecordingrequest: function (data, callback) {
        return db.query('Insert INTO tf_recordingrequest SET ?', data, callback);
    },
    getrecordingrequestedlist: function (id, callback) {
        return db.query('SELECT * FROM `tf_recordingrequest` WHERE `userid`=?', [id], callback);
    },
    cronagentperformancedata: function (data, callback) {
        //console.log('SELECT t.uid,a.account_id,a.account_name,t.date,(SELECT logout_time FROM `tf_loginactivity` WHERE uid=t.uid and DATE(date)=DATE(t.date) order by id desc limit 1) AS logout_time, (SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM `tf_breaktime` b WHERE account_id=t.uid AND DATE(start_time) >= "'+data.startdate+'" AND DATE(start_time) <= "'+data.enddate+'" ) as breaktime, (SELECT (SUM(AgentTalkTime)) FROM `tf_cdr` WHERE AgentID=a.account_id AND DATE(CallStartTime) >= "'+data.startdate+'" AND DATE(CallStartTime) <= "'+data.enddate+'") AS talktime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND DATE(CallStartTime) >= "'+data.startdate+'" AND DATE(CallStartTime) <= "'+data.enddate+'" AND CallTypeID IN (0,1)) AS totalcalls,(SELECT WrapUpTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) limit 0,1) AS wrapuptime,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) limit 0,1) AS closetime  FROM tf_loginactivity t INNER JOIN tf_account_table a ON a.account_id=t.uid WHERE DATE(date)>= "'+data.startdate+'" AND DATE(date)<="'+data.enddate+'" AND t.uid IN (SELECT account_id FROM `tf_account_table` WHERE created_by = '+data.userid+') GROUP BY t.uid');
        return db.query('SELECT t.uid,a.account_id,a.account_name,t.date,(SELECT logout_time FROM `tf_loginactivity` WHERE uid=t.uid and DATE(date)=DATE(t.date) order by id desc limit 1) AS logout_time, (SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM `tf_breaktime` b WHERE account_id=t.uid AND DATE(start_time) >= "' + data.startdate + '" AND DATE(start_time) <= "' + data.enddate + '" ) as breaktime, (SELECT (SUM(AgentTalkTime)) FROM `tf_cdr` WHERE AgentID=a.account_id AND DATE(CallStartTime) >= "' + data.startdate + '" AND DATE(CallStartTime) <= "' + data.enddate + '") AS talktime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND DATE(CallStartTime) >= "' + data.startdate + '" AND DATE(CallStartTime) <= "' + data.enddate + '" AND CallTypeID IN (0,1)) AS totalcalls,(SELECT WrapUpTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) limit 0,1) AS wrapuptime,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) limit 0,1) AS closetime  FROM tf_loginactivity t INNER JOIN tf_account_table a ON a.account_id=t.uid WHERE DATE(date)>= "' + data.startdate + '" AND DATE(date)<="' + data.enddate + '" AND t.uid IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ') GROUP BY t.uid', [], callback);
    },
    tempcronagentperformancedata: async function (dates, managerid) {
        console.log("dates :" + managerid);
        console.log("data");
        console.log(dates);
        var jsonArr = [];
        return new Promise(async function (resolve, reject) {
            var i = 1
            async.forEachOf(dates, async (element, key, callback) => {
                var data = { userid: managerid, startdate: element, enddate: element };
                var mdata = testsonali(data);
            });
            resolve(jsonArr);
        });
    },
    tempcronagentperformancedata: async function (dates, managerid) {
        //console.log("dates :" + managerid);
        console.log("data");
        console.log(dates);
        var jsonArr = [];
        return new Promise(async function (resolve, reject) {
            var i = 1
            await async.forEachOf(dates, async (element, key, callback) => {

                var data = { userid: managerid, startdate: element, enddate: element };
                const rows = await helper.agentperformance(data);

                //    jsonArr.push(promise);
                if (rows) {
                    if (rows['date'] != null && rows['date'] != '') {
                        if (rows['logout_time'] != null && rows['logout_time'] != '') {
                            var logout_time = rows['logout_time'];
                        } else if (rows['closetime'] != null && rows['closetime'] != '') {
                            var startdateObj = new Date(rows['date']);
                            var startdate = startdateObj.getFullYear() + '-' + ('0' + (startdateObj.getMonth() + 1)).slice(-2) + '-' + ('0' + startdateObj.getDate()).slice(-2);
                            var logout_time = startdate + ' ' + rows['closetime'];
                        } else {
                            var logout_time = '00:00:00';
                        }
                    }

                    if (rows['date'] != null && rows['date'] != '' && logout_time != '00:00:00') {
                        var loggedtime = await helper.calculateDateTimeDiff(rows['date'], logout_time);
                    } else {
                        var loggedtime = '00:00:00';
                    }

                    var talktime = await helper.calulatesectomin(rows['talktime']);

                    var wraptime = await helper.calulatemintosec(rows['totalcalls'] * rows['wrapuptime']);

                    var breaktime = await helper.calulatesectomin(rows['breaktime']);

                    if (logout_time != '00:00:00') {
                        var idealtime = await helper.calculateidealtime(rows['date'], logout_time, rows['talktime'], (rows['totalcalls'] * rows['wrapuptime'] * 60), rows['breaktime']);
                    } else {
                        var idealtime = '00:00:00';
                    }

                    if (logout_time != '00:00:00') {
                        var performance = await helper.calculateperformancetime(rows['date'], logout_time, rows['talktime'], (rows['totalcalls'] * rows['wrapuptime'] * 60), rows['breaktime']);
                    } else {
                        var performance = '0';
                    }

                    var tempArry = {
                        'Agent Name': rows['account_name'],
                        ' Date': dateFormat(rows['date'], "dd-mm-yyyy"),
                        'Logged Time': loggedtime,
                        'Talk Time': talktime,
                        'Wrap Time': wraptime,
                        'Break Time': breaktime,
                        'Idle Time': idealtime,
                        'Performance (%)': performance
                    }
                    jsonArr.push(tempArry);
                }

            });
            // console.log("json arr");
            // console.log(jsonArr);
            resolve(jsonArr);
        });
    },
    insertrecordingrequestnumber: function (data, callback) {
        return db.query('Insert INTO tf_recordingrequest_number (rid,date,number) VALUES ?', [data], callback);
    },
    getagentlivestatus: function (id, group, callback) {
        //  console.log('SELECT A.is_loggedin,A.account_name,A.account_id,(SELECT start_time FROM `tf_breaktime` WHERE account_id = A.account_id and break_status=0 ORDER BY break_id DESC LIMIT 0,1) AS break,(SELECT start_time FROM `tf_callingpausetime` WHERE account_id = A.account_id and status = 0 ORDER BY pause_id DESC LIMIT 0,1) AS callhold,(SELECT lastdate FROM `tf_tmp_agent` WHERE aid = A.account_id LIMIT 0,1) As Idle FROM `tf_account_table` A WHERE  A.current_status !="1" and  A.created_by = ? ORDER BY Idle DESC', [id]);
        if (group > 0) {
            return db.query('SELECT A.is_loggedin,A.account_name,A.account_id,(SELECT start_time FROM `tf_breaktime` WHERE account_id = A.account_id and break_status=0 ORDER BY break_id DESC LIMIT 0,1) AS break,(SELECT start_time FROM `tf_callingpausetime` WHERE account_id = A.account_id and status = 0 ORDER BY pause_id DESC LIMIT 0,1) AS callhold,(SELECT lastdate FROM `tf_tmp_agent` WHERE aid = A.account_id LIMIT 0,1) As Idle FROM `tf_account_table` A WHERE A.current_status !="1" and A.created_by = ? AND A.is_deleted="no" AND A.account_id IN (SELECT AgentID FROM HuntGroupDetail WHERE HuntGroupID = ? ) ORDER BY Idle DESC', [id, group], callback);
        } else {
            return db.query('SELECT A.is_loggedin,A.account_name,A.account_id,(SELECT start_time FROM `tf_breaktime` WHERE account_id = A.account_id and break_status=0 ORDER BY break_id DESC LIMIT 0,1) AS break,(SELECT start_time FROM `tf_callingpausetime` WHERE account_id = A.account_id and status = 0 ORDER BY pause_id DESC LIMIT 0,1) AS callhold,(SELECT lastdate FROM `tf_tmp_agent` WHERE aid = A.account_id LIMIT 0,1) As Idle FROM `tf_account_table` A WHERE  A.current_status !="1" and  A.created_by = ? AND A.is_deleted="no" ORDER BY Idle DESC', [id], callback);
        }
    },
    GetCdrDataById: async function (cdrid) {
        return new Promise(function (resolve, reject) {
            db.query('SELECT * FROM tf_cdr  WHERE id=?', [cdrid], function (err, results) {
                if (err) {
                    console.log("[mysql error]", err);
                } else {
                    if (results.length > 0) {
                        resolve(results);
                    } else {
                        resolve(0);
                    }
                }
            })
        })
    },
    GetLastCdrDataByAgentId: async function (cdrid) {
        return new Promise(function (resolve, reject) {
            db.query('SELECT * FROM tf_cdr  WHERE AgentID = ? and CdrStatus = 0 and CallEndTime!="0000-00-00 00:00:00" ORDER BY id DESC LIMIT 0,1', [cdrid], function (err, results) {
                if (err) {
                    console.log("[mysql error]", err);
                } else {
                    if (results.length > 0) {
                        resolve(results);
                    } else {
                        resolve(0);
                    }
                }
            })
        })
    },
    GetIdleTime: async function (agentid) {
        return new Promise(function (resolve, reject) {
            db.query('SELECT * FROM tf_tmp_agent  WHERE aid = ?', [agentid], function (err, results) {
                if (err) {
                    console.log("[mysql error]", err);
                    resolve(0);
                } else {
                    if (results.length > 0) {
                        resolve(results);
                    } else {
                        resolve(0);
                    }
                }
            })
        })
    },
    getagentholdcallingreasondata: function (data, callback) {
        //console.log('SELECT t.account_id,a.account_name,t.start_time,t.stop_time,H.reason_name,t.date FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND t.account_id IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ')');
        if (data.type == 0) {
            var where = "";
            if (data.agentid) {
                where += " and  t.account_id=" + data.agentid;
            }
            console.log('SELECT t.account_id,a.account_name,t.start_time,t.stop_time,H.reason_name,t.date FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE t.reason_id IS NOT NULL ' + where + ' and (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND ACW=1 AND t.account_id IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ')');
            return db.query('SELECT t.account_id,a.account_name,t.start_time,t.stop_time,H.reason_name,t.date FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE t.reason_id IS NOT NULL ' + where + ' and (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND ACW=1 AND t.account_id IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ')', [], callback);
        } else {
            var where = "";
            if (data.agentid) {
                where += " and  t.account_id=" + data.agentid;
            }
            console.log('SELECT t.account_id,a.account_name,t.start_time,t.stop_time,H.reason_name,t.date FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE t.reason_id IS NOT NULL ' + where + ' and (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND t.account_id IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ')');
            return db.query('SELECT t.account_id,a.account_name,t.start_time,t.stop_time,H.reason_name,t.date FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE t.reason_id IS NOT NULL ' + where + ' and (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND t.account_id IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ')', [], callback);
        }
    },
    getagentadherencegraphdata: function (data, callback) {
        if (data.agentid > 0) {
            return db.query('SELECT t.uid,a.account_name,t.date as logintime,(SELECT logout_time FROM `tf_loginactivity` WHERE uid=t.uid and DATE(date)=DATE(t.date) order by id desc limit 1) AS logout_time,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(logout_time, date)))) as timediff FROM `tf_loginactivity` WHERE uid=t.uid and DATE(date)=DATE(t.date)) AS totaltime,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM `tf_breaktime` b WHERE account_id=t.uid AND DATE(start_time)=DATE(t.date)) as breaktime,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(stop_time, start_time)))) as totalholdcalltime FROM `tf_callingpausetime` WHERE account_id=t.uid and DATE(date)=DATE(t.date) and status=1 AND reason_id IN (SELECT reason_id FROM  tf_hold_calling_reason where ACW=1)) AS totalholdcalltime,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = t.uid ) limit 0,1) AS closetime FROM tf_loginactivity t INNER JOIN tf_account_table a ON a.account_id=t.uid WHERE DATE(t.date) = "' + data.date + '" AND t.uid=' + data.agentid + ' AND t.uid IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ') GROUP BY t.uid,DATE(t.date)', [], callback);
        } else {
            return db.query('SELECT t.uid,a.account_name,t.date as logintime,(SELECT logout_time FROM `tf_loginactivity` WHERE uid=t.uid and DATE(date)=DATE(t.date) order by id desc limit 1) AS logout_time,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(logout_time, date)))) as timediff FROM `tf_loginactivity` WHERE uid=t.uid and DATE(date)=DATE(t.date)) AS totaltime,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM `tf_breaktime` b WHERE account_id=t.uid AND DATE(start_time)=DATE(t.date)) as breaktime,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(stop_time, start_time)))) as totalholdcalltime FROM `tf_callingpausetime` WHERE account_id=t.uid and DATE(date)=DATE(t.date) and status=1 AND reason_id IN (SELECT reason_id FROM  tf_hold_calling_reason where ACW=1)) AS totalholdcalltime,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = t.uid ) limit 0,1) AS closetime FROM tf_loginactivity t INNER JOIN tf_account_table a ON a.account_id=t.uid WHERE DATE(t.date) = "' + data.date + '" AND t.uid IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ') GROUP BY t.uid,DATE(t.date)', [], callback);
        }
    },
    getagentperformancegraphdata: function (data, callback) {
        //db.query("truncate table tf_temp_login_logout");
        //console.log(data);
        if (data.agentid > 0) {
            // console.log('SELECT t.uid,a.account_id,a.account_name,t.date,(SELECT logout_time FROM `tf_loginactivity` WHERE uid=t.uid and DATE(date)=DATE(t.date) order by id desc limit 1) AS logout_time, (SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM `tf_breaktime` b WHERE account_id=t.uid AND DATE(start_time) = "' + data.date + '") as breaktime,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS holdcalltime FROM `tf_callingpausetime` b WHERE account_id=a.account_id AND b.date = "' + data.date + '"  and b.status=1 AND b.reason_id IN (SELECT reason_id FROM tf_hold_calling_reason where ACW=1) ) as totalholdcalltime ,  (SELECT (SUM(AgentTalkTime)) FROM `tf_cdr` WHERE AgentID=a.account_id AND DATE(CallStartTime) = "' + data.date + '" ) AS talktime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND DATE(CallStartTime) = "' + data.date + '"  AND CallTypeID IN (0,1)) AS totalcalls,(SELECT WrapUpTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) limit 0,1) AS wrapuptime,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) limit 0,1) AS closetime  FROM tf_loginactivity t INNER JOIN tf_account_table a ON a.account_id=t.uid WHERE DATE(date)= "' + data.date + '" AND t.uid=' + data.agentid + ' AND t.uid IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ') GROUP BY t.uid');
            return db.query('SELECT t.uid,a.account_id,a.account_name,t.date,(SELECT logout_time FROM `tf_loginactivity` WHERE uid=t.uid and DATE(date)=DATE(t.date) order by id desc limit 1) AS logout_time, (SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM `tf_breaktime` b WHERE account_id=t.uid AND DATE(start_time) = "' + data.date + '") as breaktime,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS holdcalltime FROM `tf_callingpausetime` b WHERE account_id=a.account_id AND b.date = "' + data.date + '"  and b.status=1 AND b.reason_id IN (SELECT reason_id FROM tf_hold_calling_reason where ACW=1) ) as totalholdcalltime ,  (SELECT (SUM(AgentTalkTime)) FROM `tf_cdr` WHERE AgentID=a.account_id AND DATE(CallStartTime) = "' + data.date + '" ) AS talktime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND DATE(CallStartTime) = "' + data.date + '"  AND CallTypeID IN (0,1)) AS totalcalls,(SELECT WrapUpTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) limit 0,1) AS wrapuptime,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) limit 0,1) AS closetime  FROM tf_loginactivity t INNER JOIN tf_account_table a ON a.account_id=t.uid WHERE DATE(date)= "' + data.date + '" AND t.uid=' + data.agentid + ' AND t.uid IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ') GROUP BY t.uid', [], callback);
        } else {
            return db.query('SELECT t.uid,a.account_id,a.account_name,t.date,(SELECT logout_time FROM `tf_loginactivity` WHERE uid=t.uid and DATE(date)=DATE(t.date) order by id desc limit 1) AS logout_time, (SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM `tf_breaktime` b WHERE account_id=t.uid AND DATE(start_time) = "' + data.date + '") as breaktime,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS holdcalltime FROM `tf_callingpausetime` b WHERE account_id=a.account_id AND b.date = "' + data.date + '"  and b.status=1 AND b.reason_id IN (SELECT reason_id FROM tf_hold_calling_reason where ACW=1) ) as totalholdcalltime ,  (SELECT (SUM(AgentTalkTime)) FROM `tf_cdr` WHERE AgentID=a.account_id AND DATE(CallStartTime) = "' + data.date + '" ) AS talktime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND DATE(CallStartTime) = "' + data.date + '"  AND CallTypeID IN (0,1)) AS totalcalls,(SELECT WrapUpTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) limit 0,1) AS wrapuptime,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) limit 0,1) AS closetime  FROM tf_loginactivity t INNER JOIN tf_account_table a ON a.account_id=t.uid WHERE DATE(date)= "' + data.date + '" AND t.uid IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ') GROUP BY t.uid', [], callback);
        }
    },
    getagentcalldurationgraphdata: function (data, callback) {
        //if (data.agentid > 0) {
        // console.log('SELECT A.account_name,A.account_id,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=1 AND (DATE(CallStartTime) = "' + data.date + '" ) AND CallStatus="TALKTOAGENT") AS dialerduration,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=2 AND (DATE(CallStartTime) = "' + data.date + '" ) AND CallStatus="TALKTOAGENT") AS incomingduration,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=0 AND (DATE(CallStartTime) = "' + data.date + '" ) AND CallStatus="TALKTOAGENT") AS outgoingduration,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) = "' + data.date + '") AND (CallStatus="ANSWER" OR CallStatus="TALKTOAGENT")) AS totalduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) = "' + data.date + '" ) AND (CallStatus="ANSWER" OR CallStatus="TALKTOAGENT")) AS totalconnectedcalls FROM `tf_account_table` A LEFT JOIN tf_cdr C ON C.AgentID=A.account_id WHERE A.created_by=' + data.userid + ' AND A.account_id=' + data.agentid + ' AND DATE(C.CallStartTime) = "' + data.date + '" GROUP BY A.account_id');  
        return db.query('SELECT A.account_name,A.account_id,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=1 AND (DATE(CallStartTime) = "' + data.date + '" ) AND CallStatus="TALKTOAGENT") AS dialerduration,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=2 AND (DATE(CallStartTime) = "' + data.date + '" ) AND CallStatus="ANSWER") AS incomingduration,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=0 AND (DATE(CallStartTime) = "' + data.date + '" ) AND CallStatus="ANSWER") AS outgoingduration,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) = "' + data.date + '") AND (CallStatus="ANSWER" OR CallStatus="TALKTOAGENT")) AS totalduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) = "' + data.date + '" ) AND (CallStatus="ANSWER" OR CallStatus="TALKTOAGENT")) AS totalconnectedcalls FROM `tf_account_table` A LEFT JOIN tf_cdr C ON C.AgentID=A.account_id WHERE A.created_by=' + data.userid + ' AND A.account_id=' + data.agentid + ' AND DATE(C.CallStartTime) = "' + data.date + '" GROUP BY A.account_id', [], callback);
        /*} else {  
            //console.log('SELECT A.account_name,A.account_id,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) = "' + data.date + '") AND (CallStatus="ANSWER" OR CallStatus="TALKTOAGENT")) AS totalduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) = "' + data.date + '" )) AS totalcalls FROM `tf_account_table` A LEFT JOIN tf_cdr C ON C.AgentID=A.account_id WHERE A.created_by=' + data.userid + ' AND DATE(C.CallStartTime) = "' + data.date + '" GROUP BY A.account_id');
            return db.query('SELECT A.account_name,A.account_id,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) = "' + data.date + '") AND (CallStatus="ANSWER" OR CallStatus="TALKTOAGENT")) AS totalduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) = "' + data.date + '" ) AND (CallStatus="ANSWER" OR CallStatus="TALKTOAGENT")) AS totalconnectedcalls,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=1 AND (DATE(CallStartTime) = "' + data.date + '" ) AND CallStatus="TALKTOAGENT") AS dialerduration,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=2 AND (DATE(CallStartTime) = "' + data.date + '" ) AND CallStatus="TALKTOAGENT") AS incomingduration,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id and CallTypeID=0 AND (DATE(CallStartTime) = "' + data.date + '" ) AND CallStatus="TALKTOAGENT") AS outgoingduration FROM `tf_account_table` A LEFT JOIN tf_cdr C ON C.AgentID=A.account_id WHERE A.created_by=' + data.userid + ' AND DATE(C.CallStartTime) = "' + data.date + '" GROUP BY A.account_id', [], callback);
        }*/
    },
    getmanagercampaigngraphdata: function (data, callback) {
        if (data.campaignid > 0) {
            // console.log('SELECT c.cam_name,c.create_date,c.camid,count(cont_id) as total_contact,(SELECT count(*)  FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.CallStatus="ANSWER" AND CallStartTime>="' + data.date + '") as ANSWER ,(SELECT count(*) FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid =c1.numid WHERE c1.cam_id = c.camid and (cdr.CallStatus!="ANSWER") AND CallStartTime>="' + data.date + '" ) as NOANSWER,(SELECT count(*) FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid AND CallStartTime>="' + data.date + '" ) as totalcalls,(SELECT count(*)  FROM `tf_campaigns_numbers`as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.feedback="schedule" AND CallStartTime>="' + data.date + '" ) as schedule,(SELECT count(*)  FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.feedback="not interested" AND CallStartTime>="' + data.date + '" ) as not_interested FROM tf_campaigns_numbers as cn inner join tf_campaigns as c on c.camid=cn.cam_id where cn.account_id=' + data.userid + ' AND cn.cam_id='+data.campaignid+' group by cam_id');
            return db.query('SELECT c.cam_name,c.create_date,c.camid,count(cont_id) as total_contact,(SELECT count(*)  FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.CallStatus="ANSWER" AND CallStartTime>="' + data.date + '") as ANSWER ,(SELECT count(*) FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid =c1.numid WHERE c1.cam_id = c.camid and (cdr.CallStatus!="ANSWER") AND CallStartTime>="' + data.date + '" ) as NOANSWER,(SELECT count(*) FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid AND CallStartTime>="' + data.date + '" ) as totalcalls,(SELECT count(*)  FROM `tf_campaigns_numbers`as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.feedback="schedule" AND CallStartTime>="' + data.date + '" ) as schedule,(SELECT count(*)  FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.feedback="not interested" AND CallStartTime>="' + data.date + '" ) as not_interested FROM tf_campaigns_numbers as cn inner join tf_campaigns as c on c.camid=cn.cam_id where cn.account_id=' + data.userid + ' AND cn.cam_id=' + data.campaignid + ' AND  DATE(cn.date)="' + data.date + '" group by cam_id', [], callback);
        } else {
            //console.log('SELECT c.cam_name,c.create_date,c.camid,count(cont_id) as total_contact,(SELECT count(*)  FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.CallStatus="ANSWER" AND CallStartTime>="' + data.date + '") as ANSWER ,(SELECT count(*) FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid =c1.numid WHERE c1.cam_id = c.camid and (cdr.CallStatus!="ANSWER") AND CallStartTime>="' + data.date + '" ) as NOANSWER,(SELECT count(*) FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid AND CallStartTime>="' + data.date + '" ) as totalcalls,(SELECT count(*)  FROM `tf_campaigns_numbers`as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.feedback="schedule" AND CallStartTime>="' + data.date + '" ) as schedule,(SELECT count(*)  FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.feedback="not interested" AND CallStartTime>="' + data.date + '" ) as not_interested FROM tf_campaigns_numbers as cn inner join tf_campaigns as c on c.camid=cn.cam_id where cn.account_id=' + data.userid + '  AND  DATE(cn.date)="' + data.date + '" group by cam_id');
            return db.query('SELECT c.cam_name,c.create_date,c.camid,count(cont_id) as total_contact,(SELECT count(*)  FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.CallStatus="ANSWER" AND CallStartTime>="' + data.date + '") as ANSWER ,(SELECT count(*) FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid =c1.numid WHERE c1.cam_id = c.camid and (cdr.CallStatus!="ANSWER") AND CallStartTime>="' + data.date + '" ) as NOANSWER,(SELECT count(*) FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid AND CallStartTime>="' + data.date + '" ) as totalcalls,(SELECT count(*)  FROM `tf_campaigns_numbers`as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.feedback="schedule" AND CallStartTime>="' + data.date + '" ) as schedule,(SELECT count(*)  FROM `tf_campaigns_numbers` as c1 inner join tf_cdr as cdr on cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  and cdr.feedback="not interested" AND CallStartTime>="' + data.date + '" ) as not_interested FROM tf_campaigns_numbers as cn inner join tf_campaigns as c on c.camid=cn.cam_id where cn.account_id=' + data.userid + '  AND  DATE(cn.date)="' + data.date + '" group by cam_id', [], callback);
        }
    },
    getivrinputsgraphdata: function (data, callback) {
        //console.log(data.status);
        var where = 'I.account_id=' + data.userid;
        if (data.ivrid) {
            where += ' and I.ivrid=' + data.ivrid;
        }
        if (data.extensionid) {
            where += ' and I.extension=' + data.extensionid;
        }
        if (data.date != '1970-01-01') {
            where += ' and DATE(C.CallStartTime) = "' + data.date + '" ';
        }
        return db.query('SELECT COUNT(C.id) as count,I.extension,IB.IvrName FROM tf_getivrinput I left join IvrBuilder IB on I.ivrid = IB.BuilderID  right join tf_cdr C ON C.id=I.cdrid WHERE  ' + where + ' GROUP BY I.extension', [], callback);
    },
    getagentloginactivitygraphdata: function (data, callback) {
        where = 'DATE(date)="' + data.date + '"  AND a.created_by=' + data.userid;
        if (data.agentid > 0) {
            where += ' AND la.uid=' + data.agentid;
        }
        //console.log('SELECT la.id,la.uid,la.date,la.date as login,la.logout_time as logout,la.ip,a.account_name as agent FROM `tf_loginactivity` la LEFT JOIN `tf_account_table` a ON la.uid=a.account_id WHERE '+where +' ORDER BY date desc');
        return db.query('SELECT (SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (date BETWEEN "' + data.date + ' 09:00:00" AND "' + data.date + ' 10:00:00")) as login9,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (logout_time BETWEEN "' + data.date + ' 09:00:00" AND "' + data.date + ' 10:00:00")) as logout9,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (date BETWEEN "' + data.date + ' 10:00:00" AND "' + data.date + ' 11:00:00")) as login10,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (logout_time BETWEEN "' + data.date + ' 10:00:00" AND "' + data.date + ' 11:00:00")) as logout10,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (date BETWEEN "' + data.date + ' 11:00:00" AND "' + data.date + ' 12:00:00")) as login11,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (logout_time BETWEEN "' + data.date + ' 11:00:00" AND "' + data.date + ' 12:00:00")) as logout11,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (date BETWEEN "' + data.date + ' 12:00:00" AND "' + data.date + ' 13:00:00")) as login12,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (logout_time BETWEEN "' + data.date + ' 12:00:00" AND "' + data.date + ' 13:00:00")) as logout12,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (date BETWEEN "' + data.date + ' 13:00:00" AND "' + data.date + ' 14:00:00")) as login13,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (logout_time BETWEEN "' + data.date + ' 13:00:00" AND "' + data.date + ' 14:00:00")) as logout13,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (date BETWEEN "' + data.date + ' 14:00:00" AND "' + data.date + ' 15:00:00")) as login14,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (logout_time BETWEEN "' + data.date + ' 14:00:00" AND "' + data.date + ' 15:00:00")) as logout14,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (date BETWEEN "' + data.date + ' 15:00:00" AND "' + data.date + ' 16:00:00")) as login15,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (logout_time BETWEEN "' + data.date + ' 15:00:00" AND "' + data.date + ' 16:00:00")) as logout15,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (date BETWEEN "' + data.date + ' 16:00:00" AND "' + data.date + ' 17:00:00")) as login16,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (logout_time BETWEEN "' + data.date + ' 16:00:00" AND "' + data.date + ' 17:00:00")) as logout16,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (date BETWEEN "' + data.date + ' 17:00:00" AND "' + data.date + ' 18:00:00")) as login17,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (logout_time BETWEEN "' + data.date + ' 17:00:00" AND "' + data.date + ' 18:00:00")) as logout17,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (date BETWEEN "' + data.date + ' 18:00:00" AND "' + data.date + ' 19:00:00")) as login18,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (logout_time BETWEEN "' + data.date + ' 18:00:00" AND "' + data.date + ' 19:00:00")) as logout18,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (date BETWEEN "' + data.date + ' 19:00:00" AND "' + data.date + ' 20:00:00")) as login19,(SELECT COUNT(id) FROM tf_loginactivity WHERE uid=a.account_id and (logout_time BETWEEN "' + data.date + ' 19:00:00" AND "' + data.date + ' 20:00:00")) as logout19 FROM `tf_loginactivity` la LEFT JOIN `tf_account_table` a ON la.uid=a.account_id WHERE ' + where + ' GROUP BY la.uid ORDER BY date desc', [], callback);
    },

    //     //console.log(JSON.stringify(data));
    //     var where = 'accountid=' + data.userid;
    //     if (data.date != '1970-01-01') {
    //         where += " and DATE(CallStartTime)>='" + data.date + "'";
    //     }

    //     if (data.agentid > 0) {
    //         where += " and AgentID='" + data.agentid + "'";
    //     }
    //     //console.log("SELECT * FROM `tf_cdr` where ' + where + ' and id IN (select cdrid FROM `tf_feedbackform_data`) ORDER BY ' + data.sortcolumn + ' ' + data.sortdirection + ' LIMIT ' + data.position + ',' + data.pageSize + ''");

    //     //console.log('SELECT * FROM `tf_cdr` where ' + where + ' ORDER BY ' + data.sortcolumn + ' ' + data.sortdirection + ' LIMIT ' + data.position + ',' + data.pageSize + '');
    //     return db.query('SELECT COUNT(id) as count,AgentName FROM `tf_cdr` where ' + where + ' and id IN (select cdrid FROM `tf_feedbackform_data`) GROUP BY AgentID ORDER BY id DESC', [], callback);
    // },
    searchacwgraphdata: function (data, callback) {
        var d = new Date();
        var currentyear = d.getFullYear();
        if (data.type == 0) {
            var where = "";
            if (data.agentid > 0) {
                where += " and  t.account_id=" + data.agentid;
            }
            return db.query('SELECT t.account_id,a.account_name,(SELECT SUM(TIMEDIFF(C.stop_time,C.start_time)) FROM tf_callingpausetime C LEFT JOIN tf_hold_calling_reason H ON H.reason_id=C.reason_id WHERE C.account_id=t.account_id AND MONTH(C.date)="01" AND YEAR(date)="' + currentyear + '" AND C.reason_id IS NOT NULL AND H.ACW=1) AS count1,(SELECT SUM(TIMEDIFF(C.stop_time,C.start_time)) FROM tf_callingpausetime C LEFT JOIN tf_hold_calling_reason H ON H.reason_id=C.reason_id WHERE C.account_id=t.account_id AND MONTH(C.date)="02" AND YEAR(date)="' + currentyear + '" AND C.reason_id IS NOT NULL AND H.ACW=1) AS count2,(SELECT SUM(TIMEDIFF(C.stop_time,C.start_time)) FROM tf_callingpausetime C LEFT JOIN tf_hold_calling_reason H ON H.reason_id=C.reason_id WHERE C.account_id=t.account_id AND MONTH(C.date)="03" AND YEAR(date)="' + currentyear + '" AND C.reason_id IS NOT NULL AND H.ACW=1) AS count3 ,(SELECT SUM(TIMEDIFF(C.stop_time,C.start_time)) FROM tf_callingpausetime C LEFT JOIN tf_hold_calling_reason H ON H.reason_id=C.reason_id WHERE C.account_id=t.account_id AND MONTH(C.date)="04" AND YEAR(date)="' + currentyear + '" AND C.reason_id IS NOT NULL AND H.ACW=1) AS count4,(SELECT SUM(TIMEDIFF(C.stop_time,C.start_time)) FROM tf_callingpausetime C LEFT JOIN tf_hold_calling_reason H ON H.reason_id=C.reason_id WHERE C.account_id=t.account_id AND MONTH(C.date)="05" AND YEAR(date)="' + currentyear + '" AND C.reason_id IS NOT NULL AND H.ACW=1) AS count5,(SELECT SUM(TIMEDIFF(C.stop_time,C.start_time)) FROM tf_callingpausetime C LEFT JOIN tf_hold_calling_reason H ON H.reason_id=C.reason_id WHERE C.account_id=t.account_id AND MONTH(C.date)="06" AND YEAR(date)="' + currentyear + '" AND C.reason_id IS NOT NULL AND H.ACW=1) AS count6,(SELECT SUM(TIMEDIFF(C.stop_time,C.start_time)) FROM tf_callingpausetime C LEFT JOIN tf_hold_calling_reason H ON H.reason_id=C.reason_id WHERE C.account_id=t.account_id AND MONTH(C.date)="07" AND YEAR(date)="' + currentyear + '" AND C.reason_id IS NOT NULL AND H.ACW=1) AS count7,(SELECT SUM(TIMEDIFF(C.stop_time,C.start_time)) FROM tf_callingpausetime C LEFT JOIN tf_hold_calling_reason H ON H.reason_id=C.reason_id WHERE C.account_id=t.account_id AND MONTH(C.date)="08" AND YEAR(date)="' + currentyear + '" AND C.reason_id IS NOT NULL AND H.ACW=1) AS count8,(SELECT SUM(TIMEDIFF(C.stop_time,C.start_time)) FROM tf_callingpausetime C LEFT JOIN tf_hold_calling_reason H ON H.reason_id=C.reason_id WHERE C.account_id=t.account_id AND MONTH(C.date)="09" AND YEAR(date)="' + currentyear + '" AND C.reason_id IS NOT NULL AND H.ACW=1) AS count9,(SELECT SUM(TIMEDIFF(C.stop_time,C.start_time)) FROM tf_callingpausetime C LEFT JOIN tf_hold_calling_reason H ON H.reason_id=C.reason_id WHERE C.account_id=t.account_id AND MONTH(C.date)="10" AND YEAR(date)="' + currentyear + '" AND C.reason_id IS NOT NULL AND H.ACW=1) AS count10,(SELECT SUM(TIMEDIFF(C.stop_time,C.start_time)) FROM tf_callingpausetime C LEFT JOIN tf_hold_calling_reason H ON H.reason_id=C.reason_id WHERE C.account_id=t.account_id AND MONTH(C.date)="11" AND YEAR(date)="' + currentyear + '" AND C.reason_id IS NOT NULL AND H.ACW=1) AS count11,(SELECT SUM(TIMEDIFF(C.stop_time,C.start_time)) FROM tf_callingpausetime C LEFT JOIN tf_hold_calling_reason H ON H.reason_id=C.reason_id WHERE C.account_id=t.account_id AND MONTH(C.date)="12" AND YEAR(date)="' + currentyear + '" AND C.reason_id IS NOT NULL AND H.ACW=1) AS count12  FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE t.reason_id IS NOT NULL ' + where + '  AND H.ACW=1 AND t.account_id IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ') GROUP BY account_id', [], callback);
        } else {
            var where = "";
            if (data.agentid > 0) {
                where += " and  t.account_id=" + data.agentid;
            }
            return db.query('SELECT t.account_id,a.account_name,(SELECT SUM(TIMEDIFF(stop_time,start_time)) FROM tf_callingpausetime WHERE account_id=t.account_id AND MONTH(date)="01" AND YEAR(date)="' + currentyear + '" AND reason_id IS NOT NULL ) AS count1,(SELECT SUM(TIMEDIFF(stop_time,start_time)) FROM tf_callingpausetime WHERE account_id=t.account_id AND MONTH(date)="02" AND YEAR(date)="' + currentyear + '" AND reason_id IS NOT NULL ) AS count2,(SELECT SUM(TIMEDIFF(stop_time,start_time)) FROM tf_callingpausetime WHERE account_id=t.account_id AND MONTH(date)="03"  AND YEAR(date)="' + currentyear + '"AND reason_id IS NOT NULL ) AS count3 ,(SELECT SUM(TIMEDIFF(stop_time,start_time)) FROM tf_callingpausetime WHERE account_id=t.account_id AND MONTH(date)="04" AND YEAR(date)="' + currentyear + '" AND reason_id IS NOT NULL ) AS count4,(SELECT SUM(TIMEDIFF(stop_time,start_time)) FROM tf_callingpausetime WHERE account_id=t.account_id AND MONTH(date)="05" AND YEAR(date)="' + currentyear + '" AND reason_id IS NOT NULL ) AS count5,(SELECT SUM(TIMEDIFF(stop_time,start_time)) FROM tf_callingpausetime WHERE account_id=t.account_id AND MONTH(date)="06" AND YEAR(date)="' + currentyear + '" AND reason_id IS NOT NULL ) AS count6,(SELECT SUM(TIMEDIFF(stop_time,start_time)) FROM tf_callingpausetime WHERE account_id=t.account_id AND MONTH(date)="07" AND YEAR(date)="' + currentyear + '" AND reason_id IS NOT NULL ) AS count7,(SELECT SUM(TIMEDIFF(stop_time,start_time)) FROM tf_callingpausetime WHERE account_id=t.account_id AND MONTH(date)="08" AND YEAR(date)="' + currentyear + '" AND reason_id IS NOT NULL ) AS count8,(SELECT SUM(TIMEDIFF(stop_time,start_time)) FROM tf_callingpausetime WHERE account_id=t.account_id AND MONTH(date)="09" AND YEAR(date)="' + currentyear + '" AND reason_id IS NOT NULL ) AS count9,(SELECT SUM(TIMEDIFF(stop_time,start_time)) FROM tf_callingpausetime WHERE account_id=t.account_id AND MONTH(date)="10" AND YEAR(date)="' + currentyear + '" AND reason_id IS NOT NULL ) AS count10,(SELECT SUM(TIMEDIFF(stop_time,start_time)) FROM tf_callingpausetime WHERE account_id=t.account_id AND MONTH(date)="11" AND YEAR(date)="' + currentyear + '" AND reason_id IS NOT NULL ) AS count11,(SELECT SUM(TIMEDIFF(stop_time,start_time)) FROM tf_callingpausetime WHERE account_id=t.account_id AND MONTH(date)="12" AND YEAR(date)="' + currentyear + '" AND reason_id IS NOT NULL ) AS count12  FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE t.reason_id IS NOT NULL ' + where + '  AND t.account_id IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ') GROUP BY account_id', [], callback);
        }
    },
    getagentmissedcallgraphdata: function (data, callback) {
        if (data.agentid > 0) {
            return db.query('SELECT COUNT(M.mid) as count,M.agentid,A.account_name FROM `tf_agent_missedcall` M INNER JOIN tf_account_table A on A.account_id=M.agentid WHERE DATE(M.calldate)="' + data.date + '" and A.created_by=' + data.userid + ' and A.account_id=' + data.agentid + ' GROUP BY M.agentid', callback);
        } else {
            return db.query('SELECT COUNT(M.mid) as count,M.agentid,A.account_name FROM `tf_agent_missedcall` M INNER JOIN tf_account_table A on A.account_id=M.agentid WHERE DATE(M.calldate)="' + data.date + '" and A.created_by=' + data.userid + ' GROUP BY M.agentid', [], callback);
        }
    },
    // agentreviewratedata: function (data, callback) {
    //     where = 'A.created_by='+data.userid;
    //     if (data.agentid > 0) {
    //         where +=' and C.AgentID='+data.agentid;
    //     } 
    //     if (data.parameter > 0) {
    //         where +=' and R.review_formid='+data.parameter;
    //     } 
    //     console.log('SELECT R.review_rate,R.create_date,C.*,F.form_parameter,R.cdrid FROM `tf_manager_review_rate` R LEFT JOIN tf_cdr C ON C.id=R.cdrid LEFT JOIN tf_call_review_form F ON F.form_id=R.review_formid LEFT JOIN tf_account_table A on A.account_id=C.AgentID where '+where);
    //         return db.query('SELECT R.review_rate,R.create_date,C.*,F.form_parameter,R.cdrid FROM `tf_manager_review_rate` R LEFT JOIN tf_cdr C ON C.id=R.cdrid LEFT JOIN tf_call_review_form F ON F.form_id=R.review_formid LEFT JOIN tf_account_table A on A.account_id=C.AgentID where '+where, [], callback);

    // },
    agentreviewratedata: function (data, callback) {
        var where = "d.created_by=" + data.userid;
        if (data.agentid) {
            where += " and d.account_id=" + data.agentid;
        }
        if (data.startdate != '1970-01-01') {
            where += " AND a.create_date BETWEEN CONCAT('" + data.startdate + "',' 00:00:00') "
        }

        if (data.enddate != '1970-01-01') {
            where += "AND CONCAT('" + data.enddate + "',' 23:59:59')) AS j GROUP BY cdr_id";
        }
        console.log("SELECT DISTINCT(cdr_id),agentname,callstarttime,callernumber,callername,calltalktime,GROUP_CONCAT(form_parameter,': ',review_rate) AS ratings,ROUND(AVG(review_rate)) AS average_rating,review_date FROM(SELECT a.cdrid AS cdr_id,b.callstarttime AS callstarttime,b.callernumber AS callernumber,b.callername AS callername,b.agentname AS agentname, SEC_TO_TIME(b.calltalktime) AS calltalktime,c.form_parameter AS form_parameter,a.review_rate AS review_rate,a.create_date AS review_date FROM tf_manager_review_rate a LEFT JOIN tf_cdr b ON b.id=a.cdrid LEFT JOIN tf_call_review_form c ON c.form_id=a.review_formid LEFT JOIN tf_account_table d ON d.account_id=b.AgentID WHERE " + where);

        return db.query("SELECT DISTINCT(cdr_id),agentname,callstarttime,callernumber,callername,calltalktime,GROUP_CONCAT(form_parameter,': ',review_rate) AS ratings,ROUND(AVG(review_rate)) AS average_rating,review_date FROM(SELECT a.cdrid AS cdr_id,b.callstarttime AS callstarttime,b.callernumber AS callernumber,b.callername AS callername,b.agentname AS agentname, SEC_TO_TIME(b.calltalktime) AS calltalktime,c.form_parameter AS form_parameter,a.review_rate AS review_rate,a.create_date AS review_date FROM tf_manager_review_rate a LEFT JOIN tf_cdr b ON b.id=a.cdrid LEFT JOIN tf_call_review_form c ON c.form_id=a.review_formid LEFT JOIN tf_account_table d ON d.account_id=b.AgentID WHERE " + where, callback)
    },
    getagentholdcallingreasonsummarydata: function (data, callback) {
        //console.log('SELECT t.account_id,a.account_name,t.start_time,t.stop_time,H.reason_name,t.date FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND t.account_id IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ')');
        if (data.type == 0) {
            var where = "";
            if (data.agentid) {
                where += " and  t.account_id=" + data.agentid;
            }
            console.log("new");
            console.log('SELECT t.account_id,a.account_name,SEC_TO_TIME(SUM(TIMEDIFF(t.stop_time,t.start_time))) AS holdtime,H.reason_name,t.date FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE t.reason_id IS NOT NULL ' + where + ' and (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND ACW=1 AND t.account_id IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ') group by t.account_id');
            return db.query('SELECT t.account_id,a.account_name,SEC_TO_TIME(SUM(TIMEDIFF(t.stop_time,t.start_time))) AS holdtime,H.reason_name,t.date FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE t.reason_id IS NOT NULL ' + where + ' and (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND ACW=1 AND t.account_id IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ') group by t.account_id', [], callback);
        } else {
            var where = "";
            if (data.agentid) {
                where += " and  t.account_id=" + data.agentid;
            }
            console.log("old");
            console.log('SELECT t.account_id,a.account_name,SEC_TO_TIME(SUM(TIMEDIFF(t.stop_time,t.start_time))) AS holdtime,H.reason_name,t.date FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE t.reason_id IS NOT NULL ' + where + ' and (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND t.account_id IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ') group by t.account_id');
            return db.query('SELECT t.account_id,a.account_name,SEC_TO_TIME(SUM(TIMEDIFF(t.stop_time,t.start_time))) AS holdtime,H.reason_name,t.date FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE t.reason_id IS NOT NULL ' + where + ' and (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND t.account_id IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ') group by t.account_id', [], callback);
        }
    },
    getivrcampaign: function (id, callback) {
        //console.log(data.status);
        return db.query('SELECT * FROM tf_campaigns WHERE cam_ivrid=' + id, [], callback);
    },
    getactiveagents: function (id, callback) {
        //console.log('SELECT * from tf_account_table where current_status=0 and created_by=' + id + ' ORDER by account_name ASC')
        return db.query('SELECT * from tf_account_table where is_deleted="no" and current_status=0 and created_by=' + id + ' ORDER by account_name ASC', [], callback);
    },
    getCampaign: function (cid, callback) {
        return db.query('Select * from tf_campaigns where account_id=? order by cam_name asc', cid, callback);
    },
    getcampaigndispositiondata: function (data, callback) {
        var where = ' C.account_id=' + data.userid;
        if (data.campaignid > 0) {
            where += " and C.camid=" + data.campaignid;
        }
        if (data.startdate != '1970-01-01' && data.enddate != '1970-01-01') {
            where += " AND (DATE(CDR.CallStartTime) BETWEEN '" + data.startdate + "' AND '" + data.enddate + "')";
        }
        console.log('SELECT COUNT(CDR.id) as count,C.cam_name,C.camid,CDR.feedback FROM `tf_cdr` CDR LEFT JOIN tf_campaigns_numbers CN ON CN.numid=CDR.auto_numid LEFT JOIN tf_campaigns C ON C.camid=CN.cam_id WHERE  ' + where + ' GROUP BY CDR.feedback  ORDER BY C.cam_name DESC');
        return db.query('SELECT COUNT(CDR.id) as count,C.cam_name,C.camid,CDR.feedback FROM `tf_cdr` CDR LEFT JOIN tf_campaigns_numbers CN ON CN.numid=CDR.auto_numid LEFT JOIN tf_campaigns C ON C.camid=CN.cam_id WHERE  ' + where + ' GROUP BY CDR.feedback  ORDER BY C.cam_name DESC', [], callback);
    },
    getdispositioncampaign: function (data, callback) {
        // var where=' C.account_id='+data.userid;

        // return db.query('SELECT DISTINCT(C.cam_name) AS cam_name,C.camid FROM `tf_cdr` CDR LEFT JOIN tf_campaigns_numbers CN ON CN.numid=CDR.auto_numid LEFT JOIN tf_campaigns C ON C.camid=CN.cam_id WHERE  '+where+' GROUP BY  CDR.feedback', [], callback);
        return db.query("SELECT cam_name,camid FROM `tf_campaigns` WHERE account_id =" + data.userid + " ORDER BY `camid` DESC ", callback)
    },
    GetLiveCdrDataByUid: async function (uid) {
        return new Promise(function (resolve, reject) {
            db.query('SELECT * FROM tf_cdr  WHERE AgentID=? and CdrStatus>0 ORDER BY id DESC LIMIT 0,1', [uid], function (err, results) {
                if (err) {
                    console.log("[mysql error]", err);
                    resolve(0);
                } else {
                    if (results.length > 0) {
                        resolve(results);
                    } else {
                        resolve(0);
                    }
                }
            })
        })
    },
    getagentperformancedata_new: function (data, callback) {
        console.log('SELECT a.account_id,a.account_name, IFNULL(COUNT(c.id),0) AS total_calls,IFNULL(COUNT(c.id),0) AS totalcalls, IFNULL(COUNT(IF(c.agentID IS NOT NULL AND calltalktime>0,1,NULL)),0) AS answercalls ,IFNULL(COUNT(IF(c.AgentID=a.account_id AND CallTypeID=0,1,NULL)),0) AS outboundcalls,IFNULL(COUNT(IF(c.AgentID=a.account_id AND CallTypeID=0 AND AgentTalkTime>0,1,NULL)),0) AS outboundconnectcalls,IFNULL(COUNT(IF(c.AgentID=a.account_id AND CallTypeID=2,1,NULL)),0) AS inboundcalls,IFNULL(COUNT(IF(c.AgentID=a.account_id AND CallTypeID=1,1,NULL)),0) AS dialercalls,(SELECT COUNT(c.id) FROM tf_cdr c LEFT JOIN tf_agent_missedcall m ON c.id=m.cdrid WHERE m.calldate BETWEEN "' + data.startdate + ' 00:00:00" AND "' + data.enddate + ' 23:59:59" AND c.AgentID=a.account_id ORDER BY m.calldate DESC) AS missedcalls,IFNULL(SUM(IF(c.AgentID=a.account_id AND AgentTalkTime>0,AgentTalkTime,0)),0) AS talktime,(SELECT WrapUpTime FROM HuntGroup WHERE GroupID IN (SELECT HuntGroupID FROM HuntGroupDetail WHERE AgentID = a.account_id ) LIMIT 0,1) AS wrapuptime,(SELECT CloseTime FROM HuntGroup WHERE GroupID IN (SELECT HuntGroupID FROM HuntGroupDetail WHERE AgentID = a.account_id ) LIMIT 0,1) AS closetime,(SELECT SUM(TIMESTAMPDIFF(SECOND, start_time,stop_time)) AS breaktime FROM tf_breaktime WHERE account_id=a.account_id AND DATE BETWEEN "' + data.startdate + ' 00:00:00" AND "' + data.enddate + ' 23:59:59" AND break_status=1) AS breaktime FROM tf_account_table a LEFT JOIN tf_cdr c ON a.account_id=c.AgentID WHERE a.created_by = ' + data.userid + ' AND c.CallStartTime BETWEEN "' + data.startdate + ' 00:00:00" AND "' + data.enddate + ' 23:59:59" AND c.cdrstatus=0 AND a.is_deleted="no" AND a.current_status=0 GROUP BY a.account_id')
       return db.query('SELECT a.account_id,a.account_name, IFNULL(COUNT(c.id),0) AS total_calls,IFNULL(COUNT(c.id),0) AS totalcalls, IFNULL(COUNT(IF(c.agentID IS NOT NULL AND calltalktime>0,1,NULL)),0) AS answercalls ,IFNULL(COUNT(IF(c.AgentID=a.account_id AND CallTypeID=0,1,NULL)),0) AS outboundcalls,IFNULL(COUNT(IF(c.AgentID=a.account_id AND CallTypeID=0 AND AgentTalkTime>0,1,NULL)),0) AS outboundconnectcalls,IFNULL(COUNT(IF(c.AgentID=a.account_id AND CallTypeID=2,1,NULL)),0) AS inboundcalls,IFNULL(COUNT(IF(c.AgentID=a.account_id AND CallTypeID=1,1,NULL)),0) AS dialercalls,(SELECT COUNT(c.id) FROM tf_cdr c LEFT JOIN tf_agent_missedcall m ON c.id=m.cdrid WHERE m.calldate BETWEEN "' + data.startdate + ' 00:00:00" AND "' + data.enddate + ' 23:59:59" AND c.AgentID=a.account_id ORDER BY m.calldate DESC) AS missedcalls,IFNULL(SUM(IF(c.AgentID=a.account_id AND AgentTalkTime>0,AgentTalkTime,0)),0) AS talktime,(SELECT WrapUpTime FROM HuntGroup WHERE GroupID IN (SELECT HuntGroupID FROM HuntGroupDetail WHERE AgentID = a.account_id ) LIMIT 0,1) AS wrapuptime,(SELECT CloseTime FROM HuntGroup WHERE GroupID IN (SELECT HuntGroupID FROM HuntGroupDetail WHERE AgentID = a.account_id ) LIMIT 0,1) AS closetime,(SELECT SUM(TIMESTAMPDIFF(SECOND, start_time,stop_time)) AS breaktime FROM tf_breaktime WHERE account_id=a.account_id AND DATE BETWEEN "' + data.startdate + ' 00:00:00" AND "' + data.enddate + ' 23:59:59" AND break_status=1) AS breaktime FROM tf_account_table a LEFT JOIN tf_cdr c ON a.account_id=c.AgentID WHERE a.created_by = ' + data.userid + ' AND c.CallStartTime BETWEEN "' + data.startdate + ' 00:00:00" AND "' + data.enddate + ' 23:59:59" AND c.cdrstatus=0 AND a.is_deleted="no" AND a.current_status=0 GROUP BY a.account_id', callback)
    },
    calltrafficreport: function (data, callback) {
        return db.query("CALL dashboard_voice(0," + data.userid + ",@a)", callback)
    },
    hourlycallreportgraph: function (data, callback) {
        // return db.query("CALL hourly_calls('2022-02-04',909,@a,@b,@c,@d,@e,@f)",callback);
        return db.query("CALL hourly_calls('" + data.date + "'," + data.userid + ",@a,@b,@c,@d,@e,@f)", callback)

    },
    getsalesfunnelreport: function (data, callback) {   //return db.query("SELECT DISTINCT(c.stage_name),COUNT(z.l_id)AS count FROM (SELECT a.user_id AS user_id,a.s_id AS stage_id,a.stage_name AS stage_name,b.status_master AS status_master FROM tf_lead_stage a LEFT JOIN tf_lead_stage_status b ON a.s_id=b.stage_id WHERE a.user_id="+data.userid+" ORDER BY a.s_id)c LEFT JOIN tf_leads z ON c.status_master=z.status AND DATE(z.creation)=DATE(NOW()) AND z.user_id="+data.userid+" AND z.is_deleted='no' GROUP BY c.stage_name ORDER BY stage_id",callback)
        return db.query("SELECT DISTINCT(c.stage_name),COUNT(z.l_id)as count FROM (SELECT a.user_id AS user_id,a.s_id AS stage_id,a.stage_name AS stage_name,b.status_master AS status_master FROM tf_lead_stage a LEFT JOIN tf_lead_stage_status b ON a.s_id=b.stage_id WHERE a.user_id=" + data.userid + " ORDER BY a.s_id)c LEFT JOIN tf_leads z ON c.status_master=z.status AND DATE(z.creation)=DATE(NOW()) AND z.user_id=" + data.userid + "  AND z.is_deleted='no'  GROUP BY c.stage_name ORDER BY stage_id", callback);
        // return db.query("SELECT DISTINCT(STATUS) AS lead_stage,COUNT(*)lead_count FROM tf_leads WHERE user_id="+data.userid+" AND DATE(creation)=DATE(NOW()) GROUP BY STATUS",callback);
    },
    getleadsourcereport: function (data, callback) {
        return db.query("SELECT a.lead_source AS lead_source,COUNT(b.l_id)lead_count FROM (SELECT DISTINCT(source) AS lead_source FROM tf_leads WHERE user_id=" + data.userid + " AND source IS NOT NULL AND source!='')a LEFT JOIN tf_leads b ON a.lead_source=b.source AND DATE(b.creation)=DATE(NOW()) AND b.user_id=" + data.userid + " AND b.is_deleted='no'GROUP BY a.lead_source", callback)
        //old 15 jun return db.query("SELECT a.lead_source AS lead_source,COUNT(b.l_id)lead_count FROM (SELECT DISTINCT(source) AS lead_source FROM tf_leads WHERE user_id="+data.userid+" AND source IS NOT NULL AND source!='')a LEFT JOIN tf_leads b ON a.lead_source=b.source AND DATE(b.creation)=DATE(NOW()) AND b.user_id="+data.userid+" GROUP BY a.lead_source",callback)
        // return db.query("SELECT DISTINCT(source) AS lead_source,COUNT(*)lead_count FROM tf_leads WHERE user_id="+data.userid+" AND DATE(creation)=DATE(NOW()) GROUP BY source",callback);
    },
    getmanagerqueuecalls: function (data, callback) {
        //console.log('SELECT COUNT(id) AS queuecalls  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and in_queue=1');
        return db.query('SELECT COUNT(id) AS queuecalls  FROM `tf_cdr` WHERE accountid=' + data.userid + ' and in_queue=1', [], callback);
    },
    search_call_usage_report: function (data, callback) {
        return db.query("SELECT account_id,account_name,SUM(total_calls) AS total_calls,SUM(incoming_usage) AS incoming_usage,SUM(outgoing_usage) AS outgoing_usage,SUM(dialer_usage) AS dialer_usage FROM client_usage_report WHERE report_date BETWEEN CONCAT('" + data.startdate + "',' 00:00:00') AND CONCAT('" + data.enddate + "',' 23:59:59') GROUP BY account_id", [], callback);
    },
    // agent_performance_report_data: function (data, callback) {
    //     return db.query("SELECT agent_id,agent_name,SUM(breaktime) AS breaktime,SUM(totalholdcalltime) AS totalholdcalltime,SUM(talktime) AS talktime,wrapuptime,closetime,SUM(totalcalls) AS totalcalls,SUM(answercalls) AS answercalls,SUM(outboundcalls) AS outboundcalls,SUM(outboundconnectcalls) AS outboundconnectcalls,SUM(inboundcalls) AS inboundcalls,SUM(missedcalls) AS missedcalls FROM agent_performance_report WHERE report_date BETWEEN '" + data.startdate + "' AND '" + data.enddate + "' AND account_id=" + data.userid + " GROUP BY agent_id", callback)

    // },
    agent_break_time_report: function (data, callback) {
        var where = " (B.DATE BETWEEN '" + data.startdate + "' AND '" + data.enddate + "') AND A.current_status=0 AND A.is_deleted='no' AND A.created_by='" + data.account_id + "'";
        if (data.agentid) {
            where += " AND B.account_id=" + data.agentid;
        }
        // console.log("SELECT A.account_name,B.DATE,B.start_time AS break_start_time,B.stop_time AS break_end_time,TIMEDIFF(B.stop_time,B.start_time) AS break_duration,R.reason_name FROM tf_breaktime B INNER JOIN tf_account_table A ON A.account_id = B.account_id LEFT JOIN tf_hold_calling_reason R ON R.reason_id=B.break_type WHERE "+where);
        return db.query("SELECT A.account_name,B.DATE,B.start_time AS break_start_time,B.stop_time AS break_end_time,TIMEDIFF(B.stop_time,B.start_time) AS break_duration,R.reason_name FROM tf_breaktime B LEFT JOIN tf_account_table A ON A.account_id = B.account_id LEFT JOIN tf_hold_calling_reason R ON R.reason_id=B.break_type WHERE " + where, callback)
    },
    total_break_time_report: function (data, callback) {
        var where = " (B.DATE BETWEEN '" + data.startdate + "' AND '" + data.enddate + "') AND A.current_status=0 AND A.is_deleted='no' AND A.created_by='" + data.account_id + "'";
        if (data.agentid) {
            where += " AND B.account_id=" + data.agentid
        }
        // console.log("SELECT SEC_TO_TIME(sum(TIME_TO_SEC(TIMEDIFF(B.stop_time,B.start_time))))AS break_duration FROM tf_breaktime B INNER JOIN tf_account_table A ON A.account_id=B.account_id WHERE "+where);
        return db.query("SELECT SEC_TO_TIME(sum(TIME_TO_SEC(TIMEDIFF(B.stop_time,B.start_time))))AS break_duration FROM tf_breaktime B INNER JOIN tf_account_table A ON A.account_id=B.account_id WHERE " + where, callback);
        //return db.query("SELECT SEC_TO_TIME(SUM(TIMEDIFF(stop_time,start_time)))AS break_duration FROM tf_breaktime WHERE account_id= "+data.agentid+" AND DATE BETWEEN '"+data.startdate+"' AND '"+data.enddate+"'",callback);
    },
    callsupiviosertrafficreport: function (data, callback) {
        return db.query("CALL dashboard_voice_supervisor('" + data.date + "'," + data.userid + ",@a)", callback)
    },
    hourlysupiviorcallreportgraph: function (data, callback) {
        return db.query("CALL hourly_calls_supervisor('" + data.date + "'," + data.userid + ",@a,@b,@c,@d,@e,@f)", callback)

    },
    getsupervisioragentlivestatus: function (data, callback) {
        return db.query("SELECT A.is_loggedin,A.account_name,A.account_id,(SELECT start_time FROM `tf_breaktime` WHERE account_id = A.account_id AND break_status=0 ORDER BY break_id DESC LIMIT 0,1) AS break,(SELECT start_time FROM `tf_callingpausetime` WHERE account_id = A.account_id AND STATUS = 0 ORDER BY pause_id DESC LIMIT 0,1) AS callhold,(SELECT lastdate FROM `tf_tmp_agent` WHERE aid = A.account_id LIMIT 0,1) AS Idle FROM `tf_account_table` A WHERE A.account_id IN(SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id=" + data + " AND agentid IS NOT NULL AND agentid!='' AND agentid!=0) AND A.current_status!='1' AND A.is_deleted='no' ORDER BY Idle DESC", callback)
    },
    GetsupervisiorLiveCdrDataByUid: async function (uid) {
        return new Promise(function (resolve, reject) {
            db.query("SELECT * FROM tf_cdr  WHERE AgentID IN(SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id=? AND agentid IS NOT NULL AND agentid!='' AND agentid!=0) AND CdrStatus>0 ORDER BY id DESC LIMIT 0,1", [uid], function (err, results) {
                if (err) {
                    console.log("[mysql error]", err);
                    resolve(0);
                } else {
                    if (results.length > 0) {
                        resolve(results);
                    } else {
                        resolve(0);
                    }
                }
            })
        })
    },
    GetsupervisiorIdleTime: async function (agentid) {
        return new Promise(function (resolve, reject) {
            db.query("SELECT * FROM tf_tmp_agent  WHERE aid IN(SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id=? AND agentid IS NOT NULL AND agentid!='' AND agentid!=0)", [agentid], function (err, results) {
                if (err) {
                    console.log("[mysql error]", err);
                    resolve(0);
                } else {
                    if (results.length > 0) {
                        resolve(results);
                    } else {
                        resolve(0);
                    }
                }
            })
        })
    },
    getsupervisiorsalesfunnelreport: function (data, callback) {
        return db.query("SELECT DISTINCT(c.stage_name),COUNT(z.l_id)as count  FROM (SELECT a.user_id AS user_id,a.s_id AS stage_id,a.stage_name AS stage_name,b.status_master AS status_master FROM tf_lead_stage a LEFT JOIN tf_lead_stage_status b ON a.s_id=b.stage_id WHERE a.user_id IN(SELECT userid FROM tf_supervisor_agents WHERE supervisor_account_id=" + data.userid + ") ORDER BY a.s_id)c LEFT JOIN tf_leads z ON c.status_master=z.status AND z.creation BETWEEN CONCAT('" + data.date + "',' 00:00:00') AND CONCAT('" + data.date + "',' 23:59:59') AND z.agent_id IN(SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id=" + data.userid + " AND agentid IS NOT NULL AND agentid!='' AND agentid!=0) GROUP BY c.stage_name", callback)
    },
    agent_supervisior_break_time_report: function (data, callback) {
        console.log(data);
        if (data.agentid) {
            return db.query('SELECT break_date,agent_id,break_start_time,break_end_time,break_duration,break_type,agent_name FROM (SELECT b.DATE AS break_date,b.account_id AS agent_id,b.start_time AS break_start_time,b.stop_time AS break_end_time,TIMEDIFF(b.stop_time,b.start_time) AS break_duration,b.break_type,a.account_name  AS agent_name FROM tf_breaktime b LEFT JOIN tf_account_table a ON a.account_id=b.account_id WHERE b.DATE BETWEEN "' + data.startdate + '" AND "' + data.enddate + '" AND b.account_id=' + data.agentid + ')c ', callback)

        } else {
            return db.query('SELECT break_date,agent_id,break_start_time,break_end_time,break_duration,break_type,agent_name FROM (SELECT b.DATE AS break_date,b.account_id AS agent_id,b.start_time AS break_start_time,b.stop_time AS break_end_time,TIMEDIFF(b.stop_time,b.start_time) AS break_duration,b.break_type,a.account_name  AS agent_name FROM tf_breaktime b LEFT JOIN tf_account_table a ON a.account_id=b.account_id WHERE b.account_id IN(SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id=' + data.userid + ' AND agentid IS NOT NULL AND agentid!="" AND agentid!=0)AND b.DATE BETWEEN "' + data.startdate + '" AND "' + data.enddate + '")c', callback)

        }
        // return db.query("SELECT break_date,agent_id,break_start_time,break_end_time,break_duration FROM (SELECT DATE AS break_date,account_id AS agent_id,start_time AS break_start_time,stop_time AS break_end_time,TIMEDIFF(stop_time,start_time) AS break_duration FROM tf_breaktime WHERE account_id IN(SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id="+data.id+" AND agentid IS NOT NULL AND agentid!='' AND agentid!=0)AND DATE BETWEEN '"+data.startdate+"' AND '"+data.enddate+"')c WHERE agent_id="+data.agentid,callback);
    },
    agent_supervisior_ReviewRateData: function (data, callback) {
        var where = " supervisor_account_id=" + data.userid + " AND agentid IS NOT NULL AND agentid!='' AND agentid!=0)";

        if (data.startdate != '1970-01-01') {
            where += " AND a.create_date BETWEEN CONCAT('" + data.startdate + "',' 00:00:00')";
        }

        if (data.enddate != '1970-01-01') {
            where += "AND CONCAT('" + data.enddate + "',' 23:59:59') ";
        }
        if (data.agentid) {
            where += " AND d.account_id=" + data.agentid;
        }

        return db.query("SELECT DISTINCT(cdr_id),agentname,callstarttime,callernumber,callername,calltalktime,GROUP_CONCAT(form_parameter,':',review_rate) AS ratings,ROUND(AVG(review_rate)) AS average_rating,review_date FROM(SELECT a.cdrid AS cdr_id,b.callstarttime AS callstarttime,b.callernumber AS callernumber,b.callername AS callername,b.agentname AS agentname, SEC_TO_TIME(b.calltalktime) AS calltalktime,c.form_parameter AS form_parameter,a.review_rate AS review_rate,a.create_date AS review_date FROM tf_manager_review_rate a LEFT JOIN tf_cdr b ON b.id=a.cdrid LEFT JOIN tf_call_review_form c ON c.form_id=a.review_formid LEFT JOIN tf_account_table d ON d.account_id=b.AgentID WHERE d.account_id IN(SELECT agentid FROM tf_supervisor_agents WHERE" + where + ") AS j GROUP BY cdr_id", callback)
    },
    supervisior_agentPerformanceData: function (data, callback) {
        return db.query('SELECT a.account_id,a.account_name,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM tf_breaktime b WHERE account_id=a.account_id AND start_time >= "'+data.startdate+' 00:00:00" AND start_time <= "'+data.enddate+' 23:59:59" ) AS breaktime,(SELECT (SUM(AgentTalkTime)) FROM tf_cdr WHERE AgentID=a.account_id AND (CallStartTime) >= "'+data.startdate+' 00:00:00" AND (CallStartTime) <= "'+data.enddate+' 23:59:59") AS talktime,(SELECT (COUNT(id)) FROM tf_cdr WHERE AgentID=a.account_id AND (CallStartTime) >= "'+data.startdate+' 00:00:00" AND (CallStartTime) <= "'+data.enddate+' 23:59:59" AND CallTypeID IN (0,1,2)) AS totalcalls,(SELECT WrapUpTime FROM HuntGroup WHERE GroupID IN (SELECT HuntGroupID FROM HuntGroupDetail WHERE AgentID = a.account_id ) LIMIT 0,1) AS wrapuptime,(SELECT CloseTime FROM HuntGroup WHERE GroupID IN (SELECT HuntGroupID FROM HuntGroupDetail WHERE AgentID = a.account_id ) LIMIT 0,1) AS closetime,(SELECT (COUNT(id)) FROM tf_cdr WHERE AgentID=a.account_id AND (CallStartTime)>= "'+data.startdate+' 00:00:00" AND DATE(CallStartTime) <= "'+data.enddate+' 23:59:59" AND CallTalkTime>0) AS answercalls,(SELECT (COUNT(id)) FROM tf_cdr WHERE AgentID=a.account_id AND (CallStartTime)>= "'+data.startdate+' 00:00:00" AND (CallStartTime) <= "'+data.enddate+' 23:59:59" AND CallTypeID IN(0,1)) AS outboundcalls,(SELECT (COUNT(id)) FROM tf_cdr WHERE AgentID=a.account_id AND (CallStartTime)>= "'+data.startdate+' 00:00:00" AND (CallStartTime) <= "'+data.enddate+' 23:59:59" AND CallTalkTime>0 AND CallTypeID IN(0,1)) AS outboundconnectcalls,(SELECT (COUNT(id)) FROM tf_cdr WHERE AgentID=a.account_id AND (CallStartTime)>= "'+data.startdate+' 00:00:00" AND (CallStartTime) <= "'+data.enddate+' 23:59:59" AND  CallTypeID=2) AS inboundcalls,(SELECT COUNT(c.id) FROM tf_cdr c LEFT JOIN tf_agent_missedcall m ON c.id=m.cdrid WHERE m.calldate >="'+data.startdate+' 00:00:00" AND m.calldate <="'+data.enddate+' 23:59:59" AND c.AgentID=a.account_id ORDER BY m.calldate DESC) AS missedcalls  FROM tf_account_table a WHERE account_id IN (SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id='+data.userid+' AND agentid IS NOT NULL AND agentid!="" AND agentid!=0);', callback);
        //return db.query('SELECT a.account_id,a.account_name,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM tf_breaktime b WHERE account_id=a.account_id AND start_time >= "' + date.startdate + '  00:00:00" AND start_time <= "' + date.enddate + ' 23:59:59" ) AS breaktime,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS holdcalltime FROM tf_callingpausetime b WHERE account_id=a.account_id AND b.date >= "' + date.startdate + ' " AND b.date <= "' + date.enddate + ' " AND b.status=1 AND b.reason_id IN (SELECT reason_id FROM tf_hold_calling_reason WHERE ACW=1) ) AS totalholdcalltime ,  (SELECT (SUM(AgentTalkTime)) FROM tf_cdr WHERE AgentID=a.account_id AND (CallStartTime) >= "' + date.startdate + '  00:00:00" AND (CallStartTime) <= "' + date.enddate + '  23:59:59") AS talktime,(SELECT (COUNT(id)) FROM tf_cdr WHERE AgentID=a.account_id AND (CallStartTime) >= "' + date.startdate + '  00:00:00" AND (CallStartTime) <= "' + date.enddate + '  23:59:59" AND CallTypeID IN (0,1,2)) AS totalcalls,(SELECT WrapUpTime FROM HuntGroup WHERE GroupID IN (SELECT HuntGroupID FROM HuntGroupDetail WHERE AgentID = a.account_id ) LIMIT 0,1) AS wrapuptime,(SELECT CloseTime FROM HuntGroup WHERE GroupID IN (SELECT HuntGroupID FROM HuntGroupDetail WHERE AgentID = a.account_id ) LIMIT 0,1) AS closetime,(SELECT (COUNT(id)) FROM tf_cdr WHERE AgentID=a.account_id AND (CallStartTime)>= "' + date.startdate + '  00:00:00" AND DATE(CallStartTime) <= "' + date.enddate + '  23:59:59" AND CallTalkTime>0) AS answercalls,(SELECT (COUNT(id)) FROM tf_cdr WHERE AgentID=a.account_id AND (CallStartTime)>= "' + date.startdate + '  00:00:00" AND (CallStartTime) <= "' + date.enddate + '  23:59:59" AND CallTypeID IN(0,1)) AS outboundcalls,(SELECT (COUNT(id)) FROM tf_cdr WHERE AgentID=a.account_id AND (CallStartTime)>= "' + date.startdate + '  00:00:00" AND (CallStartTime) <= "' + date.enddate + '  23:59:59" AND CallTalkTime>0 AND CallTypeID IN(0,1)) AS outboundconnectcalls,(SELECT (COUNT(id)) FROM tf_cdr WHERE AgentID=a.account_id AND (CallStartTime)>= "' + date.startdate + '  00:00:00" AND (CallStartTime) <= "' + date.enddate + '  23:59:59" AND  CallTypeID=2) AS inboundcalls,(SELECT COUNT(c.id) FROM tf_cdr c LEFT JOIN tf_agent_missedcall m ON c.id=m.cdrid WHERE m.calldate >="' + date.startdate + '  00:00:00" AND m.calldate <="' + date.enddate + '  23:59:59" AND c.AgentID=a.account_id ORDER BY m.calldate DESC) AS missedcalls  FROM tf_account_table a WHERE account_id IN (SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id=' + date.userid + ' AND agentid IS NOT NULL AND agentid!="" AND agentid!=0)', callback);
        // old 
        //return db.query('SELECT a.account_id,a.account_name,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM `tf_breaktime` b WHERE account_id=a.account_id AND start_time >= "'+date.startdate+' 00:00:00" AND start_time <= "'+date.enddate+' 23:59:59" ) AS breaktime,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS holdcalltime FROM `tf_callingpausetime` b WHERE account_id=a.account_id AND b.date >= "'+date.startdate+'" AND b.date <= "'+date.enddate+'" AND b.status=1 AND b.reason_id IN (SELECT reason_id FROM tf_hold_calling_reason WHERE ACW=1) ) AS totalholdcalltime ,  (SELECT (SUM(AgentTalkTime)) FROM `tf_cdr` WHERE AgentID=a.account_id AND (CallStartTime) >= "'+date.startdate+' 00:00:00" AND (CallStartTime) <= "'+date.enddate+' 23:59:59") AS talktime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND (CallStartTime) >= "'+date.startdate+' 00:00:00" AND (CallStartTime) <= "'+date.enddate+' 23:59:59" AND CallTypeID IN (0,1,2)) AS totalcalls,(SELECT WrapUpTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) LIMIT 0,1) AS wrapuptime,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) LIMIT 0,1) AS closetime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND (CallStartTime)>= "'+date.startdate+' 00:00:00" AND DATE(CallStartTime) <= "'+date.enddate+' 23:59:59" AND CallTalkTime>0) AS answercalls,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND (CallStartTime)>= "'+date.startdate+' 00:00:00" AND (CallStartTime) <= "'+date.enddate+' 23:59:59" AND CallTypeID=0) AS outboundcalls,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND (CallStartTime)>= "'+date.startdate+' 00:00:00" AND (CallStartTime) <= "'+date.enddate+' 23:59:59" AND CallTypeID=1) AS dialercalls,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND (CallStartTime)>= "'+date.startdate+' 00:00:00" AND (CallStartTime) <= "'+date.enddate+' 23:59:59" AND CallTalkTime>0 AND CallTypeID=0) AS outboundconnectcalls,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND (CallStartTime)>= "'+date.startdate+' 00:00:00" AND (CallStartTime) <= "'+date.enddate+' 23:59:59" AND  CallTypeID=2) AS inboundcalls,(SELECT COUNT(c.id) FROM `tf_cdr` c LEFT JOIN `tf_agent_missedcall` m ON c.id=m.cdrid WHERE m.calldate >="'+date.startdate+' 00:00:00" AND m.calldate <="'+date.enddate+' 23:59:59" AND c.AgentID=a.account_id ORDER BY m.calldate DESC) AS missedcalls  FROM tf_account_table a WHERE account_id IN (SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id='+date.userid+' AND agentid IS NOT NULL AND agentid!="" AND agentid!=0)',callback);
    },
    agentsupervisiorHoldCallingReasonSummaryData: function (data, callback) {
        //console.log('SELECT t.account_id,a.account_name,t.start_time,t.stop_time,H.reason_name,t.date FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND t.account_id IN (SELECT account_id FROM `tf_account_table` WHERE created_by = ' + data.userid + ')');
        if (data.type == 0) {
            var where = "";
            if (data.agentid) {
                where += "  AND  t.account_id=" + data.agentid;
            }
            return db.query('SELECT t.account_id,a.account_name,SEC_TO_TIME(SUM(TIMEDIFF(t.stop_time,t.start_time))) AS holdtime,H.reason_name,t.date FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE t.reason_id IS NOT NULL  AND (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND ACW=1 AND t.account_id IN (SELECT account_id FROM `tf_account_table` WHERE account_id IN (SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id=' + data.userid + ' AND agentid IS NOT NULL AND agentid!="" AND agentid!=0)) GROUP BY t.account_id', [], callback);
        } else {
            var where = "";
            if (data.agentid) {
                where += " and  t.account_id=" + data.agentid;
            }
            return db.query('SELECT t.account_id,a.account_name,SEC_TO_TIME(SUM(TIMEDIFF(t.stop_time,t.start_time))) AS holdtime,H.reason_name,t.date FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE t.reason_id IS NOT NULL   AND (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND t.account_id IN (SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id=' + data.userid + ' AND agentid IS NOT NULL AND agentid!="" AND agentid!=0) GROUP BY t.account_id', [], callback);
        }
    },
    agentsupervisiorHoldCallingReasonData: function (data, callback) {
        if (data.type == 0) {
            var where = "";
            if (data.agentid) {
                where += " AND  t.account_id=" + data.agentid;
            }
            return db.query('SELECT t.account_id,a.account_name,t.start_time,t.stop_time,H.reason_name,t.date FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE t.reason_id IS NOT NULL   AND (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND ACW=1 AND t.account_id IN (SELECT account_id FROM `tf_account_table` WHERE account_id IN (SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id=' + data.userid + ' AND agentid IS NOT NULL AND agentid!="" AND agentid!=0))', [], callback);
        } else {
            var where = "";
            if (data.agentid) {
                where += "AND  t.account_id=" + data.agentid;
            }
            return db.query('SELECT t.account_id,a.account_name,SEC_TO_TIME(SUM(TIMEDIFF(t.stop_time,t.start_time))) AS holdtime,H.reason_name,t.date FROM tf_callingpausetime t INNER JOIN tf_account_table a ON a.account_id=t.account_id LEFT JOIN tf_hold_calling_reason H ON H.reason_id=t.reason_id WHERE t.reason_id IS NOT NULL   AND (DATE(t.date) >= "' + data.startdate + '" AND DATE(t.date) <= "' + data.enddate + '") AND t.account_id IN (SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id=' + data.userid + ' AND agentid IS NOT NULL AND agentid!="" AND agentid!=0) GROUP BY t.account_id', [], callback);
        }
    },
    getsupervisioragentloginlogoutdata: function (data, callback) {
        return db.query('SELECT t.uid,a.account_name,t.date AS logintime,(SELECT logout_time FROM tf_loginactivity WHERE uid=t.uid AND DATE(DATE)=DATE(t.date) ORDER BY id DESC LIMIT 1) AS logout_time,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(logout_time, DATE)))) AS time_diff FROM tf_loginactivity WHERE uid=t.uid AND DATE(DATE)=DATE(t.date)) AS totaltime,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM tf_breaktime b WHERE account_id=t.uid AND DATE(start_time)=DATE(t.date)) AS breaktime,(SELECT CloseTime FROM HuntGroup WHERE GroupID IN (SELECT HuntGroupID FROM HuntGroupDetail WHERE AgentID = t.uid ) LIMIT 0,1) AS closetime FROM tf_loginactivity t LEFT JOIN tf_account_table a ON a.account_id=t.uid WHERE t.date BETWEEN "' + data.startdate + ' 00:00:00" AND "' + data.enddate + ' 23:59:59" AND t.uid IN (SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id=' + data.userid + ' AND agentid IS NOT NULL AND agentid!="" AND agentid!=0) GROUP BY t.uid,DATE(t.date)', callback)
        // return db.query('SELECT t.uid,a.account_name,t.date AS logintime,(SELECT logout_time FROM tf_loginactivity WHERE uid=t.uid AND DATE(DATE)=DATE(t.date) ORDER BY id DESC LIMIT 1) AS logout_time,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(logout_time, DATE)))) AS TIMEDIFF FROM tf_loginactivity WHERE uid=t.uid AND DATE(DATE)=DATE(t.date)) AS totaltime,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS breaktime FROM tf_breaktime b WHERE account_id=t.uid AND DATE(start_time)=DATE(t.date)) AS breaktime,(SELECT SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(stop_time, start_time)))) AS totalholdcalltime FROM tf_callingpausetime WHERE account_id=t.uid AND DATE(DATE)=DATE(t.date) AND STATUS=1 AND reason_id IN (SELECT reason_id FROM tf_hold_calling_reason WHERE ACW=1)) AS totalholdcalltime,(SELECT CloseTime FROM HuntGroup WHERE GroupID IN (SELECT HuntGroupID FROM HuntGroupDetail WHERE AgentID = t.uid ) LIMIT 0,1) AS closetime FROM tf_loginactivity t INNER JOIN tf_account_table a ON a.account_id=t.uid WHERE t.date >= "'+data.startdate+' 00:00:00" AND t.date <= "'+data.enddate+' 23:59:59" AND t.uid IN (SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id='+data.userid+' AND agentid IS NOT NULL AND agentid!="" AND agentid!=0) GROUP BY t.uid,DATE(t.date)',callback)
    },
    get_supervisior_agentcalldurationdata: function (data, callback) {
        return db.query('SELECT A.account_name,A.account_id,IFNULL(COUNT(IF(AgentID=A.account_id AND CallTypeID=1,1,NULL)),0) AS totaldialer,IFNULL(SUM(IF(AgentID=A.account_id AND CallTypeID=1 AND CallTalkTime>0,CallTalkTime,0)),0) AS dialerduration, IFNULL(COUNT(IF(AgentID=A.account_id AND CallTypeID=1 AND AgentTalkTime>0,1,NULL)),0) AS dialerconnectcalls,IFNULL(COUNT(IF(AgentID=A.account_id AND CallTypeID=2,1,NULL)),0) AS totalincoming, IFNULL(SUM(IF(AgentID=A.account_id AND CallTypeID=2 AND CallTalkTime>0,CallTalkTime,0)),0) AS incomingduration, IFNULL(COUNT(IF(AgentID=A.account_id AND CallTypeID=2 AND AgentTalkTime>0,1,NULL)),0) AS incomingconnectcalls,IFNULL(COUNT(IF(AgentID=A.account_id AND CallTypeID=0,1,NULL)),0) AS totaloutgoing,IFNULL(SUM(IF(AgentID=A.account_id AND CallTypeID=0 AND CallTalkTime>0,CallTalkTime,0)),0) AS outgoingduration,IFNULL(COUNT(IF(AgentID=A.account_id AND CallTypeID=0 AND AgentTalkTime>0,1,NULL)),0) AS outgoingconnectcalls,IFNULL(SUM(IF(AgentID=A.account_id AND CallTalkTime>0,CallTalkTime,0)),0) AS totalduration,IFNULL(COUNT(IF(AgentID=A.account_id AND AgentTalkTime>0,1,NULL)),0) AS totalconnectcalls,IFNULL(COUNT(id),0) AS totalcalls FROM tf_account_table A LEFT JOIN tf_cdr C ON C.AgentID=A.account_id WHERE A.account_id IN (SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id=' + data.userid + ' AND agentid IS NOT NULL AND agentid!="" AND agentid!=0) AND CallStartTime BETWEEN "' + data.startdate + ' 00:00:00" AND "' + data.enddate + ' 23:59:59" GROUP BY A.account_id;', callback);
        //return db.query('SELECT A.account_name,A.account_id,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=1 AND (DATE(CallStartTime) >= "'+data.startdate+'" AND DATE(CallStartTime) <="'+data.enddate+'")) AS totaldialer,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=1 AND (DATE(CallStartTime) >= "'+data.startdate+'" AND DATE(CallStartTime) <="'+data.enddate+'") AND CallStatus="TALKTOAGENT") AS dialerduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=1 AND (DATE(CallStartTime) >= "'+data.startdate+'" AND DATE(CallStartTime) <= "'+data.enddate+'") AND CallStatus="TALKTOAGENT") AS dialerconnectcalls,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=2 AND (DATE(CallStartTime) >= "'+data.startdate+'" AND DATE(CallStartTime) <="'+data.enddate+'")) AS totalincoming,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=2 AND (DATE(CallStartTime) >= "'+data.startdate+'" AND DATE(CallStartTime) <="'+data.enddate+'") AND CallTalkTime>0) AS incomingduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=2 AND (DATE(CallStartTime) >= "'+data.startdate+'" AND DATE(CallStartTime) <="'+data.enddate+'") AND CallTalkTime>0) AS incomingconnectcalls, (SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=0 AND (DATE(CallStartTime) >= "'+data.startdate+'" AND DATE(CallStartTime) <="'+data.enddate+'")) AS totaloutgoing,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=0 AND (DATE(CallStartTime) >= "'+data.startdate+'" AND DATE(CallStartTime) <="'+data.enddate+'") AND CallStatus="ANSWER" ) AS outgoingduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND CallTypeID=0 AND (DATE(CallStartTime) >= "'+data.startdate+'" AND DATE(CallStartTime) <="'+data.enddate+'") AND CallStatus="ANSWER") AS outgoingconnectcalls,(SELECT SUM(CallTalkTime) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) >= "'+data.startdate+'" AND DATE(CallStartTime) <="'+data.enddate+'") AND (CallStatus="ANSWER" OR CallStatus="TALKTOAGENT")) AS totalduration,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) >= "'+data.startdate+'" AND DATE(CallStartTime) <="'+data.enddate+'") AND (CallStatus="ANSWER" OR CallStatus="TALKTOAGENT" ) AND CallTalkTime>0) AS totalconnectcalls,(SELECT COUNT(id) FROM tf_cdr WHERE AgentID=A.account_id AND (DATE(CallStartTime) >= "'+data.startdate+'" AND DATE(CallStartTime) <="'+data.enddate+'")) AS totalcalls FROM `tf_account_table` A LEFT JOIN tf_cdr C ON C.AgentID=A.account_id WHERE A.account_id IN (SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id='+data.userid+' AND agentid IS NOT NULL AND agentid!="" AND agentid!=0) AND DATE(C.CallStartTime) >= "'+data.startdate+'" AND  DATE(C.CallStartTime) <="'+data.enddate+'" GROUP BY A.account_id',callback);
    },
    getsupervisiorCampaignData: function (data, callback) {
        return db.query('SELECT campaign_name,created_date,campaign_id,total_contacts,total_calls,answered,not_answered,scheduled,not_interested,IFNULL(ROUND(answered/total_calls*100),0)AS connected_ratio FROM (SELECT c.cam_name AS campaign_name,DATE(c.create_date) AS created_date,c.camid AS campaign_id,COUNT(cont_id) AS total_contacts,(SELECT COUNT(*) FROM tf_campaigns_numbers AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") AS total_calls,(SELECT COUNT(*)  FROM tf_campaigns_numbers AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  AND cdr.CallStatus="ANSWER" AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") AS answered,(SELECT COUNT(*) FROM tf_campaigns_numbers AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid =c1.numid WHERE c1.cam_id = c.camid AND (cdr.CallStatus!="ANSWER") AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") AS not_answered,(SELECT COUNT(*)  FROM tf_campaigns_numbers AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  AND cdr.feedback="schedule" AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") AS scheduled,(SELECT COUNT(*)  FROM tf_campaigns_numbers AS c1 LEFT JOIN tf_cdr AS cdr ON cdr.auto_numid=c1.numid WHERE c1.cam_id = c.camid  AND cdr.feedback="not interested" AND DATE(CallStartTime)>="' + data.startdate + '" AND DATE(CallStartTime)<="' + data.enddate + '") AS not_interested FROM tf_campaigns_numbers AS cn LEFT JOIN tf_campaigns AS c ON c.camid=cn.cam_id WHERE c.created_by =' + data.userid + ' AND  DATE(cn.date) BETWEEN "' + data.startdate + '" AND "' + data.enddate + '"  GROUP BY cam_id)AS g', callback)
    },
    getsupervisiordispositioncampaign: function (data, callback) {
        return db.query('SELECT cam_name,camid FROM tf_campaigns WHERE created_by =' + data.userid + ' ORDER BY camid DESC', callback);
    },
    get_supervisior_campaign_disposition_data: function (data, callback) {
        var where = 'supervisor_account_id=' + data.userid + ')';

        if (data.startdate != '1970-01-01' && data.enddate != '1970-01-01') {
            where += ' AND (DATE(CDR.CallStartTime) BETWEEN "' + data.startdate + '" AND "' + data.enddate + '")';
        }
        if (data.campaignid > 0) {
            where += ' AND C.camid=' + data.campaignid;
        }
        return db.query('SELECT COUNT(CDR.id) AS count,C.cam_name,C.camid,CDR.feedback FROM `tf_cdr` CDR LEFT JOIN tf_campaigns_numbers CN ON CN.numid=CDR.auto_numid LEFT JOIN tf_campaigns C ON C.camid=CN.cam_id WHERE C.account_id IN(SELECT userid FROM tf_supervisor_agents WHERE ' + where + ' GROUP BY CDR.feedback ORDER BY C.cam_name DESC', [], callback);

    },
    get_supervisior_agent_login_activity: function (data, callback) {
        where = 'DATE(DATE)>="' + data.startdate + '" AND DATE(DATE)<= "' + data.enddate + '" AND a.account_id IN (SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id=' + data.userid + ' AND agentid IS NOT NULL AND agentid!="" AND agentid!=0) ';
        if (data.agentid > 0) {
            where += ' AND la.uid=' + data.agentid;
        }
        return db.query('SELECT la.id,la.uid,la.date,la.date AS login,la.logout_time AS logout,la.ip,a.account_name AS agent FROM `tf_loginactivity` la LEFT JOIN `tf_account_table` a ON la.uid=a.account_id WHERE ' + where + ' ORDER BY DATE DESC', [], callback);

    },
    get_agent_callduration_talktime: function (data, callback) {
        return db.query("SELECT SUM(calltalktime)as CallTalkTime,SUM(AgentTalkTime)as AgentTalkTime FROM tf_cdr WHERE accountid=" + data.userid + " AND CallStartTime BETWEEN CONCAT('" + data.startdate + "',' 00:00:00') AND CONCAT('" + data.enddate + "',' 23:59:59')", callback)
    },
    gettotalholdcalltime: function (filter, agentid) {
        return new Promise(function (resolve, reject) {
            db.query('(SELECT SUM(TIMESTAMPDIFF(SECOND, b.start_time,b.stop_time)) AS holdtime  FROM `tf_callingpausetime` b WHERE account_id=' + agentid + ' AND b.date >= "' + filter.startdate + '" AND b.date <= "' + filter.enddate + '" and b.status=1 AND b.reason_id IN (SELECT reason_id FROM tf_hold_calling_reason where ACW=1))', [], function (err, results) {
                if (err) {
                    resolve(0);
                } else {
                    if (results.length > 0) {
                        resolve(results[0].holdtime);
                    } else {
                        resolve(0);
                    }
                }
            })
        })
    },
    segement_wise_call_log: function (data, callback) {
        if (data.category) {
            return db.query("SELECT a.DID AS  DID,a.AgentName AS AgentName ,a.AgentNumber as AgentNumber,a.CallStartTime AS CallStartTime,a.callername AS CallerName,a.callernumber AS CallerNumber,a.calltalktime AS CallTalkTime,a.calltype AS CallType,a.AgentTalkTime as AgentTalkTime,a.DisconnectedBy as DisconnectedBy,a.CallPluse AS call_pulse,a.callstatus AS CallStatus,a.AgentStatus as AgentStatus,a.cont_id ,b.category,c.name AS segment_name FROM tf_cdr a LEFT JOIN tf_contacts b ON a.cont_id=b.cont_id LEFT JOIN tf_segments c ON b.category=c.cont_id WHERE a.accountid=" + data.userid + " AND a.CallStartTime BETWEEN '" + data.startdate + " 00:00:00' AND '" + data.enddate + " 23:59:59' AND b.category='" + data.category + "' ORDER BY CallStartTime", callback)

        }
        else {
            return db.query("SELECT a.DID AS  DID,a.AgentName AS AgentName ,a.AgentNumber as AgentNumber,a.CallStartTime AS CallStartTime,a.callername AS CallerName,a.callernumber AS CallerNumber,a.calltalktime AS CallTalkTime,a.calltype AS CallType,a.AgentTalkTime as AgentTalkTime,a.DisconnectedBy as DisconnectedBy,a.CallPluse AS call_pulse,a.callstatus AS CallStatus,a.AgentStatus as AgentStatus,a.cont_id ,b.category,c.name AS segment_name FROM tf_cdr a LEFT JOIN tf_contacts  b ON a.cont_id=b.cont_id LEFT JOIN tf_segments c ON b.category=c.cont_id  WHERE a.accountid=" + data.userid + " AND a.CallStartTime BETWEEN '" + data.startdate + " 00:00:00' AND '" + data.enddate + " 23:59:59' AND b.category IN(SELECT DISTINCT(cont_id) FROM tf_segments WHERE customer_id=" + data.userid + ") ORDER BY CallStartTime", callback);
        }
    },
    incoming_misscall_reports: function (data, callback) {
        return db.query("SELECT DID,AgentName,AgentNumber,CallStartTime AS Call_Time,callername AS Caller_Name,callernumber AS Caller_Number,calltalktime AS TalkTime,calltype AS Call_Type,AgentTalkTime,DisconnectedBy,CallPluse AS call_pulse,callstatus AS callstatus,AgentStatus FROM tf_cdr WHERE accountid=" + data.userid + " AND CallStartTime BETWEEN '" + data.startdate + " 00:00:00' AND '" + data.enddate + " 23:59:59' AND agenttalktime=0 AND calltypeid=2 ORDER BY CallStartTime", callback);
    },
    new_caller_report: function (data, callback) {
        return db.query("SELECT DID,AgentName,AgentNumber,CallStartTime AS Call_Time,callername AS Caller_Name,callernumber AS Caller_Number,calltalktime AS TalkTime,calltype AS Call_Type,AgentTalkTime,DisconnectedBy,CallPluse AS call_pulse,callstatus AS callstatus,AgentStatus FROM tf_cdr WHERE accountid=" + data.userid + " AND CallStartTime BETWEEN '" + data.startdate + " 00:00:00' AND '" + data.enddate + " 23:59:59' AND callernumber NOT IN (SELECT callernumber FROM tf_cdr WHERE DATE(CallStartTime)<DATE(NOW()) AND accountid=" + data.userid + " ORDER BY CallStartTime)", callback);
    },
    getxlncagentperformancedata: function (data, callback) {
        //console.log("SELECT a.account_id,a.account_name,(SELECT SUM(TIMESTAMPDIFF(SECOND,b.start_time,b.stop_time)) AS breaktime FROM `tf_breaktime` b WHERE account_id=a.account_id AND DATE BETWEEN '"+data.startdate+"' AND '"+data.enddate+"' AND break_status=1) AS breaktime,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time,b.start_time)))) AS holdcalltime FROM `tf_callingpausetime` b WHERE account_id=a.account_id AND b.date >= '"+data.startdate+"' AND b.date <= '"+data.enddate+"'  AND b.status=1 AND b.reason_id IS NOT NULL AND b.reason_id!=0) AS holdcalltime,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS holdcalltime FROM `tf_callingpausetime` b WHERE account_id=a.account_id AND b.date >= '"+data.startdate+"' AND b.date <= '"+data.enddate+"' AND b.status=1 AND b.reason_id IN (SELECT reason_id FROM tf_hold_calling_reason WHERE ACW=1) ) AS totalholdcalltime,(SELECT (SUM(callduration)) FROM `tf_cdr` WHERE AgentID=a.account_id AND  CallStartTime BETWEEN '"+data.startdate+" 00:00:00' AND '"+data.enddate+" 23:59:59') AS talktime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND  CallStartTime BETWEEN '"+data.startdate+" 00:00:00' AND '"+data.enddate+" 23:59:59' AND CallTypeID IN (0,1)) AS totalcalls,(SELECT WrapUpTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) LIMIT 0,1) AS wrapuptime,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) LIMIT 0,1) AS closetime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND  CallStartTime BETWEEN '"+data.startdate+" 00:00:00' AND '"+data.enddate+" 23:59:59' AND CallTalkTime>0) AS answercalls,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND (CallStartTime)>=  CallStartTime BETWEEN '"+data.startdate+" 00:00:00' AND '"+data.enddate+" 23:59:59' AND CallTypeID=0) AS outboundcalls,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND (CallStartTime)>=  CallStartTime BETWEEN '"+data.startdate+" 00:00:00' AND '"+data.enddate+" 23:59:59' AND CallTalkTime>0 AND CallTypeID=0) AS outboundconnectcalls,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND (CallStartTime)>=  CallStartTime BETWEEN '"+data.startdate+" 00:00:00' AND '"+data.enddate+" 23:59:59' AND  CallTypeID=2) AS inboundcalls,(SELECT COUNT(c.id) FROM `tf_cdr` c LEFT JOIN `tf_agent_missedcall` m ON c.id=m.cdrid WHERE m.calldate BETWEEN '"+data.startdate+" 00:00:00' AND '"+data.enddate+" 23:59:59' AND c.AgentID=a.account_id ORDER BY m.calldate DESC) AS missedcalls FROM tf_account_table a WHERE a.created_by = "+data.userid+" AND a.is_deleted='no' AND a.current_status=0;");
        return db.query("SELECT a.account_id,a.account_name,(SELECT SUM(TIMESTAMPDIFF(SECOND,b.start_time,b.stop_time)) AS breaktime FROM `tf_breaktime` b WHERE account_id=a.account_id AND DATE BETWEEN '" + data.startdate + "' AND '" + data.enddate + "' AND break_status=1) AS breaktime,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time,b.start_time)))) AS holdcalltime FROM `tf_callingpausetime` b WHERE account_id=a.account_id AND b.date >= '" + data.startdate + "' AND b.date <= '" + data.enddate + "' AND b.status=1 AND b.reason_id IS NOT NULL AND b.reason_id!=0) AS holdcalltime,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time, b.start_time)))) AS holdcalltime FROM `tf_callingpausetime` b WHERE account_id=a.account_id AND b.date >= '" + data.startdate + "' AND b.date <= '" + data.enddate + "' AND b.status=1 AND b.reason_id IN (SELECT reason_id FROM tf_hold_calling_reason WHERE ACW=1) ) AS totalholdcalltime,(SELECT (SUM(callduration)) FROM `tf_cdr` WHERE AgentID=a.account_id AND  CallStartTime BETWEEN '" + data.startdate + " 00:00:00' AND '" + data.enddate + " 23:59:59') AS talktime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND  CallStartTime BETWEEN '" + data.startdate + " 00:00:00' AND '" + data.enddate + " 23:59:59' AND CallTypeID IN (0,1)) AS totalcalls,(SELECT WrapUpTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) LIMIT 0,1) AS wrapuptime,(SELECT CloseTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) LIMIT 0,1) AS closetime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND  CallStartTime BETWEEN '" + data.startdate + " 00:00:00' AND '" + data.enddate + " 23:59:59' AND CallTalkTime>0) AS answercalls,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND CallStartTime BETWEEN '" + data.startdate + " 00:00:00' AND '" + data.enddate + " 23:59:59' AND CallTypeID=0) AS outboundcalls,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND  CallStartTime BETWEEN '" + data.startdate + " 00:00:00' AND '" + data.enddate + " 23:59:59' AND CallTalkTime>0 AND CallTypeID=0) AS outboundconnectcalls,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND CallStartTime BETWEEN '" + data.startdate + " 00:00:00' AND '" + data.enddate + " 23:59:59' AND  CallTypeID=2) AS inboundcalls,(SELECT COUNT(c.id) FROM `tf_cdr` c LEFT JOIN `tf_agent_missedcall` m ON c.id=m.cdrid WHERE m.calldate BETWEEN '" + data.startdate + " 00:00:00' AND '" + data.enddate + " 23:59:59' AND c.AgentID=a.account_id ORDER BY m.calldate DESC) AS missedcalls FROM tf_account_table a WHERE a.created_by = " + data.userid + " AND a.is_deleted='no' AND a.current_status=0;", [], callback);
    },
    supervisior_xlncagentPerformanceData: function (date, callback) {
        return db.query("SELECT a.account_id,a.account_name,(SELECT SUM(TIMESTAMPDIFF(SECOND,b.start_time,b.stop_time)) AS breaktime FROM `tf_breaktime` b WHERE  account_id=a.account_id AND DATE BETWEEN '" + date.startdate + "' AND '" + date.enddate + "' AND break_status=1) AS breaktime,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time,b.start_time)))) AS holdcalltime FROM `tf_callingpausetime` b WHERE account_id=a.account_id AND b.date >= '" + date.startdate + "' AND b.date <= '" + date.enddate + "'  AND b.status=1 AND b.reason_id IS NOT NULL AND b.reason_id!=0) AS holdcalltime,(SELECT (SUM(TIME_TO_SEC(TIMEDIFF(b.stop_time,b.start_time)))) AS holdcalltime FROM `tf_callingpausetime` b WHERE account_id=a.account_id AND b.date >= '" + date.startdate + "' AND b.date <= '" + date.enddate + "' AND b.status=1 AND b.reason_id IN (SELECT reason_id FROM tf_hold_calling_reason WHERE ACW=1) ) AS totalholdcalltime,(SELECT (SUM(callduration)) FROM `tf_cdr` WHERE AgentID=a.account_id AND CallStartTime BETWEEN '" + date.startdate + " 00:00:00' AND '" + date.enddate + " 23:59:59') AS talktime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND CallStartTime BETWEEN '" + date.startdate + " 00:00:00' AND '" + date.enddate + " 23:59:59' AND CallTypeID IN (0,1)) AS totalcalls,(SELECT WrapUpTime FROM `HuntGroup` WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` = a.account_id ) LIMIT 0,1) AS wrapuptime,(SELECT CloseTime FROM `HuntGroup`  WHERE GroupID IN (SELECT HuntGroupID FROM `HuntGroupDetail` WHERE `AgentID` =a.account_id ) LIMIT 0,1) AS closetime,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND  CallStartTime BETWEEN '" + date.startdate + " 00:00:00' AND '" + date.enddate + " 23:59:59' AND CallTalkTime>0) AS answercalls,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND CallStartTime BETWEEN '" + date.startdate + " 00:00:00' AND '" + date.enddate + " 23:59:59' AND  CallTypeID=0) AS outboundcalls,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE AgentID=a.account_id AND CallStartTime BETWEEN '" + date.startdate + " 00:00:00' AND '" + date.enddate + " 23:59:59' AND CallTalkTime>0 AND CallTypeID=0) AS outboundconnectcalls,(SELECT (COUNT(id)) FROM `tf_cdr` WHERE  AgentID=a.account_id AND CallStartTime BETWEEN '" + date.startdate + " 00:00:00' AND '" + date.enddate + " 23:59:59' AND  CallTypeID=2) AS  inboundcalls,(SELECT COUNT(c.id) FROM `tf_cdr` c LEFT JOIN `tf_agent_missedcall` m ON c.id=m.cdrid WHERE m.calldate BETWEEN '" + date.startdate + " 00:00:00' AND '" + date.enddate + " 23:59:59' AND c.AgentID=a.account_id ORDER BY  m.calldate DESC) AS missedcalls FROM tf_account_table a WHERE account_id IN (SELECT agentid FROM tf_supervisor_agents WHERE supervisor_account_id=" + date.userid + " AND agentid IS NOT NULL AND agentid!='' AND agentid!=0) AND a.is_deleted='no' AND a.current_status=0;", callback);
    },
    getobdpulsereport:function(data,callback){
        return db.query("SELECT IFNULL(SUM(c.callpluse),0) AS pulses,IFNULL(COUNT(IF(c.lastextension='1',1,NULL)),0) AS Pressed1,IFNULL(COUNT(IF(c.lastextension='2',1,NULL)),0) AS Pressed2,IFNULL(COUNT(IF(c.lastextension='3',1,NULL)),0) AS Pressed3,IFNULL(COUNT(IF(c.lastextension='4',1,NULL)),0) AS Pressed4,IFNULL(COUNT(IF(c.lastextension='5',1,NULL)),0) AS Pressed5,IFNULL(COUNT(IF(c.lastextension='6',1,NULL)),0) AS Pressed6,IFNULL(COUNT(IF(c.lastextension='7',1,NULL)),0) AS Pressed7,IFNULL(COUNT(IF(c.lastextension='8',1,NULL)),0) AS Pressed8,IFNULL(COUNT(IF(c.lastextension='9',1,NULL)),0) AS Pressed9 FROM tf_cdr c LEFT JOIN tf_campaigns_numbers cn ON c.auto_numid=cn.numid WHERE c.accountid="+data.userid+" AND c.CallStartTime BETWEEN CONCAT('"+data.startdate+"',' 00:00:00') AND CONCAT('"+data.enddate+"',' 23:59:59')",callback)
    },
    getcommonagentperformnace:function(data,callback){
        var where = 'account_id ='+data.userid;
        if(data.agentid){
            where +=" and agent_id ="+data.agentid
        }
        if(data.startdate != '1970-01-01'){
            where += ' and report_date ="'+data.startdate+'"';
        }
        console.log(" Select * from report_agent_performance where "+where)
        return db.query(" Select * from report_agent_performance where "+where ,callback);
    }


}

module.exports = Report;